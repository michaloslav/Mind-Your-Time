{"version":3,"sources":["MobileViews/BackButton.js","util/TimeCalc.js","TimeSetterDesktop.js","TimeSetterMobile.js","_Context.js","TimeSetter.js","ColorPicker.js","util/makeDaysString.js","MobileViews/MobileInputFields.js","util/validationRegex.js","util/validation.js","DefaultProjectsDaysDialog.js","HOCs/withInputFields.js","HOCs/withAdd.js","MobileViews/AddProjectView.js","HOCs/withEdit.js","MobileViews/EditProjectView.js","AddFab.js","MobileViews/BreaksView.js","SetStartTimeCell.js","ProjectsTableRowEditing.js","SetProgressPopoverContent.js","SetProgressAndPauseButton.js","ChangeProjectStateDropdown.js","ChangeProjectStateCell.js","ProjectsTableTimeCell.js","ProjectsTableRowDisplay.js","ProjectsTableRow.js","AddProjectRow.js","DefaultProjectsDrawer.js","MobileViews/DefaultProjectsView.js","ModeSwitch.js","ProjectsTable.js","TimeStatsModal.js","TimeStats.js","util/makeNewId.js","BreaksDrawer.js","signIn/GoogleSignIn.js","SignInPanel.js","util/defaultValues.js","DevOptionsResetDialog.js","DevOptions.js","signIn/GoogleIcon.js","DropdownMenu.js","ConfettiWrapper.js","ProductivityLineChart.js","Congrats.js","util/getGetParams.js","App.js","HOCs/withDefaultColorsEditing.js","util/settingsConfig.js","Settings.js","About.js","MobileViews/SettingsDefaultColors.js","LinkToRoot.js","DrawerMenu.js","Navbar.js","Footer.js","Router.js","util/objectUtil.js","util/correctDataStructure.js","util/dataValidation.js","DataSync.js","serviceWorker.js","index.js"],"names":["BackButton","props","react_default","a","createElement","IconButton_default","onClick","className","aria-label","ArrowBack_default","TimeCalc","time","result","keepPositiveIfCrossingMidnight","arguments","length","undefined","parseInt","isNaN","console","warn","parsedH","h","m","pm","s","this","isBiggerThan","minutes","setPm","Number","isInteger","Math","round","times","Array","isArray","resultInMinutes","i","toMinutesSinceMidnight","toTimeObject","addToMinutes","apply","time1","time2","subtractToMinutes","showPmOrAm","convert0To12EvenIfNotShowingPmOrAm","timeFormat24H","string","precision","timeInMinutes","orEqual","difference","temp","argument","toString","previousEndTime","previousDuration","settings","exactStartTime","add","bufferTimePercentage","roundTo","sum","average","setTimesForProjects","projects","breaks","startTime","JSON","parse","stringify","middleTimes","plannedTime","start","end","endTime","suggestStartTime","estimatedDuration","j","projectOverlapAreaStart","breakIsInFirstHalf","lengthOfBreak","isValidNumberInput","val","minSize","maxSize","TimeSetter","handleKeyPress","e","key","_this","onEnterPress","id","target","value","maxHValue","onChange","action","incrementation","showError","style","display","Input_default","handleInputChange","bind","firstInputId","placeholder","autoComplete","error","hError","onKeyPress","onKeyDown","handleKeyDown","mError","Select_default","MenuItem_default","Component","TimeSetterMobile","handleChange","date","valInMinutes","getHours","getMinutes","Date","hours","setHours","setMinutes","lib_default","mode","SettingsContext","React","createContext","IsMobileContext","Consumer","isMobile","TimeSetterMobile_TimeSetterMobile","showErrorProp","TimeSetterDesktop_TimeSetter","ColorPicker","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","render","ref","input","colorInput","type","width","xl","height","click","rx","ry","fill","cx","cy","r","state","createRef","dayNames","shortDayNames","joinNames","names","forEach","name","makeDaysString","days","shortVersion","positiveCount","filter","namesArr","negativeDayNames","push","positiveDayNames","MobileInputFields","Grid_default","MobileViews_BackButton","close","buttonTop","title","Typography_default","variant","children","paddingTop","TextField_default","inputValues","onInputChange","showErrors","fullWidth","margin","autoFocus","container","justify","item","xs","duration","src_TimeSetter","onTimeInputChange","startTimeH","startTimeM","endTimeH","endTimeM","ColorPicker_ColorPicker","color","onColorChange","alignItems","Button_default","openDaysDialog","button","validationRegex","projectValidation","project","dontValidateStartTime","valid","errors","breakValidation","breakInfo","DefaultProjectsDaysDialog","Fragment","DialogTitle_default","DialogContent_default","FormGroup_default","map","day","FormControlLabel_default","control","Checkbox_default","checked","assertThisInitialized","label","DialogActions_default","currentTarget","setState","save","withInputFields","WrappedComponent","_Component","handleColorChange","objectSpread","toggleDaysDialog","dialogProjectId","handleDaysChange","wrappedComponent","assign","noProjects","handleTimeInputChange","Dialog_default","open","onClose","aria-labelledby","DefaultProjectsDaysDialog_DefaultProjectsDaysDialog","lastProject","currentTime","defaultVal","lastResortValue","defaultColorIndex","defaultColors","userHasntChangedStartTime","inherits","createClass","isDefaultProjects","suggestedStartTime","areIdentical","suggestedEndTime","test","inputValidation","defineProperty","inputId","newState","toUpperCase","withAdd","_getPrototypeOf2","_len","args","_key","concat","callback","validation","_this$props","newDefaultColorIndex","newInputValues","onAddBreak","onAddProject","MobileViews_MobileInputFields","withEdit","onDoneEditing","window","confirm","delete","Delete_default","AddFab","Fab_default","Add_default","BreaksView","changeView","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","makeString","Edit_default","colSpan","src_AddFab","SetStartTimeCell","htmlFor","_ref","inputProps","step","src_SetStartTimeCell","Done_default","SetProgressPopoverContent","progress","onPause","row","darkTheme","getSeconds","startedWorkingOnIt","SetProgressAndPauseButton","handleClick","anchorEl","Pause_default","Popover_default","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","SetProgressPopoverContent_SetProgressPopoverContent","ChangeProjectStateDropdown","setTimeout","showSetProgress","suggestDone","progressCapped","onProjectStateChange","List_default","icon","el","ListItem_default","ChangeProjectStateCell","content","Undo_default","ChangeProjectStateDropdown_ChangeProjectStateDropdown","SetProgressAndPauseButton_SetProgressAndPauseButton","PlayArrow_default","ProjectsTableTimeCell","cellContent","startIsTooLate","stateClass","endIsTooLate","showEditing","Tooltip_default","disableFocusListener","disableTouchListener","ProjectsTableRowDisplay","timeLeft","endTimeInMinutes","bufferLength","src_ProjectsTableTimeCell","innerWidth","startEditingMobile","startEditing","onDeleteProject","ChangeProjectStateCell_ChangeProjectStateCell","ProjectsTableRow","editing","percentageDone","passThroughProps","_this2","tableRowStyle","backgroundImage","deleteFunc","_this$props2","RootRef_default","rootRef","provided","innerRef","draggableProps","Icon_default","dragHandleProps","src_ProjectsTableRowEditing","src_ProjectsTableRowDisplay","DefaultProjectsDrawer","header","Switch_default","useDefaultProjects","onUseDefaultProjectsChange","mobile","react_beautiful_dnd_esm","onDragEnd","droppableId","droppableProps","draggableId","index","provided2","ProjectsTableRow_ProjectsTableRow","src_AddProjectRow","DefaultProjectsView","passThoughProps","objectWithoutProperties","src_DefaultProjectsDrawer","ModeSwitch","buttons","onModeChange","ProjectsTable","fontWeight","addProjectToDoughnutData","doughnutData","datasets","backgroundColor","data","labels","TimeStatsModal","plannedMinusPredictedEndTime","_props$settings","predictedEndTime","stats","timeNeeded","plannedMinusPredictedEndTimePositive","subtract","realEndTime","totalDoneTimeSoFar","totalTimeToBeDone","predictedUnproductiveTime","breakDuration","durationSoFar","totalTimePassed","timeUntilPredictedEndTime","productivityPercentageSoFar","predictedProductivityPercentage","unproductiveTime","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","textColor","makeFullLengthDurationString","totalProjectTime","totalBufferTime","totalBreakTime","Help_default","es","options","maintainAspectRatio","legend","position","fontColor","TimeStats","updateCurrentTime","currentTimeAvailable","onCurrentTimeChange","openModal","modalOpen","currentTimeUpdateInterval","setInterval","clearInterval","timeRemaining","timeNeededWarning","timeRemainingNegative","timeRemainingWarning","durationLeft","shortLabels","src_TimeStatsModal","makeNewId","objects","newId","haveFoundUniqueId","floor","random","pow","localStorageKey","join","localStorage","BreaksDrawer","validateEndTime","breakId","success","showEndTimeErrors","clearTimeout","addBreak","new","newBreak","onSave","breakDurations","handleSave","handleEnterPress","handleEnterPressNew","deleteBreak","propertyId","findIndex","canClose","values","every","x","splice","GoogleSignIn","responseGoogle","res","log","connect","tokenId","google_login_default","clientId","buttonText","onSuccess","onFailure","SignInPanel","handleDismiss","showDontRemindMeAgain","dismiss","closeDismissMenu","GoogleSignIn_GoogleSignIn","aria-owns","Close_default","Menu_default","dontRemindMeAgain","defaultSettings","showResetButtonAfter","updateTimesAfterDrag","updateTimesAfterEdit","updateTimesAfterDelete","changeModeOnTab","detectBreaksAutomatically","adjustDurationOnPause","offerToAdjustDurationOnDone","defaultDataValues","defaultProjects","defaultColorIndexDefaultProjects","productivityPercentages","lastReset","lastModified","DevOptionsResetDialog","reset","updateData","_arr","keys","_i","update","location","reload","dataItems","DevOptions","export","file","Blob","toLocaleString","filename","toISOString","replace","navigator","msSaveOrOpenBlob","document","url","URL","createObjectURL","href","download","body","appendChild","removeChild","revokeObjectURL","import","accept","addEventListener","path","files","fileReader","FileReader","onloadend","_JSON$parse","readAsText","showAsListItem","ListItemIcon_default","DeveloperMode_default","ListItemText_default","resetDialogOpen","DevOptionsResetDialog_DevOptionsResetDialog","sort","GoogleIcon","viewBox","version","xmlns","y","filterUnits","dx","dy","in","stdDeviation","stroke","strokeWidth","fillRule","transform","d","DropdownMenu","about","history","signIn","signOut","disconnect","aria-haspopup","icons_Menu_default","loggedIn","renderProps","signIn_GoogleIcon","devUnlocked","DevOptions_DevOptions","ConfettiWrapper","confetti_default","active","fireConfetti","config","spread","startVelocity","elementCount","dragFriction","ProductivityLineChart","scale","scaleInMs","lineChartData","borderColor","pointBackgroundColor","scaleBreakpoint","getTime","prodPercArr","_ref4","perc","prevDate","_ref2","lastDateInDataset","dateToAdd","toLocaleDateString","datapointsToShow","ratioToShow","counter","sumCounter","_ref5","avgDate","InputLabel_default","spanGaps","animation","Congrats","entries","b","productivityPercentage","showLineChart","showConfetti","dateString","totalTimeWorkedString","ProductivityLineChart_ProductivityLineChart","ConfettiWrapper_ConfettiWrapper","getGetParams","locationSearch","getParamsString","substr","split","getParams","paramArr","App","setShowResetButton","condition1","condition2","lastResetInMs","lastResetInMinutes","setTime","showResetButton","slice","autodetected","handleEndTimeChange","endTimeErrorTimeout","changeRouterShowErrors","handleRootKeyDown","openBreaksDrawer","preventDefault","changeMode","handleCurrentTimeChange","resetState","closeDrawer","drawerName","dataLabel","newTemp","defaultProjectsDrawerRemoveTransform","saveBreaks","changes","canCloseBreaksDrawer","handleSignInDismiss","signInDissmissed","userHasDismissedSignInBefore","showSignInAgainTimeout","handleSignInDontRemindMeAgain","removeItem","dontShowSignInPanelAgain","openDefaultProjectsDrawer","getDateString","now","closeSnackbar","snackbar","handleProjectPause","changedProject","suggestedDuration","message","handleDoneEditingProject","buttonLabel","dontShowSignInYet","showSignInPanelAfterLoadTimeout","prevProps","allProjectsDone","todaysProdPerc","totalTimeWorked","arrayId","newProject","currentLastProject","dragging","destination","copy","firstStartTime","movedProjectIndex","movedProject","durationChanged","startTimeChanged","prevProjState","view","change","additionalProps","newPath","stopPropagation","isFirst","_i3","_ref3","slicedToArray","pathArr","pathname","obj","_this3","closeFunc","search","MobileViews_AddProjectView","addProject","array","doneEditingFunc","handleDoneEditingBreak","deleteProject","MobileViews_EditProjectView","MobileViews_BreaksView","MobileViews_DefaultProjectsView","handleDragEnd","tabIndex","autoselect","ModeSwitch_ModeSwitch","TimeStats_TimeStats","Provider","src_ProjectsTable","handleProjectStateChange","marginBottom","Autorenew_default","Drawer_default","anchor","BreaksDrawer_BreaksDrawer","src_Congrats","marginTop","react_router_dom","to","Settings_default","DropdownMenu_DropdownMenu","Slide_default","direction","disconnected","mountOnEnter","unmountOnExit","SignInPanel_SignInPanel","Snackbar_default","autoHideDuration","ContentProps","aria-describedby","size","withDefaultColorsEditing","addDefaultColor","newColor","onDefaultColorChange","handleDefaultColorChange","removeDefaultColor","sectionInfo","general","order","detection","misc","inputInfo","section","max","tooltip","Settings","inputs","resetToDefault","handleFirstSectionIconClick","firstSectionIconClickCounter","firstSectionIconClickCounterTimeout","percentage","inputKeys","sectionKeys","_loop","sectionName","inputsInSection","inputKeyArray","find","inputKey","disableRipple","About","rel","Remove_default","LinkToRoot","DrawerMenu","togglePlanningCollapse","planningCollapseOpen","setNavbarState","planningCollapseOpenExplicit","checkActive","returnDontUpdate","pathname0","modeSwitch","Today_default","primary","padding","ExpandLess_default","ExpandMore_default","Collapse_default","timeout","component","disablePadding","navigate","paddingLeft","inset","Work_default","checkActiveTimeout","withRouter","Navbar","drawerOpen","AppBar_default","Toolbar_default","SwipeableDrawer_default","onOpen","src_DrawerMenu","Footer","react_router_hash_link_lib","_default","AppWithProps","App_App","changeShowErrors","SettingsWithProps","src_Settings","SettingsDefaultColorsWithProps","MobileViews_SettingsDefaultColors","Navbar_Navbar","react_router","exact","src_Footer","mergeObjects","oldData","newData","mergedData","oldVal","numberOptional","number","required","boolean","timeObjectOptional","properties","timeObject","isDate","elements","object","projectBaseline","settingsStructure","correctDataStructure_i","correctDataStructure_arr","correctDataStructure_ref5","correctDataStructure_ref2","typeofVal","lastModifiedStructure","primitivesInLastModified","projectBaselineKeys","objectsInLastModified","toConsumableArray","correctDataStructure_i2","correctDataStructure_i3","correctDataStructure_arr2","correctDataStructure_ref6","correctDataStructure_ref4","correctDataStructure_iteratorNormalCompletion","correctDataStructure_didIteratorError","correctDataStructure_iteratorError","correctDataStructure_step","correctDataStructure_iterator","property","__any__","correctDataStructure","getCorrectDataStructureSection","warningMessage","reduce","validatePrimitive","correctDataStructureSection","expectedType","actualType","parseFloat","validateObject","correctedVal","_ref7","objKey","objVal","keyToPass","__lastModifiedSysNote","_arr2","_i2","_ref8","_ref6","propertyKey","propertyValToSet","dataValidation","correctedData","_arr3","_ref11","_ref10","newLastModifiedItems","lastModifiedSysNoteToDates","sysNote","lightTheme","createMuiTheme","palette","main","secondary","green","typography","useNextVariants","DataSync","idToken","io","showDisconnectedError","_this$state","localData","accessToken","emit","dayOfTheWeek","getDay","defProj","projectToInsert","setLastModifiedOfAllProjects","deleteObjectsLocalStorage","arrId","setMultipleLastModified","updatedWhileDisconnected","lastModifiedToSend","setLastModified","objectId","stateObjectIndex","areIdenticalObjects","obj1","obj2","changedIds","changedId","changedObject","startsWithString","except","localStorageKeys","relevantKeys","startsWith","handleUpdateFromServer","lastModifiedKey","_arr4","objectIdKey","_i4","_arr5","_i5","settingsKey","checkForUpdates","SocketIOClient","on","successfulConnectInit","_this$state2","showDisconnectedErrorTimeout","_arr6","_i6","pathArray","pathLength","lastModifiedObj","_this$state3","styles","theme","onFocus","CssBaseline_default","Router_default","SnackbarContent_default","isLocalhost","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","catch","ReactDOM","DataSync_DataSync","getElementById","process","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.88bf55ed.chunk.js","sourcesContent":["import React from 'react'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport '../css/BackButton.css'\r\n\r\nconst BackButton = props => (\r\n  <IconButton onClick={props.onClick} className=\"BackButton\" aria-label=\"Back\">\r\n    <ArrowBackIcon />\r\n  </IconButton>\r\n)\r\n\r\nexport default BackButton\r\n","export default class TimeCalc {\r\n  static toMinutesSinceMidnight(time, keepPositiveIfCrossingMidnight = false){\r\n    let result\r\n\r\n    switch(typeof time){\r\n      // if it's a number, simply return it\r\n      case \"number\":\r\n        result = time\r\n        break;\r\n      // if it's a string, try to parse it\r\n      case \"string\":\r\n        result = parseInt(time)\r\n        if(isNaN(result)){\r\n          console.warn(\"Unexpected input: \", time)\r\n          return\r\n        }\r\n        break;\r\n      case \"object\":\r\n        // handle time.h === 12 (only if pm is set - allows us to count with an amout of time too)\r\n        let parsedH = parseInt(time.h)\r\n        if(parsedH === 12 && \"pm\" in time) parsedH -= 12\r\n\r\n        result = parsedH * 60 + parseInt(time.m)\r\n        if(time.pm) result += 12 * 60\r\n\r\n        if(time.s) result += time.s / 60\r\n\r\n        break;\r\n      // if the typeof is none of the above, throw a warning\r\n      default:\r\n        console.warn(\"Unexpected input: \", time)\r\n        return\r\n    }\r\n\r\n    if(keepPositiveIfCrossingMidnight &&\r\n      this.isBiggerThan(time, 0, true) &&\r\n      this.isBiggerThan(5*60, time, true)\r\n    ) result += 24*60\r\n\r\n    return result\r\n  }\r\n\r\n  // TimeObject is an object with properties h, m, and pm\r\n  static toTimeObject(minutes, setPm = true){\r\n    if(!Number.isInteger(minutes)) minutes = Math.round(minutes) // handle floats\r\n\r\n    // check for am/pm\r\n    let pm = false\r\n    if(setPm){\r\n      while(minutes >= 24 * 60){\r\n        minutes -= 24*60\r\n      }\r\n      if(minutes >= 12 * 60){\r\n        pm = true\r\n        minutes -= 12*60\r\n      }\r\n    }\r\n\r\n    // split hours and minutes\r\n    let m = minutes % 60\r\n    let h = (minutes - m) / 60\r\n\r\n    if(isNaN(h) || isNaN(m)) console.warn(\"NaN result: \", {h, m, pm}) // check for NaN\r\n\r\n    if(setPm) return {h, m, pm}\r\n    else return {h, m}\r\n  }\r\n\r\n  // add and return resultInMinutes\r\n  // used internally\r\n  static addToMinutes(){\r\n    // make both an array input and a spread input acceptable\r\n    let times = Array.isArray(arguments[0]) ? arguments[0] : arguments\r\n\r\n    // convert to minutes and add them up\r\n    let resultInMinutes = 0\r\n    for(let i = 0; i < times.length; i++){\r\n      resultInMinutes += this.toMinutesSinceMidnight(times[i])\r\n    }\r\n\r\n    // accept floats but only return ints\r\n    if(Number.isInteger(resultInMinutes)) return resultInMinutes\r\n    else return Math.round(resultInMinutes)\r\n  }\r\n\r\n  static add(){\r\n    return this.toTimeObject(this.addToMinutes(...arguments))\r\n  }\r\n\r\n  // subtract and return resultInMinutes\r\n  // used internally in subtract and isBiggerThan\r\n  static subtractToMinutes(time1, time2, keepPositiveIfCrossingMidnight = false){\r\n    let mins1 = this.toMinutesSinceMidnight(time1, keepPositiveIfCrossingMidnight)\r\n    let mins2 = this.toMinutesSinceMidnight(time2, keepPositiveIfCrossingMidnight)\r\n    let resultInMinutes = mins1 - mins2\r\n\r\n    // accept floats but return ints\r\n    if(Number.isInteger(resultInMinutes)) return resultInMinutes\r\n    else return Math.round(resultInMinutes)\r\n  }\r\n\r\n  static subtract(time1, time2, keepPositiveIfCrossingMidnight = false){\r\n    let resultInMinutes = this.subtractToMinutes(time1, time2, keepPositiveIfCrossingMidnight)\r\n\r\n    return this.toTimeObject(resultInMinutes, false)\r\n  }\r\n\r\n  // creates a string representation of time (in minutes or as a TimeObject)\r\n  static makeString(time, showPmOrAm = true, convert0To12EvenIfNotShowingPmOrAm = false, timeFormat24H = false){\r\n\r\n    // handle a number input\r\n    if(typeof time === \"number\") time = this.toTimeObject(time, showPmOrAm)\r\n\r\n    let h, m\r\n\r\n    if(timeFormat24H) showPmOrAm = false\r\n\r\n    if(typeof time.m === \"string\") time.m = parseInt(time.m) // handle string input\r\n    if(time.s && time.s > 29) time.m = parseInt(time.m) + 1 // hande time.s\r\n    m = time.m >= 10 ? time.m : \"0\" + time.m // show eg. 6:05, not 6:5\r\n\r\n    // show eg. 12:30, not 0:30 (not applicable for durations)\r\n    h = ((showPmOrAm || convert0To12EvenIfNotShowingPmOrAm) && time.h === 0) ? 12 : parseInt(time.h)\r\n\r\n    // if the user wants a 24-hour time format, use it\r\n    if(timeFormat24H && time.pm) h += 12\r\n\r\n    // handle NaN\r\n    if(isNaN(m)){\r\n      console.warn(\"Wrong input to makeString: \", time);\r\n      return\r\n    }\r\n\r\n    // create and return the actual string\r\n    let string = h + \":\" + m\r\n    if(typeof time.pm !== \"undefined\" && showPmOrAm){\r\n      let pmOrAm = time.pm ? \"PM\" : \"AM\"\r\n      string += \" \" + pmOrAm\r\n    }\r\n    return string\r\n  }\r\n\r\n  static round(time, precision){\r\n    let timeInMinutes = this.toMinutesSinceMidnight(time)\r\n\r\n    // round the minutes\r\n    timeInMinutes = Math.round(timeInMinutes / precision) * precision\r\n\r\n    return this.toTimeObject(timeInMinutes)\r\n  }\r\n\r\n  static isBiggerThan(time1, time2, orEqual = true, keepPositiveIfCrossingMidnight = false){\r\n    let difference = this.subtractToMinutes(time1, time2, keepPositiveIfCrossingMidnight)\r\n    if(orEqual) return difference >= 0\r\n    else return difference > 0\r\n  }\r\n\r\n  // check if all the arguments are identical\r\n  static areIdentical(){\r\n    let temp\r\n\r\n    for(let i = 0; i < arguments.length; i++){\r\n      let argument = arguments[i]\r\n\r\n      // handle NaN\r\n      if(isNaN(argument.h)) argument.h = argument.h.toString()\r\n      if(isNaN(argument.m)) argument.m = argument.m.toString()\r\n\r\n      // handle string input\r\n      if(typeof argument.h === \"string\") argument.h = parseInt(argument.h)\r\n      if(typeof argument.m === \"string\") argument.m = parseInt(argument.m)\r\n\r\n      // if temp is empty -> this is the first argument, store the first temp\r\n      if(!temp){\r\n        temp = argument\r\n        continue\r\n      }\r\n\r\n      // if the temp and the current argument are not identical, return false\r\n      if(argument.h !== temp.h || argument.m !== temp.m || argument.pm !== temp.pm) return false\r\n\r\n      // store the current argument as the new temp\r\n      temp = argument\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  // suggest a start time based on the previous project and the bufferTimePercentage\r\n  static suggestStartTime(previousEndTime, previousDuration, settings){\r\n    let exactStartTime = this.add(previousEndTime, previousDuration * settings.bufferTimePercentage)\r\n\r\n    // round the startTime to the nearest 5 and return\r\n    return this.round(exactStartTime, settings.roundTo)\r\n  }\r\n\r\n  static average(){\r\n    let sum = this.addToMinutes(...arguments)\r\n\r\n    let average = Math.round(sum / arguments.length)\r\n\r\n    return this.toTimeObject(average)\r\n  }\r\n\r\n  // turns eg. {h: 6, m: 30} into \"6 hours and 30 minutes\"\r\n  static makeFullLengthDurationString(time){\r\n    let h = parseInt(time.h)\r\n    let m = parseInt(time.m)\r\n    if(time.pm) h += 12\r\n\r\n    let string = \"\"\r\n    if(h) string += h + \" hour\"\r\n    if(h > 1) string += \"s\"\r\n    if(h && m) string += \" and \"\r\n    if(m) string += m + \" minute\"\r\n    if(m > 1) string += \"s\"\r\n    if(!h && !m) string = \"0 minutes\"\r\n\r\n    return string\r\n  }\r\n}\r\n\r\n// takes ordered projects and sets appropriate times for each of them\r\nexport function setTimesForProjects(projects, settings, breaks, startTime){\r\n\r\n  // PSEUDO CODE: //\r\n  // determine if a project and a break overlay\r\n    // project.startTime < break.startTime && project.endTime > break.startTime\r\n  // prioritize perserving break length or start and end times?\r\n  // project 9:30-11:00, break 10:30-11:00 -> move break to 11:00-11:30\r\n  // project 9:30-10:30, break 9:50-10:00 -> move break to 9:30-9:40, move project to 9:40-10:40\r\n  // first determine if the break is in the first or second half of the project\r\n    // compare the middle of the break to the middle of the project\r\n  // if in the first, move the break to before the project, set project startTime = break[i].endTime\r\n  // if the second, move the break to after the project, set startTime of the next project to break[i].endTime\r\n\r\n  // break the reference to this.state.breaks\r\n  breaks = JSON.parse(JSON.stringify(breaks))\r\n\r\n  // calculate middleTimes beforehand to avoid multiple executions of the same code (-> improves performance)\r\n  if(breaks.length){\r\n    var middleTimes = {projects: [], breaks: []}\r\n    for(let i = 0; i < projects.length; i++) middleTimes.projects[i] = TimeCalc.average(projects[i].plannedTime.start, projects[i].plannedTime.end)\r\n    for(let i = 0; i < breaks.length; i++) middleTimes.breaks[i] = TimeCalc.average(breaks[i].startTime, breaks[i].endTime)\r\n  }\r\n\r\n  for(let i = 0; i < projects.length; i++){\r\n\r\n    if(!projects[i].plannedTime) projects[i].plannedTime = {}\r\n\r\n    // unless this is the first project, adjust the startTime\r\n    if(i !== 0){\r\n      projects[i].plannedTime.start = TimeCalc.suggestStartTime(\r\n        projects[i - 1].plannedTime.end,\r\n        projects[i - 1].estimatedDuration,\r\n        settings\r\n      )\r\n    }\r\n\r\n    // if it is the first project then startTime must equal the one from the state\r\n    else projects[i].plannedTime.start = startTime\r\n\r\n    // set the appropriate endTime\r\n    projects[i].plannedTime.end = TimeCalc.add(projects[i].plannedTime.start, projects[i].estimatedDuration)\r\n\r\n    // loop through the breaks, adjust if one of them overlays with the project\r\n    for(let j = 0; j < breaks.length; j++){\r\n      // if breaks[j] and projects[i] overlay...\r\n      // (we only care about breaks[j].startTime, the endTime is irrelevant here)\r\n      // (projectOverlapAreaStart is a way to handle the scenario of the break starting in the buffer, it also handles i === 0)\r\n      let projectOverlapAreaStart = i === 0 ? projects[i].plannedTime.start : projects[i - 1].plannedTime.end\r\n      if(\r\n        TimeCalc.isBiggerThan(projects[i].plannedTime.end, breaks[j].startTime, true, true) &&\r\n        TimeCalc.isBiggerThan(breaks[j].startTime, projectOverlapAreaStart, true, true)\r\n      ){\r\n        // determine if the break is in the first or second half of the project\r\n        let breakIsInFirstHalf = TimeCalc.isBiggerThan(middleTimes.projects[i], middleTimes.breaks[j], true, true)\r\n\r\n        // get the length of the break\r\n        let lengthOfBreak = TimeCalc.subtractToMinutes(breaks[j].endTime, breaks[j].startTime, true)\r\n\r\n        // if the break is in the first half of the project...\r\n        if(breakIsInFirstHalf){\r\n          // move the break before the project\r\n          // (if it's the first project, there is no, projects[i - 1] -> handles undefined with ternary statement)\r\n          breaks[j].startTime = (i === 0 ? projects[i].plannedTime.start : projects[i - 1].plannedTime.end)\r\n\r\n          // adjust the endTime of the break\r\n          breaks[j].endTime = TimeCalc.add(breaks[j].startTime, lengthOfBreak)\r\n\r\n          // move the project after the break\r\n          if(i === 0) projects[i].plannedTime.start = breaks[j].endTime // if it's the first project, move the startTime after the break\r\n          // else add the buffer\r\n          else projects[i].plannedTime.start = TimeCalc.suggestStartTime(breaks[j].endTime, projects[i-1].estimatedDuration, settings)\r\n          projects[i].plannedTime.end = TimeCalc.add(projects[i].plannedTime.start, projects[i].estimatedDuration)\r\n        }\r\n\r\n        // if the break is in the second half of the project...\r\n        else{\r\n          // move the break after the project\r\n          breaks[j].startTime = projects[i].plannedTime.end\r\n          breaks[j].endTime = TimeCalc.add(breaks[j].startTime, lengthOfBreak)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return projects\r\n}\r\n","import React, { Component } from 'react';\r\nimport Input from '@material-ui/core/Input';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TimeCalc from './util/TimeCalc'\r\n\r\n// simple validation\r\nfunction isValidNumberInput(val, minSize, maxSize){\r\n  if(\r\n    val === \"\" || (\r\n      !isNaN(val) && // if it's a number or an emty string and...\r\n      val >= minSize && val <= maxSize // the correct size\r\n    )\r\n  ) return true\r\n  else return false\r\n}\r\n\r\n\r\nexport default class TimeSetter extends Component {\r\n  handleInputChange(id, e){\r\n    // get the input value\r\n    let val\r\n    if(typeof e === \"number\") val = e // needs to accept the input from handleKeyDown\r\n    else{\r\n      // get the value depending on the id\r\n      if(id === \"pm\") val = e.target.value === \"PM\"\r\n      else val = e.target.value\r\n    }\r\n\r\n    // validate the input\r\n    let maxHValue = this.props.settings.timeFormat24H ? 24 : 12\r\n    if((id === \"h\" && !isValidNumberInput(val, 1, maxHValue))\r\n      || (id === \"m\" && !isValidNumberInput(val, 0, 59))\r\n    ) return\r\n\r\n\r\n    // if we're using the 24-hour time format for the UI, convert it back over to the normal format\r\n    if(this.props.settings.timeFormat24H && id === \"h\"){\r\n      if(val >= 12){\r\n        val -= 12\r\n        this.props.onChange(\"pm\", true)\r\n      }\r\n      else this.props.onChange(\"pm\", false)\r\n    }\r\n\r\n\r\n    // emit the change up the chain\r\n    this.props.onChange(id, val)\r\n  }\r\n\r\n  handleKeyPress = e => {\r\n    if(e.key === \"Enter\" && this.props.onEnterPress) this.props.onEnterPress()\r\n  }\r\n\r\n  handleKeyDown(id, e){\r\n    // determine what is to be done\r\n    let action\r\n    if(e.key === \"ArrowUp\") action = \"up\"\r\n    if(e.key === \"ArrowDown\") action = \"down\"\r\n\r\n    // if nothing is supposed to be done, stop the execution\r\n    if(!action) return\r\n\r\n    // get the value, handle empty input\r\n    let val = this.props.value\r\n    if(!val || isNaN(val.m)) val = 0\r\n\r\n    // edit the val\r\n    let incrementation = id === \"m\" ? this.props.settings.roundTo : 60\r\n    if(action === \"up\") val = TimeCalc.add(val, incrementation)\r\n    else val = TimeCalc.toTimeObject(TimeCalc.subtractToMinutes(val, incrementation), true)\r\n\r\n    // handle negative values\r\n    if(TimeCalc.isBiggerThan(0, val, false)) val = TimeCalc.add(val, 24*60)\r\n\r\n    this.props.onChange(\"object\", val)\r\n  }\r\n\r\n  render(){\r\n    let h = this.props.value.h\r\n    h = h === 0 ? 12 : h\r\n    let m = this.props.value.m\r\n    m = m === 0 ? \"0\" + m : m // turns 0 into \"00\"\r\n\r\n    return (\r\n      <div className={\"TimeSetterDesktop\" + (this.props.showError ? \" timeSetterError\" : \"\")} style={{display: \"inline\"}}>\r\n        <Input\r\n          onChange={this.handleInputChange.bind(this, \"h\")}\r\n          value={(this.props.settings.timeFormat24H && this.props.value.pm) ? h + 12 : h}\r\n          id={this.props.firstInputId}\r\n          placeholder=\"Hours\"\r\n          aria-label=\"Hours\"\r\n          autoComplete=\"off\"\r\n          error={this.props.hError}\r\n          onKeyPress={this.handleKeyPress}\r\n          onKeyDown={this.handleKeyDown.bind(this, \"h\")}\r\n        />\r\n        :\r\n        <Input\r\n          onChange={this.handleInputChange.bind(this, \"m\")}\r\n          value={m}\r\n          placeholder=\"Minutes\"\r\n          aria-label=\"Minutes\"\r\n          autoComplete=\"off\"\r\n          error={this.props.mError}\r\n          onKeyPress={this.handleKeyPress}\r\n          onKeyDown={this.handleKeyDown.bind(this, \"m\")}\r\n        />\r\n        {!this.props.settings.timeFormat24H && (\r\n          <Select\r\n            onChange={this.handleInputChange.bind(this, \"pm\")}\r\n            value={this.props.value.pm ? \"PM\" : \"AM\"}>\r\n            <MenuItem value=\"AM\">AM</MenuItem>\r\n            <MenuItem value=\"PM\">PM</MenuItem>\r\n          </Select>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport TimeInput from 'material-ui-time-picker'\r\nimport TimeCalc from './util/TimeCalc'\r\n\r\n// serves as a wrapper/\"middleware\" to convert between the data structure used by the app and the one used by the time-picker module\r\nexport default class TimeSetterMobile extends Component{\r\n  handleChange = date => {\r\n    // convert into a TimeObject\r\n    let valInMinutes = date.getHours() * 60 + date.getMinutes()\r\n    let val = TimeCalc.toTimeObject(valInMinutes)\r\n\r\n    // save\r\n    this.props.onChange(\"object\", val)\r\n  }\r\n\r\n  render(){\r\n    // convert the value into a Date\r\n    let value = new Date()\r\n    let hours = this.props.value.h\r\n    if(this.props.value.pm) hours += 12\r\n    value.setHours(hours)\r\n    value.setMinutes(this.props.value.m)\r\n\r\n    return (\r\n      <TimeInput\r\n        className=\"TimeSetterMobile\"\r\n        mode={this.props.mode}\r\n        value={value}\r\n        onChange={this.handleChange}\r\n        error={this.props.error}\r\n      />\r\n    )\r\n  }\r\n\r\n}\r\n","import React from 'react';\r\n\r\nexport const SettingsContext = React.createContext({})\r\nexport const IsMobileContext = React.createContext({})\r\n","import React from 'react';\r\nimport TimeSetterDesktop from './TimeSetterDesktop'\r\nimport TimeSetterMobile from './TimeSetterMobile'\r\nimport { SettingsContext, IsMobileContext } from './_Context'\r\nimport './css/TimeSetter.css'\r\n\r\n// just a wrapper-ish that decides whether we should display the mobile or the desktop version \r\nconst TimeSetter = props => (\r\n  <SettingsContext.Consumer>\r\n    {settings => (\r\n      <IsMobileContext.Consumer>\r\n        {isMobile => (\r\n          isMobile ? (\r\n            <TimeSetterMobile\r\n              mode={settings.timeFormat24H ? \"24h\" : \"12h\"}\r\n              value={props.value}\r\n              onChange={props.onChange}\r\n              error={\r\n                props.hError ||\r\n                props.mError ||\r\n                props.showErrorProp\r\n              }\r\n            />\r\n          ) : (\r\n            <TimeSetterDesktop\r\n              onChange={props.onChange}\r\n              value={props.value}\r\n              firstInputId={props.firstInputId}\r\n              hError={props.hError}\r\n              mError={props.mError}\r\n              onEnterPress={props.onEnterPress}\r\n              settings={settings}\r\n            />\r\n          )\r\n        )}\r\n      </IsMobileContext.Consumer>\r\n    )}\r\n  </SettingsContext.Consumer>\r\n)\r\n\r\nexport default TimeSetter\r\n","import React, { Component } from 'react';\r\nimport './css/ColorPicker.css'\r\n\r\n// the colored circle that both displays and edits the color of the project\r\nexport default class ColorPicker extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {}\r\n\r\n    this.colorInput = React.createRef()\r\n  }\r\n\r\n  render = () => (\r\n    <span className=\"ColorPicker\">\r\n      <input\r\n        className=\"colorInput\"\r\n        ref={input => this.colorInput = input}\r\n        type=\"color\"\r\n        aria-label=\"Color\"\r\n        value={this.props.value}\r\n        onChange={e => {this.props.onChange(e.target.value)}}/>\r\n      <svg\r\n        width={this.props.xl ? 50 : 20}\r\n        height={this.props.xl ? 30 : 20}\r\n        onClick={() => {this.colorInput.click()}}\r\n      >\r\n        {this.props.xl ? (\r\n          <rect width=\"50\" height=\"30\" rx=\"5\" ry=\"5\" style={{fill: this.props.value}} />\r\n        ) : (\r\n          <circle cx=\"10\" cy=\"10\" r=\".5rem\" fill={this.props.value} />\r\n        )}\r\n\r\n      </svg>\r\n    </span>\r\n  )\r\n}\r\n","const dayNames = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\r\nconst shortDayNames = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"]\r\n\r\n// adds commas and the & character\r\nfunction joinNames(names){\r\n  let result = \"\"\r\n  let length = names.length\r\n  names.forEach((name, i) => {\r\n    result += name\r\n    if(i === length - 2) result += \" & \"\r\n    if(i < length - 2) result += \", \"\r\n  })\r\n  return result\r\n}\r\n\r\n// takes the days object of a defaultProject (which is an array of 7 bools) and creates a string representation of it\r\nexport default function makeDaysString(days, shortVersion = false){\r\n  if(!days) return \"Every day\" // if it's not defined, assume it's all true\r\n\r\n  // count how many true values there are in the array\r\n  let positives = days.filter(val => val)\r\n  let positiveCount = positives.length\r\n\r\n  if(positiveCount === 7) return \"Every day\"\r\n  if(positiveCount === 0) return \"Never\"\r\n\r\n  let namesArr = shortVersion ? shortDayNames : dayNames\r\n\r\n  // if almost all the values are true, return somthing like \"Every day except Sunday\"\r\n  if(positiveCount >= 5){\r\n    let negativeDayNames = []\r\n    days.forEach((val, i) => {\r\n      if(!val) negativeDayNames.push(namesArr[i])\r\n    })\r\n\r\n    let result = shortVersion ? 'All' : 'Every day'\r\n    result += ' except ' + joinNames(negativeDayNames)\r\n    return result\r\n  }\r\n\r\n  // if there aren't that many true values, simply list the days\r\n  else{\r\n    let positiveDayNames = []\r\n    days.forEach((val, i) => {\r\n      if(val) positiveDayNames.push(namesArr[i])\r\n    })\r\n    return joinNames(positiveDayNames)\r\n  }\r\n}\r\n","import React from 'react'\r\nimport BackButton from './BackButton'\r\nimport TimeSetter from '../TimeSetter'\r\nimport ColorPicker from '../ColorPicker'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button'\r\nimport makeDaysString from '../util/makeDaysString'\r\nimport '../css/MobileInputFields.css'\r\n\r\n// the display element used both for adding and editing projects, breaks, defaultProject etc.\r\nconst MobileInputFields = props => (\r\n  <Grid className=\"MobileInputFields container\">\r\n    <BackButton onClick={props.close} />\r\n    <Grid className=\"buttonTop\">\r\n      {props.buttonTop}\r\n    </Grid>\r\n    {props.title && (\r\n      <Typography className=\"title\" variant=\"h6\" children={props.title} />\r\n    )}\r\n    <Grid style={props.title ? {} : {paddingTop: \"1.5rem\"}}>\r\n      <TextField\r\n        value={props.inputValues.name}\r\n        onChange={props.onInputChange.bind(this, \"name\")}\r\n        onKeyDown={props.onKeyDown}\r\n        placeholder=\"Name\"\r\n        aria-label=\"Name\"\r\n        error={props.showErrors.name || props.showErrorProp}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        autoFocus\r\n      />\r\n    </Grid>\r\n    <Grid className=\"durationAndStartTimeDiv\" container justify=\"space-between\">\r\n      {props.type !== \"break\" && (\r\n        <Grid\r\n          item\r\n          xs={props.type === \"default\" ? 12 : 6}\r\n          className=\"item\"\r\n        >\r\n          <label>Duration:</label>\r\n          <TextField\r\n            type=\"number\"\r\n            value={props.inputValues.duration}\r\n            onChange={props.onInputChange.bind(this, \"duration\")}\r\n            onKeyDown={props.onKeyDown}\r\n            placeholder=\"Duration\"\r\n            aria-label=\"Duration\"\r\n            error={props.showErrors.duration || props.showErrorProp}\r\n          />\r\n        </Grid>\r\n      )}\r\n      {props.type !== \"default\" && (\r\n        <Grid item xs={6} className=\"item\">\r\n          <label>Start:</label>\r\n          <TimeSetter\r\n            value={props.inputValues.startTime}\r\n            onChange={props.onTimeInputChange.bind(this, \"startTime\")}\r\n            firstInputId=\"newProjectStartTimeInput\"\r\n            hError={props.showErrors.startTimeH || props.showErrorProp}\r\n            mError={props.showErrors.startTimeM || props.showErrorProp}\r\n            showErrors={props.showErrors}\r\n            onEnterPress={props.add}\r\n          />\r\n        </Grid>\r\n      )}\r\n      {props.type === \"break\" && (\r\n        <Grid item xs={6} className=\"item\">\r\n          <label>End:</label>\r\n          <TimeSetter\r\n            value={props.inputValues.endTime}\r\n            onChange={props.onTimeInputChange.bind(this, \"endTime\")}\r\n            firstInputId=\"newProjectEndTimeInput\"\r\n            hError={props.showErrors.endTimeH || props.showErrors.endTime || props.showErrorProp}\r\n            mError={props.showErrors.endTimeM || props.showErrors.endTime || props.showErrorProp}\r\n            showErrors={props.showErrors}\r\n            onEnterPress={props.add}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n    {props.type !== \"break\" && (\r\n      <Grid>\r\n        Color:\r\n        <ColorPicker xl\r\n          value={props.inputValues.color}\r\n          onChange={props.onColorChange}\r\n        />\r\n      </Grid>\r\n    )}\r\n    {props.type === \"default\" && (\r\n      <Grid className=\"days\" container alignItems='baseline' justify=\"space-between\">\r\n        <Grid item xs={9}>\r\n          Days:<br/>{makeDaysString(props.inputValues.days)}\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Button onClick={props.openDaysDialog} variant=\"outlined\">\r\n            Edit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    )}\r\n    <Grid className=\"confirmDiv\" container justify=\"center\">\r\n      {props.button}\r\n    </Grid>\r\n  </Grid>\r\n)\r\n\r\nexport default MobileInputFields\r\n","export default /[{}[\\]\"':;`]/\r\n","import TimeCalc from './TimeCalc'\r\nimport validationRegex from './validationRegex'\r\n\r\n// validates the entire project/defaultProject object\r\nexport function projectValidation(project, dontValidateStartTime = false){\r\n  let error = []\r\n  if(project.name === \"\") error.push(\"name\")\r\n  if(\r\n    project.duration === \"\" ||\r\n    isNaN(project.duration) ||\r\n    project.duration > 1440 ||\r\n    project.duration <= 0\r\n  ) error.push(\"duration\")\r\n  if(!dontValidateStartTime){ // in other words if the object is a project, not a defaultProject\r\n    if(project.startTime.h === \"\" || isNaN(project.startTime.h)) error.push(\"startTimeH\")\r\n    if(project.startTime.m === \"\" || isNaN(project.startTime.m)) error.push(\"startTimeM\")\r\n  }\r\n\r\n  if(error.length) return {valid: false, errors: error} // if there were errors, validation failed\r\n  else return {valid: true}\r\n}\r\n\r\n// validates a single input\r\nexport function inputValidation(id, val){\r\n  if(id === \"name\" && val.length > 30) return false\r\n  if(id === \"duration\" && ((isNaN(val) && val !== \"\") || val < 0)) return false\r\n  if(validationRegex.test(val)) return false // blocks characters that could cause trouble in the stringified JSON\r\n\r\n  return true\r\n}\r\n\r\n// validates a break\r\nexport function breakValidation(breakInfo){\r\n  // check all that all the requirements are met\r\n  let error = []\r\n  if(breakInfo.name === \"\") error.push(\"name\")\r\n  if(breakInfo.startTime.h === \"\" || isNaN(breakInfo.startTime.h) || breakInfo.startTime.h < 0) error.push(\"startTimeH\")\r\n  if(breakInfo.startTime.m === \"\" || isNaN(breakInfo.startTime.m) || breakInfo.startTime.m < 0) error.push(\"startTimeM\")\r\n  if(breakInfo.endTime.h === \"\" || isNaN(breakInfo.endTime.h) || breakInfo.endTime.h < 0) error.push(\"endTimeH\")\r\n  if(breakInfo.endTime.m === \"\" || isNaN(breakInfo.endTime.m) || breakInfo.endTime.m < 0) error.push(\"endTimeM\")\r\n  if(TimeCalc.isBiggerThan(breakInfo.startTime, breakInfo.endTime, false, true)) error.push(\"endTime\")\r\n\r\n  // if there were errors, validation failed, otherwise it succeeded\r\n  if(error.length) return {valid: false, errors: error}\r\n  else return {valid: true}\r\n}\r\n","import React, { Component } from 'react';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n// used to let the user decide on which days they want to use each defaultProject\r\nexport default class DefaultProjectsDaysDialog extends Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n    // get days from the props, if they arent available, set them all to true (as this is the most common case)\r\n    var days\r\n    if(this.props.project && this.props.project.days) days = this.props.project.days\r\n    else{\r\n      days = []\r\n      for(let i = 0; i < 7; i++) days.push(true)\r\n    }\r\n    this.state = {days}\r\n  }\r\n\r\n  handleChange(i, e){\r\n    let {days} = this.state\r\n    days[i] = e.currentTarget.checked\r\n    this.setState({days})\r\n    this.props.save(days)\r\n  }\r\n\r\n  render = () => (\r\n    <React.Fragment>\r\n      <DialogTitle id=\"DefaultProjectsDaysDialogTitle\">\r\n        Days{this.props.project.name && \" - \" + this.props.project.name}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <FormGroup>\r\n          {[\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"].map((day, i) => (\r\n            <FormControlLabel\r\n              key={i}\r\n              control={\r\n                <Checkbox\r\n                  checked={this.state.days[i]}\r\n                  onChange={this.handleChange.bind(this, i)}\r\n                />\r\n              }\r\n              label={day}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button color=\"primary\" onClick={() => this.props.close()}>\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport TimeCalc from '../util/TimeCalc'\r\nimport DefaultProjectsDaysDialog from '../DefaultProjectsDaysDialog'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { inputValidation } from '../util/validation'\r\n\r\n// used as an HOC for the withAdd and withEdit HOCs to add common functionality (mostly editing and validating fields)\r\nconst withInputFields = WrappedComponent => (\r\n  class withInputFields extends Component{\r\n    constructor(props){\r\n      super(props)\r\n\r\n      // see if the inputValues are already supplied, if not, set them\r\n      let inputValues\r\n      if(this.props.inputValues){\r\n        inputValues = this.props.inputValues\r\n      }\r\n\r\n      else{\r\n        inputValues = {name: \"\"}\r\n\r\n        let { type } = this.props\r\n        // default state depends on the type (project, break or defaultProject?)\r\n        // eg. only defaultProjects have a days property while only breaks have an endTime property etc.\r\n\r\n        let roundTo = this.props.settings.roundTo || 5\r\n\r\n        if(type === \"default\"){\r\n          inputValues.days = []\r\n          for(let i = 0; i < 7; i++) inputValues.days.push(true)\r\n        }\r\n        else{\r\n          // set a default startTime value\r\n          // first try to set a value based on lastProject\r\n          let startTime\r\n          let lastProject = this.props.lastProject\r\n          if(lastProject && lastProject.plannedTime){\r\n            startTime = TimeCalc.suggestStartTime(\r\n              lastProject.plannedTime.end,\r\n              lastProject.estimatedDuration,\r\n              this.props.settings\r\n            )\r\n          }\r\n          else{\r\n            // then try a value based on currentTime\r\n            if(this.props.currentTime && !this.props.currentTime.defaultVal){\r\n              startTime = TimeCalc.round(TimeCalc.add(this.props.currentTime, 15), roundTo)\r\n            }\r\n            // if both fail, simply set the value to 12 PM and mark it as a last resort value\r\n            else startTime = {h: 12, m: 0, pm: true, lastResortValue: true}\r\n          }\r\n\r\n          inputValues.startTime = startTime\r\n        }\r\n\r\n        if(this.props.type === \"break\"){\r\n          inputValues.endTime = TimeCalc.round(TimeCalc.add(inputValues.startTime, 30), roundTo)\r\n        }\r\n        else{\r\n          inputValues.duration = \"\"\r\n\r\n          let color\r\n          if(typeof this.props.defaultColorIndex !== \"undefined\"){\r\n            color = this.props.settings.defaultColors[this.props.defaultColorIndex]\r\n          }\r\n          else color = \"#000000\"\r\n\r\n          inputValues.color = color\r\n        }\r\n      }\r\n\r\n      this.state = {\r\n        inputValues,\r\n        userHasntChangedStartTime: true,\r\n        defaultColorIndex: this.props.defaultColorIndex,\r\n        showErrors: {},\r\n        temp: {dialogProjectId: false} // handles the days dialog of defaultProjects\r\n      }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n      // if the user hasn't changed startTime yet, suggest a new startTime\r\n      // (don't execute if the props haven't loaded yet)\r\n      // eg. if the previous project's duration changes, we want the suggested start time to reflect that\r\n      if(\r\n        this.props.type !== \"default\" &&\r\n        this.state.inputValues.h !== \"\" &&\r\n        this.state.userHasntChangedStartTime &&\r\n        this.props.settings.bufferTimePercentage &&\r\n        this.props.lastProject &&\r\n        !this.props.isDefaultProjects\r\n      ){\r\n        let suggestedStartTime = TimeCalc.suggestStartTime(\r\n          this.props.lastProject.plannedTime.end,\r\n          this.props.lastProject.estimatedDuration,\r\n          this.props.settings\r\n        )\r\n        // only update if the current value is either empty or different from the suggested one\r\n        if(\r\n          this.state.inputValues.startTime.h === \"\" ||\r\n          !TimeCalc.areIdentical(suggestedStartTime, this.state.inputValues.startTime)\r\n        ){\r\n          let inputValues = {...this.state.inputValues, startTime: suggestedStartTime}\r\n\r\n          // if the HOC is used for a braek, suggest an endTime as well\r\n          if(this.props.type === \"break\"){\r\n            let suggestedEndTime = TimeCalc.round(TimeCalc.add(suggestedStartTime, 30), this.props.settings.roundTo)\r\n            inputValues.endTime = suggestedEndTime\r\n          }\r\n\r\n          this.setState({inputValues})\r\n        }\r\n      }\r\n\r\n      // only used if defaultColorIndex (and startTime) are being initialized with data from the localStorage\r\n      // (if the component using the HOC is loaded immediately when the user visits the page\r\n      // as opposed to being loaded after the user clicks a link, this data won't be available in the constructor yet)\r\n      if(\r\n        this.props.type !== \"break\" &&\r\n        !this.props.inputValues &&\r\n        typeof this.state.defaultColorIndex === \"undefined\" &&\r\n        typeof this.props.defaultColorIndex !== \"undefined\" &&\r\n        this.props.settings.defaultColors\r\n      ){\r\n\r\n        let inputValues = this.state.inputValues\r\n\r\n        let defaultColors = this.props.settings.defaultColors\r\n        let defaultColorIndex = this.props.defaultColorIndex\r\n\r\n        // handle the following: defaultColorsIndex is at max and the user deletes the last defaultColor in the settings\r\n        if(defaultColors.length <= defaultColorIndex) defaultColorIndex = 0\r\n\r\n        inputValues.color = defaultColors[defaultColorIndex] // set the correcponding color\r\n\r\n        // handle undefined\r\n        inputValues.color = inputValues.color ? inputValues.color : \"#000000\"\r\n\r\n        this.setState({inputValues, defaultColorIndex})\r\n      }\r\n\r\n      // if currentTime wasn't available when the constructor ran and it was supposed to be used for the initial startTime value\r\n      if(\r\n        this.props.type !== \"default\" &&\r\n        this.state.inputValues.startTime.lastResortValue &&\r\n        this.props.currentTime &&\r\n        this.props.settings.roundTo\r\n      ){\r\n\r\n        // suggest a new startTime\r\n        let {inputValues} = this.state\r\n        let {roundTo} = this.props.settings\r\n        inputValues.startTime = TimeCalc.round(TimeCalc.add(this.props.currentTime, 15), roundTo)\r\n\r\n        // if it's a break, suggest a new endTime as well\r\n        if(this.props.type === \"break\"){\r\n          inputValues.endTime = TimeCalc.round(TimeCalc.add(inputValues.startTime, 30), roundTo)\r\n        }\r\n\r\n        this.setState({inputValues})\r\n      }\r\n    }\r\n\r\n    // handles simple text input changes\r\n    handleInputChange(id, e){\r\n      let val = e.target.value\r\n      if(!inputValidation(id, val)) return\r\n      this.setState({\r\n        inputValues: {...this.state.inputValues, [id]: val},\r\n        showErrors: {...this.state.showErrors, [id]: false}\r\n      })\r\n    }\r\n\r\n    // handles time input changes, can either only change one field (eg. minutes) or the whole time object (if id === \"object\")\r\n    handleTimeInputChange(inputId, id, val){\r\n      let newState = {inputValues: this.state.inputValues, showErrors: this.state.showErrors}\r\n\r\n      if(id === \"object\") newState.inputValues[inputId] = val\r\n      else newState.inputValues[inputId][id] = val\r\n\r\n      // if there was previously an error around the relevant time input, remove it\r\n      // (since this method only gets called after input is validated in the TimeSetter component)\r\n      newState.showErrors[inputId + id.toUpperCase()] = false\r\n      newState.userHasntChangedStartTime = false\r\n\r\n      this.setState(newState)\r\n    }\r\n\r\n    handleColorChange = val => {\r\n      this.setState({inputValues: {...this.state.inputValues, color: val}})\r\n    }\r\n\r\n    // hide/show the dialog that lets you set days for defaultProjects\r\n    toggleDaysDialog = val => this.setState({temp: {...this.state.temp, dialogProjectId: val}})\r\n\r\n    handleDaysChange = (days) => {\r\n      this.setState({inputValues: {...this.state.inputValues, days}})\r\n    }\r\n\r\n    render = () => {\r\n      let wrappedComponent = (\r\n        <WrappedComponent\r\n          {...this.props}\r\n          inputValues={this.state.inputValues}\r\n          showErrors={this.state.showErrors}\r\n          showErrorProp={this.props.showErrors ? this.props.showErrors.noProjects : false}\r\n          onInputChange={this.handleInputChange.bind(this)}\r\n          onTimeInputChange={this.handleTimeInputChange.bind(this)}\r\n          onColorChange={this.handleColorChange}\r\n          setState={this.setState.bind(this)}\r\n          openDaysDialog={this.toggleDaysDialog.bind(this, true)}\r\n        />\r\n      )\r\n\r\n      if(this.props.type === \"default\"){\r\n        let {dialogProjectId} = this.state.temp\r\n\r\n        return (\r\n          <React.Fragment>\r\n            {wrappedComponent}\r\n            <Dialog\r\n              open={dialogProjectId}\r\n              onClose={this.toggleDaysDialog.bind(this, false)}\r\n              aria-labelledby=\"DefaultProjectsDaysDialogTitle\"\r\n            >\r\n              <DefaultProjectsDaysDialog\r\n                project={this.state.inputValues}\r\n                close={this.toggleDaysDialog.bind(this, false)}\r\n                save={this.handleDaysChange}\r\n              />\r\n            </Dialog>\r\n          </React.Fragment>\r\n        )\r\n      }\r\n\r\n      return wrappedComponent\r\n    }\r\n  }\r\n)\r\n\r\nexport default withInputFields\r\n","import React, { Component } from 'react'\r\nimport { projectValidation, breakValidation } from '../util/validation'\r\nimport withInputFields from './withInputFields'\r\n\r\n// adds functionality for adding projects, defaultProjects and breaks (both desktop and mobile)\r\nconst withAdd = WrappedComponent => (\r\n  withInputFields(\r\n    class withAdd extends Component{\r\n      add = callback => {\r\n        let { inputValues, type } = this.props\r\n\r\n        // validation\r\n        let validation\r\n        if(type === \"break\") validation = breakValidation(inputValues)\r\n        else validation = projectValidation(inputValues, type === \"default\")\r\n\r\n        // if validation fails, show an error\r\n        if(!validation.valid){\r\n          let newState = this.props.showErrors\r\n          validation.errors.forEach(error => {\r\n            newState[error] = true\r\n          })\r\n          this.setState(newState)\r\n          return\r\n        }\r\n\r\n        // reset the state (depending on the type)\r\n        let newInputValues = {name: \"\"}\r\n        let newDefaultColorIndex\r\n        if(type !== \"default\") newInputValues.startTime = {h: \"\", m: \"\", pm: true}\r\n        if(type === \"break\"){\r\n          newInputValues.endTime = {h: \"\", m: \"\", pm: true}\r\n          this.props.onAddBreak(this.props.inputValues)\r\n        }\r\n        else{\r\n          newInputValues.duration = \"\"\r\n          newInputValues.color = inputValues.color // perserve the color\r\n\r\n          // if the user hasn't changed the color from the default, go to the next defaultColor\r\n          let defaultColors = this.props.settings.defaultColors\r\n          let defaultColorIndex = this.props.defaultColorIndex\r\n\r\n          newDefaultColorIndex = defaultColorIndex >= defaultColors.length - 1 ? 0 : ++defaultColorIndex\r\n\r\n          newInputValues.color = defaultColors[newDefaultColorIndex]\r\n\r\n          // call the props function\r\n          this.props.onAddProject(this.props.inputValues, newDefaultColorIndex)\r\n        }\r\n\r\n        // save to state\r\n        let newState = {inputValues: newInputValues}\r\n        if(type !== \"break\") newState.defaultColorIndex = newDefaultColorIndex\r\n        this.props.setState(newState)\r\n\r\n        // if there's a callback provided to the method, call it\r\n        if(typeof callback === \"function\") callback()\r\n      }\r\n\r\n      handleKeyPress = e => {if(e.key === \"Enter\") this.add()}\r\n\r\n      render = () => (\r\n        <WrappedComponent\r\n          {...this.props}\r\n          add={this.add}\r\n          onKeyPress={this.handleKeyPress}\r\n        />\r\n      )\r\n    }\r\n  )\r\n)\r\n\r\nexport default withAdd\r\n","import React from 'react'\r\nimport MobileInputFields from './MobileInputFields'\r\nimport Button from '@material-ui/core/Button'\r\nimport withAdd from '../HOCs/withAdd'\r\n\r\nconst AddProjectView = props => (\r\n  <MobileInputFields\r\n    {...props}\r\n    button={\r\n      <Button\r\n        onClick={() => {props.add(props.close)}}\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n      >\r\n        Add\r\n      </Button>\r\n    }\r\n  />\r\n)\r\n\r\nexport default withAdd(AddProjectView)\r\n","import React, { Component } from 'react'\r\nimport { projectValidation, breakValidation } from '../util/validation'\r\nimport withInputFields from './withInputFields'\r\n\r\n// adds functionality to edit projects, breaks and defaultProjects to both the desktop and the mobile version\r\nconst withEdit = WrappedComponent => (\r\n  withInputFields(\r\n    class withEdit extends Component{\r\n      save = () => {\r\n        let { inputValues, type } = this.props\r\n\r\n        // validation\r\n        let validation\r\n        if(type === \"break\") validation = breakValidation(inputValues)\r\n        else validation = projectValidation(inputValues, type === \"default\")\r\n\r\n        // if validation fails, display the errors\r\n        if(!validation.valid){\r\n          let newState = this.props.showErrors\r\n          validation.errors.forEach(error => {\r\n            newState[error] = true\r\n          })\r\n          this.props.setState(newState)\r\n          return\r\n        }\r\n\r\n        // call the props functions to save and close\r\n        this.props.onDoneEditing(this.props.inputValues)\r\n        this.props.close()\r\n      }\r\n\r\n      handleKeyPress = e => {if(e.key === \"Enter\") this.save()}\r\n\r\n      render = () => (\r\n        <WrappedComponent\r\n          {...this.props}\r\n          save={this.save}\r\n          onKeyPress={this.handleKeyPress}\r\n        />\r\n      )\r\n    }\r\n  )\r\n)\r\n\r\nexport default withEdit\r\n","import React from 'react'\r\nimport MobileInputFields from './MobileInputFields'\r\nimport Button from '@material-ui/core/Button'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport withEdit from '../HOCs/withEdit'\r\n\r\nconst EditProjectView = props => (\r\n  <MobileInputFields\r\n    {...props}\r\n    button={\r\n      <Button\r\n        onClick={props.save}\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n      >\r\n        Save\r\n      </Button>\r\n    }\r\n    buttonTop={\r\n      <IconButton\r\n        onClick={() => {\r\n          if(window.confirm(\"Are you sure you want to delete this?\")){\r\n            props.close(); props.delete();\r\n          }\r\n        }}\r\n      >\r\n        <DeleteIcon />\r\n      </IconButton>\r\n    }\r\n    title={\r\n      props.type && (\r\n        \"Edit the \" +\r\n        (props.type === \"break\" ? \"break\" : (props.type === \"default\" && \"repetitive project\"))\r\n      )\r\n    }\r\n  />\r\n)\r\n\r\nexport default withEdit(EditProjectView)\r\n","import React from 'react'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport './css/AddFab.css'\r\n\r\nconst AddFab = props => (\r\n  <Fab\r\n    onClick={props.onClick}\r\n    color=\"primary\"\r\n    className=\"AddFab\"\r\n    aria-label=\"Add a project\"\r\n  >\r\n    <AddIcon />\r\n  </Fab>\r\n)\r\n\r\nexport default AddFab\r\n","import React from 'react'\r\nimport BackButton from './BackButton'\r\nimport AddFab from '../AddFab'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport TimeCalc from '../util/TimeCalc'\r\nimport { SettingsContext } from '../_Context'\r\nimport '../css/BreaksView.css'\r\n\r\nconst BreaksView = props => (\r\n  <Grid className=\"BreaksView container\">\r\n    <BackButton onClick={props.changeView.bind(this, \"breaks\", false)} />\r\n    <Typography variant=\"h6\" className=\"title\">\r\n      Breaks\r\n    </Typography>\r\n    <Table>\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell>Name</TableCell>\r\n          <TableCell>Time</TableCell>\r\n          <TableCell/>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {props.breaks.length ? (\r\n          props.breaks.map(breakInfo => (\r\n            <TableRow key={breakInfo.id}>\r\n              <TableCell>\r\n                {breakInfo.name}\r\n              </TableCell>\r\n              <TableCell>\r\n                <SettingsContext.Consumer>\r\n                  {settings => (\r\n                    TimeCalc.makeString(\r\n                      breakInfo.startTime,\r\n                      breakInfo.startTime.pm !== breakInfo.endTime.pm,\r\n                      true,\r\n                      settings.timeFormat24H\r\n                    ) + \"-\" + TimeCalc.makeString(\r\n                      breakInfo.endTime,\r\n                      true,\r\n                      true,\r\n                      settings.timeFormat24H\r\n                    )\r\n                  )}\r\n                </SettingsContext.Consumer>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IconButton onClick={props.changeView.bind(this, \"edit\", true, {type: \"break\", id: breakInfo.id})}>\r\n                  <EditIcon />\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))\r\n        ) : (\r\n          <TableRow>\r\n            <TableCell colSpan={4}>You haven't set any breaks</TableCell>\r\n          </TableRow>\r\n        )}\r\n      </TableBody>\r\n    </Table>\r\n    <AddFab onClick={props.changeView.bind(this, \"add\", true, {type: \"break\"})} />\r\n  </Grid>\r\n)\r\n\r\nexport default BreaksView\r\n","import React from 'react';\r\nimport TimeSetter from './TimeSetter'\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\n// used in the ProjectsTable, both when adding and editing projects\r\nconst SetStartTimeCell = props => (\r\n  <TableCell className=\"setStartTimeCell\">\r\n    <div className=\"setStartTimeLabelDiv\">\r\n      <label htmlFor={props.firstInputId}>\r\n        Start:\r\n      </label>\r\n    </div>\r\n    <TimeSetter\r\n      onChange={props.onChange}\r\n      value={props.value}\r\n      firstInputId={props.firstInputId}\r\n      hError={props.hError}\r\n      mError={props.mError}\r\n      onEnterPress={props.onEnterPress}\r\n    />\r\n  </TableCell>\r\n)\r\n\r\nexport default SetStartTimeCell\r\n","import React from 'react';\r\nimport SetStartTimeCell from './SetStartTimeCell'\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport Button from '@material-ui/core/Button';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { SettingsContext, IsMobileContext } from './_Context'\r\nimport withEdit from './HOCs/withEdit'\r\nimport './css/ProjectsTableRow.css'\r\n\r\n// just a display component, all the functionality is handled by withEdit\r\nconst ProjectsTableRowEditing = props => (\r\n  <IsMobileContext.Consumer>\r\n    {isMobile => (\r\n      <React.Fragment>\r\n        <TableCell className=\"setNameCell\">\r\n          <Input\r\n            value={props.inputValues.name}\r\n            onChange={props.onInputChange.bind(this, \"name\")}\r\n            placeholder=\"Name\"\r\n            aria-label=\"Name\"\r\n            error={props.showErrors.name}\r\n            onKeyPress={props.onKeyPress}\r\n          />\r\n        </TableCell>\r\n        {(!isMobile || props.type === \"default\") && (\r\n          <TableCell className=\"setDurationCell\">\r\n            <SettingsContext.Consumer>\r\n              {({roundTo}) => (\r\n                <Input\r\n                  value={props.inputValues.duration}\r\n                  onChange={props.onInputChange.bind(this, \"duration\")}\r\n                  placeholder=\"Duration\"\r\n                  aria-label=\"Duration\"\r\n                  error={props.showErrors.duration}\r\n                  onKeyPress={props.onKeyPress}\r\n                  type=\"number\"\r\n                  inputProps={{step: roundTo}}\r\n                />\r\n              )}\r\n            </SettingsContext.Consumer>\r\n          </TableCell>\r\n        )}\r\n\r\n        {props.type !== \"default\" && (\r\n          <SetStartTimeCell\r\n            value={props.inputValues.startTime}\r\n            onChange={props.onTimeInputChange.bind(this, \"startTime\")}\r\n            firstInputId={\"changeStartTimeInput\" + props.id}\r\n            hError={props.showErrors.startTimeH}\r\n            mError={props.showErrors.startTimeM}\r\n            onEnterPress={props.save}\r\n          />\r\n        )}\r\n\r\n        {props.type === \"default\" && !isMobile && (\r\n          <TableCell>\r\n            <Button onClick={props.openDaysDialog} variant=\"outlined\">\r\n              Days\r\n            </Button>\r\n          </TableCell>\r\n        )}\r\n\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"Save changes\"\r\n            onClick={props.save}\r\n            color=\"primary\">\r\n            <DoneIcon />\r\n          </IconButton>\r\n          {\r\n            !isMobile && (\r\n              <IconButton\r\n                aria-label=\"Delete the project\"\r\n                onClick={props.delete}\r\n                className=\"deleteIconButton\">\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            )\r\n          }\r\n        </TableCell>\r\n      </React.Fragment>\r\n    )}\r\n  </IsMobileContext.Consumer>\r\n)\r\n\r\nexport default withEdit(ProjectsTableRowEditing)\r\n","import React, { Component } from 'react';\r\nimport Input from '@material-ui/core/Input';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport { SettingsContext } from './_Context'\r\nimport TimeCalc from './util/TimeCalc'\r\nimport './css/SetProgressPopoverContent.css'\r\n\r\n// the content of the pausing progress popover, this lets you set custom progress\r\nexport default class SetProgressPopoverContent extends Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n    // determine the progress that should be set (but still let the user decide otherwise)\r\n    let progress = TimeCalc.subtractToMinutes(\r\n      {...props.currentTime, s: new Date().getSeconds()},\r\n      props.row.startedWorkingOnIt,\r\n      true\r\n    )\r\n    if(props.row.progress) progress = progress + parseInt(props.row.progress)\r\n\r\n    this.state = {progress}\r\n  }\r\n\r\n  handleInputChange = e => {\r\n    let val = e.target.value\r\n\r\n    if(isNaN(val)) return // super simple validation (+ input type number, should be enough)\r\n\r\n    this.setState({progress: val})\r\n  }\r\n\r\n  save = () => {\r\n    this.props.onPause(this.props.row.id, \"paused\", this.state.progress)\r\n  }\r\n\r\n  render = () => (\r\n    <SettingsContext.Consumer>\r\n      {({darkTheme}) => (\r\n        <div className=\"SetProgressPopoverContent\" style={{color: darkTheme ? \"white\" : \"black\"}}>\r\n          <span>I've worked on this for </span>\r\n          <Input\r\n            autoFocus\r\n            aria-label=\"Progress in minutes\"\r\n            value={this.state.progress || \"\"}\r\n            onChange={this.handleInputChange}\r\n            onKeyPress={e => {if(e.key === \"Enter\") this.save()}}\r\n          />\r\n          <span> minutes</span>\r\n          <IconButton\r\n            aria-label=\"Save the progress and pause the project\"\r\n            onClick={this.save}\r\n            color=\"primary\">\r\n            <DoneIcon />\r\n          </IconButton>\r\n        </div>\r\n      )}\r\n    </SettingsContext.Consumer>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport SetProgressPopoverContent from './SetProgressPopoverContent'\r\nimport Popover from '@material-ui/core/Popover';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\n\r\n// the button responsible for pausing the project and the Popover associated with it\r\n// (the Popover lets you set progress)\r\nexport default class SetProgressAndPauseButton extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      anchorEl: null\r\n    }\r\n  }\r\n\r\n  handleClick = e => {\r\n    this.setState({anchorEl: e.currentTarget})\r\n  }\r\n\r\n  close = () => {\r\n    this.setState({anchorEl: null})\r\n  }\r\n\r\n  render(){\r\n    let anchorEl = this.state.anchorEl\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton  aria-label=\"Pause the project\" onClick={this.handleClick}>\r\n          <PauseIcon />\r\n        </IconButton>\r\n\r\n        <Popover\r\n          open={Boolean(anchorEl)}\r\n          anchorEl={anchorEl}\r\n          onClose={this.close}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n          }}\r\n        >\r\n          <SetProgressPopoverContent {...this.props} />\r\n        </Popover>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport SetProgressPopoverContent from './SetProgressPopoverContent'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport './css/ChangeProjectStateDropdown.css'\r\n\r\n// used in the mobile version of the UI if the project's state is workingOnIt\r\n// gives the user the option to pause or mark the project as done\r\nexport default class ChangeProjectStateDropdown extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      anchorEl: null,\r\n      showSetProgress: false\r\n    }\r\n  }\r\n\r\n  open = e => {\r\n    this.setState({anchorEl: e.currentTarget})\r\n  }\r\n\r\n  close = () => {\r\n    this.setState({anchorEl: null})\r\n    setTimeout(() => {\r\n      this.setState({showSetProgress: false}) // hide the setProgress Popover\r\n    }, 500)\r\n  }\r\n\r\n  render = () => {\r\n    let {anchorEl} = this.state\r\n\r\n    // determines which action should be recommended (by coloring it with the primary color)\r\n    let suggestDone = this.props.progressCapped === this.props.row.estimatedDuration\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          aria-label=\"Open the project state dropdown\"\r\n          onClick={this.open}\r\n          color=\"primary\"\r\n        >\r\n          {suggestDone ? <DoneIcon color=\"primary\" /> : <PauseIcon color=\"primary\" />}\r\n        </IconButton>\r\n        <Popover\r\n          className=\"ChangeProjectStateDropdownMenu\"\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={this.close}\r\n        >\r\n          {\r\n            this.state.showSetProgress ? (\r\n              <SetProgressPopoverContent\r\n                onPause={this.props.onProjectStateChange}\r\n                row={this.props.row}\r\n                currentTime={this.props.currentTime}\r\n              />\r\n            ) : (\r\n              <List>\r\n                {\r\n                  [\r\n                    {\r\n                      title: \"Pause\",\r\n                      icon: <PauseIcon color={suggestDone ? undefined : \"primary\"} />,\r\n                      onClick: this.setState.bind(this, {showSetProgress: true}, null),\r\n                    },\r\n                    {\r\n                      title: \"Done\",\r\n                      icon: <DoneIcon color={suggestDone ? \"primary\" : undefined} />,\r\n                      onClick: this.props.onProjectStateChange.bind(this, this.props.row.id, \"done\"),\r\n                    }\r\n                  ].map(el => (\r\n                    <ListItem key={el.title} button onClick={el.onClick}>\r\n                      {el.icon}\r\n                      {el.title}\r\n                    </ListItem>\r\n                  ))\r\n                }\r\n              </List>\r\n            )\r\n          }\r\n        </Popover>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport SetProgressAndPauseButton from './SetProgressAndPauseButton'\r\nimport ChangeProjectStateDropdown from './ChangeProjectStateDropdown'\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport StartIcon from '@material-ui/icons/PlayArrow';\r\nimport UndoIcon from '@material-ui/icons/Undo';\r\nimport './css/ChangeProjectStateCell.css'\r\n\r\n// a simple display only component that lets the user edit a project's state\r\nexport default function ChangeProjectStateCell(props){\r\n  // there are always 1-2 buttons, which ones depends on isMobile and the current state of the project\r\n  // the mobile UI can only fit 1 button, desktop can fit 2\r\n  let content = []\r\n  // if the project is done, show an undo button (to let the user go back to \"paused\") and on desktop, show a \"done\" span\r\n  if(props.row.state === \"done\"){\r\n    if(!props.isMobile) content.push(<span key=\"doneSpan\" className=\"done\">DONE</span>)\r\n    content.push(\r\n      <IconButton\r\n        key=\"undo\"\r\n        aria-label=\"Mark project as undone\"\r\n        onClick={props.onProjectStateChange.bind(this, props.row.id, \"paused\")}\r\n      >\r\n        <UndoIcon/>\r\n      </IconButton>\r\n    )\r\n  }\r\n  else{\r\n    // if the state is \"workingOnIt\", show a pause button and a done button on desktop and a dropdown with these option on mobile\r\n    if(props.row.state === \"workingOnIt\"){\r\n      if(props.isMobile){\r\n        content.push(\r\n          <ChangeProjectStateDropdown\r\n            key=\"dropdown\"\r\n            row={props.row}\r\n            currentTime={props.currentTime}\r\n            onProjectStateChange={props.onProjectStateChange}\r\n            progressCapped={props.progressCapped}\r\n          />\r\n        )\r\n      }\r\n      else{\r\n        content.push(\r\n          <SetProgressAndPauseButton\r\n            key=\"pause\"\r\n            row={props.row}\r\n            currentTime={props.currentTime}\r\n            onPause={props.onProjectStateChange} />\r\n        )\r\n      }\r\n    }\r\n    else{\r\n      content.push(\r\n        <IconButton\r\n          key=\"start\"\r\n          aria-label=\"Start working on the project\"\r\n          onClick={props.onProjectStateChange.bind(this, props.row.id, \"workingOnIt\")}\r\n          color=\"primary\"\r\n        >\r\n          <StartIcon />\r\n        </IconButton>\r\n      )\r\n    }\r\n\r\n    if(!props.isMobile){\r\n      content.push(\r\n        <IconButton\r\n          key=\"done\"\r\n          aria-label=\"Mark the project as done\"\r\n          onClick={props.onProjectStateChange.bind(this, props.row.id, \"done\")}\r\n          color={props.row.state === \"workingOnIt\" ? \"primary\" : undefined}>\r\n          <DoneIcon />\r\n        </IconButton>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TableCell className=\"ChangeProjectStateCell\">\r\n      {content.map(el => el)}\r\n    </TableCell>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport TimeCalc from './util/TimeCalc'\r\n\r\n// displays the startTime and endTime with the relevant styling, Tooltip etc.\r\nconst ProjectsTableTimeCell = props => {\r\n  let cellContent = (\r\n    <div>\r\n      <span\r\n        className={props.startIsTooLate && props.stateClass === \"stateClassTooLate\"  ? props.stateClass : null}\r\n      >\r\n        {TimeCalc.makeString(props.row.plannedTime.start,\r\n          props.row.plannedTime.start.pm !== props.row.plannedTime.end.pm,\r\n          true,\r\n          props.timeFormat24H\r\n        ) /*showPmOrAm only if it's different from the endTime*/}\r\n      </span>\r\n      <span\r\n        className={props.startIsTooLate && props.endIsTooLate && props.stateClass === \"stateClassTooLate\" ? props.stateClass : null}\r\n      >\r\n        -\r\n      </span>\r\n      <span\r\n        className={props.endIsTooLate && props.stateClass !== \"stateClassDone\" ? \"stateClassTooLate\" : null}\r\n      >\r\n        {TimeCalc.makeString(props.row.plannedTime.end, true, false, props.timeFormat24H)}\r\n      </span>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <TableCell className={props.showEditing ? \"setStartTimeCell\" : null}>\r\n      {props.isMobile ? (\r\n        <Tooltip\r\n          title={props.progress + \"/\" + props.row.estimatedDuration + \" done\"}\r\n          disableFocusListener disableTouchListener\r\n          children={cellContent}\r\n        />\r\n      ) : cellContent}\r\n    </TableCell>\r\n  )\r\n}\r\n\r\nexport default ProjectsTableTimeCell\r\n","import React from 'react';\r\nimport ChangeProjectStateCell from './ChangeProjectStateCell'\r\nimport ProjectsTableTimeCell from './ProjectsTableTimeCell'\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport TimeCalc from './util/TimeCalc'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport makeDaysString from './util/makeDaysString'\r\nimport { SettingsContext, IsMobileContext } from './_Context'\r\nimport './css/ProjectsTableRow.css'\r\n\r\n// a simple display element for showing information about the project\r\nconst ProjectsTableRowDisplay = props => {\r\n  let stateClass, startIsTooLate, endIsTooLate, timeLeft\r\n  let {progress, progressCapped} = props\r\n  if(!props.isDefaultProjects){\r\n    timeLeft = parseInt(props.row.estimatedDuration) - progressCapped\r\n\r\n    // get the stateClass (too late or done) and tableRowStyle (to display progress graphically)\r\n    // figure out if the start and the end are late, if they are, show them in red\r\n    startIsTooLate = !TimeCalc.isBiggerThan(\r\n      TimeCalc.add(props.row.plannedTime.start, progressCapped),\r\n      props.currentTime, true, true)\r\n\r\n    let endTimeInMinutes = TimeCalc.toMinutesSinceMidnight(props.row.plannedTime.end, true)\r\n    let bufferLength = props.row.estimatedDuration * props.settings.bufferTimePercentage\r\n    endIsTooLate = !TimeCalc.isBiggerThan(\r\n      // take the bufferTime into account (only show the end in red if currentTime > endTime + buffer)\r\n      endTimeInMinutes + bufferLength,\r\n      props.currentTime,\r\n      true,true\r\n    )\r\n\r\n    if(props.row.state === \"done\") stateClass = \"stateClassDone\"\r\n    else{\r\n      if(startIsTooLate && props.row.state !== \"workingOnIt\"){\r\n        stateClass = \"stateClassTooLate\"\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <IsMobileContext.Consumer>\r\n      {isMobile => (\r\n        <React.Fragment>\r\n          <TableCell className={stateClass} children={props.row.name} />\r\n          {(!isMobile || props.isDefaultProjects) && (\r\n            <TableCell>\r\n              {progress && props.row.state !== \"done\" ? (\r\n                <Tooltip title={progress + \"/\" + props.row.estimatedDuration + \" done\"}>\r\n                  <span>\r\n                    {timeLeft} minutes left\r\n                  </span>\r\n                </Tooltip>\r\n              ) : (\r\n                props.row.estimatedDuration + \" minutes\"\r\n              )}\r\n            </TableCell>\r\n          )}\r\n\r\n          {!props.isDefaultProjects && (\r\n            <SettingsContext.Consumer>\r\n              {settings => (\r\n                <ProjectsTableTimeCell\r\n                  showEditing={false}\r\n                  startIsTooLate={startIsTooLate}\r\n                  endIsTooLate={endIsTooLate}\r\n                  stateClass={stateClass}\r\n                  row={props.row}\r\n                  timeFormat24H={settings.timeFormat24H}\r\n                  isMobile={isMobile}\r\n                  progress={progress}\r\n                />\r\n              )}\r\n            </SettingsContext.Consumer>\r\n          )}\r\n\r\n          {props.isDefaultProjects && !isMobile && (\r\n            <TableCell>\r\n              {makeDaysString(props.row.days, window.innerWidth < 950)}\r\n            </TableCell>\r\n          )}\r\n\r\n          {props.mode === \"planning\" ? (\r\n            <TableCell>\r\n              <IconButton\r\n                aria-label=\"Edit the project\"\r\n                onClick={isMobile ? props.startEditingMobile.bind(this, props.row.id) : props.startEditing}>\r\n                <EditIcon />\r\n              </IconButton>\r\n              {\r\n                !isMobile && (\r\n                  <IconButton\r\n                    aria-label=\"Delete the project\"\r\n                    onClick={props.onDeleteProject.bind(this, props.row.id)}\r\n                    className=\"deleteIconButton\">\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                )\r\n              }\r\n            </TableCell>\r\n          ) : (\r\n            <ChangeProjectStateCell\r\n              row={props.row}\r\n              onProjectStateChange={props.onProjectStateChange}\r\n              currentTime={props.currentTime}\r\n              isMobile={isMobile}\r\n              progressCapped={progressCapped}\r\n            />\r\n          )}\r\n        </React.Fragment>\r\n      )}\r\n    </IsMobileContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default ProjectsTableRowDisplay\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from './ColorPicker'\r\nimport ProjectsTableRowEditing from './ProjectsTableRowEditing'\r\nimport ProjectsTableRowDisplay from './ProjectsTableRowDisplay'\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport RootRef from '@material-ui/core/RootRef';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport TimeCalc from './util/TimeCalc'\r\nimport './css/ProjectsTableRow.css'\r\n\r\n// used both for diplaying and editing projects (at least in the desktop version)\r\n// used both for projects and defaultProject\r\n// update: this component is now only a \"wrapper\" ish that reders either ProjectsTableRowDisplay or ProjectsTableRowEditing\r\n// it also handles the functionality that these two have in common to DRY the code\r\nexport default class ProjectsTableRow extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {editing: false}\r\n  }\r\n\r\n  render(){\r\n    // are we currently editing or just showing data?\r\n    // also, don't show the editing UI if we're in \"working\" mode\r\n    let showEditing = this.state.editing && this.props.mode === \"planning\"\r\n\r\n    let {isDefaultProjects} = this.props\r\n\r\n    let progress, progressCapped, tableRowStyle = {}\r\n    if(!isDefaultProjects){\r\n      // calculate progress\r\n      if(this.props.row.progress) progress = parseInt(this.props.row.progress)\r\n      else progress = 0\r\n      if(this.props.row.state === \"workingOnIt\"){\r\n        progress += TimeCalc.subtractToMinutes(\r\n          {...this.props.currentTime, s: new Date().getSeconds()},\r\n          this.props.row.startedWorkingOnIt,\r\n          true\r\n        )\r\n      }\r\n\r\n      progressCapped = progress // same as progress except capped at estimatedDuration\r\n      if(progressCapped > this.props.row.estimatedDuration) progressCapped = this.props.row.estimatedDuration\r\n\r\n      let percentageDone\r\n\r\n      if(this.props.row.state === \"done\") percentageDone = 100\r\n      else percentageDone = 100 * progressCapped / this.props.row.estimatedDuration\r\n\r\n      // fills the background of the row with green color, the size of which corresponds to progress as a fraction of duration\r\n      tableRowStyle = {\r\n        backgroundImage: `linear-gradient(to right, #00c8002e, #00c8002e ${percentageDone}%, transparent ${percentageDone}%, transparent 100%)`\r\n      }\r\n    }\r\n\r\n    // get the props that should be passed down\r\n    let passThroughProps\r\n    if(showEditing){\r\n      let {row, settings} = this.props\r\n      let {id} = row\r\n\r\n      let {name, estimatedDuration, color} = row\r\n      let inputValues = {name, duration: estimatedDuration, color}\r\n\r\n      let deleteFunc = this.props.onDeleteProject.bind(this, id)\r\n      let onDoneEditing = this.props.onDoneEditing.bind(this, id)\r\n\r\n      let type\r\n      if(isDefaultProjects){\r\n        type = \"default\"\r\n        inputValues.days = row.days\r\n      }\r\n      else{\r\n        inputValues.startTime = row.plannedTime.start\r\n      }\r\n\r\n      passThroughProps = {settings, inputValues, delete: deleteFunc, onDoneEditing, type, id}\r\n    }\r\n    else{\r\n      let {\r\n        row, mode, isDefaultProjects, settings, currentTime,\r\n        startEditingMobile, onDeleteProject, onProjectStateChange\r\n      } = this.props\r\n      passThroughProps = {\r\n        row, mode, isDefaultProjects, settings, currentTime,\r\n        startEditingMobile, onDeleteProject, onProjectStateChange\r\n      }\r\n    }\r\n\r\n    return (\r\n      <RootRef rootRef={this.props.provided.innerRef}>\r\n        <TableRow\r\n          {...this.props.provided.draggableProps}\r\n          style={/* merging the two style objects */{\r\n            ...this.props.provided.draggableProps.style,\r\n            ...tableRowStyle\r\n          }}\r\n        >\r\n          <TableCell>\r\n            <Icon className=\"dragIcon\" {...this.props.provided.dragHandleProps}>drag_indicator</Icon>\r\n            <ColorPicker value={this.props.row.color} onChange={this.props.onColorChange.bind(this, this.props.row.id)}/>\r\n          </TableCell>\r\n\r\n          {showEditing ? (\r\n            <ProjectsTableRowEditing\r\n              close={() => this.setState({editing: false})}\r\n              {...passThroughProps}\r\n            />\r\n          ) : (\r\n            <ProjectsTableRowDisplay\r\n              progress={progress}\r\n              progressCapped={progressCapped}\r\n              startEditing={() => this.setState({editing: true})}\r\n              {...passThroughProps}\r\n            />\r\n          )}\r\n        </TableRow>\r\n      </RootRef>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ColorPicker from './ColorPicker'\r\nimport SetStartTimeCell from './SetStartTimeCell'\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Input from '@material-ui/core/Input';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport withAdd from './HOCs/withAdd'\r\nimport { SettingsContext } from './_Context'\r\nimport './css/AddProjectRow.css'\r\n\r\n\r\nconst AddProjectRow = props => (\r\n  <TableRow id=\"addProjectRow\">\r\n    <TableCell>\r\n      <ColorPicker\r\n        value={props.inputValues.color}\r\n        onChange={props.onColorChange} />\r\n    </TableCell>\r\n    <TableCell className=\"setNameCell\">\r\n      <div id=\"addProjectLabelDiv\">\r\n        <label htmlFor=\"addProjectNameInput\">\r\n          Add a project:\r\n        </label>\r\n      </div>\r\n      <Input\r\n        onChange={props.onInputChange.bind(this, \"name\")}\r\n        value={props.inputValues.name}\r\n        placeholder=\"Name\"\r\n        aria-label=\"Name\"\r\n        error={props.showErrors.name || props.showErrorProp}\r\n        onKeyPress={props.onKeyPress}\r\n        id=\"addProjectNameInput\"\r\n        autoFocus\r\n      />\r\n    </TableCell>\r\n\r\n    <SettingsContext.Consumer>\r\n      {({roundTo}) => (\r\n        <TableCell className=\"setDurationCell\">\r\n          <Input\r\n            onChange={props.onInputChange.bind(this, \"duration\")}\r\n            value={props.inputValues.duration}\r\n            placeholder=\"Duration\"\r\n            aria-label=\"Duration\"\r\n            error={props.showErrors.duration || props.showErrorProp}\r\n            onKeyPress={props.onKeyPress}\r\n            type=\"number\"\r\n            inputProps={{step: roundTo}}\r\n          /> minutes\r\n        </TableCell>\r\n      )}\r\n    </SettingsContext.Consumer>\r\n\r\n    {props.type !== \"default\" && (\r\n      <SetStartTimeCell\r\n        onChange={props.onTimeInputChange.bind(this, \"startTime\")}\r\n        value={props.inputValues.startTime}\r\n        firstInputId=\"setStartTimeInput\"\r\n        hError={props.showErrors.startTimeH || props.showErrorProp}\r\n        mError={props.showErrors.startTimeM || props.showErrorProp}\r\n        showErrors={props.showErrors}\r\n        onEnterPress={props.add}\r\n      />\r\n    )}\r\n    {props.type === \"default\" && (\r\n      <TableCell>\r\n        <Button onClick={props.openDaysDialog} variant=\"outlined\">\r\n          Days\r\n        </Button>\r\n      </TableCell>\r\n    )}\r\n    <TableCell>\r\n      <IconButton color=\"primary\"\r\n        style={{color: props.showErrorProp ? \"red\" : null}}\r\n        aria-label=\"Add the new project\"\r\n        onClick={props.add}>\r\n        <AddIcon />\r\n      </IconButton>\r\n    </TableCell>\r\n  </TableRow>\r\n)\r\n\r\nexport default withAdd(AddProjectRow)\r\n","import React from 'react';\r\nimport ProjectsTableRow from './ProjectsTableRow'\r\nimport AddProjectRow from './AddProjectRow'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport RootRef from '@material-ui/core/RootRef';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport './css/DefaultProjectsDrawer.css'\r\n\r\nconst DefaultProjectsDrawer = props => {\r\n  let header = (\r\n    <React.Fragment>\r\n      <Grid>\r\n        <Typography variant=\"h6\" className=\"drawerTitle\">Repetitive projects:</Typography>\r\n      </Grid>\r\n      <Grid>\r\n        <label style={{color: props.settings.darkTheme ? \"white\" : \"black\"}}>\r\n          Use repetitive projects\r\n          <Switch\r\n            color=\"primary\"\r\n            checked={props.useDefaultProjects && props.useDefaultProjects !== \"false\" /*handle string input*/}\r\n            onChange={props.onUseDefaultProjectsChange}\r\n            aria-label=\"Use default projects\"\r\n          />\r\n        </label>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.mobile ? header : <Grid container justify=\"space-between\">{header}</Grid>}\r\n      <Table className=\"projectsTable\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell/>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Duration</TableCell>\r\n            {!props.mobile && <TableCell>Days</TableCell>}\r\n            <TableCell/>\r\n          </TableRow>\r\n        </TableHead>\r\n        <DragDropContext onDragEnd={props.onDragEnd}>\r\n          <Droppable droppableId=\"0\">\r\n            {provided =>(\r\n              <RootRef rootRef={provided.innerRef}>\r\n                <TableBody {...provided.droppableProps}>\r\n                  {!props.projects.length && (\r\n                    <TableRow>\r\n                      <TableCell/>\r\n                      <TableCell colSpan={props.mobile ? 2 : 3}>\r\n                        You haven't set any repetitive projects yet\r\n                      </TableCell>\r\n                      <TableCell/>\r\n                    </TableRow>\r\n                  )}\r\n                  {props.projects.map((project, i) => (\r\n                    <Draggable key={project.id} draggableId={project.id.toString()} index={i}>\r\n                      {provided2 => (\r\n                        <ProjectsTableRow\r\n                          mode=\"planning\"\r\n                          row={project}\r\n                          currentTime={props.currentTime}\r\n                          provided={provided2}\r\n                          onColorChange={props.onColorChange}\r\n                          onDoneEditing={props.onDoneEditing}\r\n                          onProjectStateChange={props.onProjectStateChange}\r\n                          onDeleteProject={props.onDeleteProject}\r\n                          isDefaultProjects\r\n                          startEditingMobile={props.startEditingMobile}\r\n                        />\r\n                      )}\r\n                    </Draggable>\r\n                    ))}\r\n                  {provided.placeholder}\r\n                  {\r\n                    !props.mobile && (\r\n                      <AddProjectRow\r\n                        settings={props.settings}\r\n                        defaultColorIndex={props.defaultColorIndex}\r\n                        showErrors={{}}\r\n                        lastProject={props.projects[props.projects.length - 1]}\r\n                        onAddProject={props.onAddProject}\r\n                        type=\"default\"\r\n                      />\r\n                    )\r\n                  }\r\n                </TableBody>\r\n              </RootRef>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      </Table>\r\n      {\r\n        !props.mobile && (\r\n          <Grid container justify=\"center\">\r\n            <Button\r\n              onClick={props.onClose}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{margin: \".5rem\"}}>\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n        )\r\n      }\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default DefaultProjectsDrawer\r\n","import React from 'react'\r\nimport BackButton from './BackButton'\r\nimport DefaultProjectsDrawer from '../DefaultProjectsDrawer'\r\nimport AddFab from '../AddFab'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst DefaultProjectsView = props => {\r\n  let { changeView, ...passThoughProps } = props\r\n\r\n  return (\r\n    <Grid className=\"DefaultProjectsView container\">\r\n      <BackButton onClick={changeView.bind(this, \"defaultProjects\", false)} />\r\n      <DefaultProjectsDrawer {...passThoughProps} mobile />\r\n      <AddFab onClick={changeView.bind(this, \"add\", true, {type: \"default\"})} />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default DefaultProjectsView\r\n","import React from 'react';\r\nimport Fab from '@material-ui/core/Fab'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport './css/ModeSwitch.css'\r\n\r\n// UI for switching between planning and working\r\nexport default function ModeSwitch(props) {\r\n  let buttonsArray = [{label: \"Plan\", val: \"planning\"}, {label: \"Work\", val: \"working\"}]\r\n  let buttons = buttonsArray.map(el => (\r\n    <Grid key={el.val}>\r\n      <Fab\r\n        onClick={props.onModeChange.bind(this, el.val)}\r\n        color={el.val === props.mode ? 'primary' : null}>\r\n        {el.label}\r\n      </Fab>\r\n    </Grid>\r\n  ))\r\n\r\n  return (\r\n    <Grid\r\n      className=\"ModeSwitch\"\r\n      container\r\n      alignItems='baseline'\r\n      justify=\"space-between\">\r\n      {buttons[0]}\r\n      {props.children}\r\n      {buttons[1]}\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ProjectsTableRow from './ProjectsTableRow'\r\nimport AddProjectRow from './AddProjectRow'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport RootRef from '@material-ui/core/RootRef';\r\nimport { IsMobileContext } from './_Context'\r\nimport './css/ProjectsTable.css'\r\n\r\nconst ProjectsTable = props => (\r\n  <IsMobileContext.Consumer>\r\n    {isMobile => (\r\n      <Table id=\"ProjectsTable\"  className=\"projectsTable\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell/>\r\n            <TableCell>Name</TableCell>\r\n            {!isMobile && <TableCell>Duration estimate</TableCell>}\r\n            <TableCell>{isMobile ? \"Time\" : \"Planned time\"}</TableCell>\r\n            <TableCell/>\r\n          </TableRow>\r\n        </TableHead>\r\n        <DragDropContext onDragEnd={props.onDragEnd}>\r\n          <Droppable droppableId=\"0\">\r\n            {provided => (\r\n              <RootRef rootRef={provided.innerRef}>\r\n                <TableBody {...provided.droppableProps}>\r\n                  {!props.projects.length && (\r\n                    <TableRow>\r\n                      <TableCell/>\r\n                      <TableCell\r\n                        colSpan={isMobile ? 2 : 3}\r\n                        style={props.showErrors.noProjects ? {\r\n                          color: \"red\",\r\n                          fontWeight: 500\r\n                        } : null}\r\n                      >\r\n                        You haven't set any projects yet\r\n                      </TableCell>\r\n                      <TableCell/>\r\n                    </TableRow>\r\n                  )}\r\n                  {props.projects.map((row, i) => (\r\n                    <Draggable key={row.id} draggableId={row.id.toString()} index={i}>\r\n                      {provided => (\r\n                        <ProjectsTableRow\r\n                          mode={props.mode}\r\n                          row={row}\r\n                          currentTime={props.currentTime}\r\n                          settings={props.settings}\r\n                          provided={provided}\r\n                          onColorChange={props.onColorChange}\r\n                          onDoneEditing={props.onDoneEditing}\r\n                          onProjectStateChange={props.onProjectStateChange}\r\n                          onDeleteProject={props.onDeleteProject}\r\n                          startEditingMobile={props.startEditingMobile}\r\n                        />\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                  {\r\n                    // if in planning mode..\r\n                    props.mode === \"planning\" && !isMobile && (\r\n                      <AddProjectRow\r\n                        settings={props.settings}\r\n                        defaultColorIndex={props.defaultColorIndex}\r\n                        showErrors={props.showErrors}\r\n                        lastProject={props.projects[props.projects.length - 1]}\r\n                        onAddProject={props.onAddProject}\r\n                        currentTime={props.currentTime}\r\n                      />\r\n                    )\r\n                  }\r\n                </TableBody>\r\n              </RootRef>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      </Table>\r\n    )}\r\n  </IsMobileContext.Consumer>\r\n)\r\n\r\nexport default ProjectsTable\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport TimeCalc from './util/TimeCalc'\r\nimport './css/TimeStatsModal.css'\r\n\r\n// a util function used to cnvert the data and push it into the data that will be used to show a doughnut chart\r\nfunction addProjectToDoughnutData(doughnutData, project, progress){\r\n  doughnutData.datasets[0].backgroundColor.push(project.color)\r\n  doughnutData.datasets[0].data.push(progress)\r\n  doughnutData.labels.push(project.name)\r\n\r\n  if(project.estimatedDuration){\r\n    doughnutData.datasets[1].backgroundColor.push(project.color)\r\n    doughnutData.datasets[1].data.push(project.estimatedDuration)\r\n  }\r\n}\r\n\r\nconst TimeStatsModal = props => {\r\n  let { timeFormat24H, roundTo, bufferTimePercentage } = props.settings\r\n\r\n  // calculate some basic stats\r\n  let predictedEndTime = TimeCalc.round(TimeCalc.add(props.currentTime, props.stats.timeNeeded), roundTo)\r\n  let plannedMinusPredictedEndTimePositive = TimeCalc.isBiggerThan(props.endTime, predictedEndTime, false, true)\r\n  // make sure the input to makeString is positive\r\n  let plannedMinusPredictedEndTime\r\n  if(plannedMinusPredictedEndTimePositive){\r\n    plannedMinusPredictedEndTime = TimeCalc.round(TimeCalc.subtract(props.endTime, predictedEndTime, true), roundTo)\r\n  }\r\n  else{\r\n    plannedMinusPredictedEndTime = TimeCalc.round(TimeCalc.subtract(predictedEndTime, props.endTime, true), roundTo)\r\n  }\r\n\r\n  let totalDoneTimeSoFar = 0, totalTimeToBeDone = 0, predictedUnproductiveTime = 0\r\n  let doughnutData = {\r\n    datasets: [\r\n      {\r\n        label: \"Actual\",\r\n        backgroundColor: [],\r\n        data: []\r\n      },\r\n      {\r\n        label: \"Planned\",\r\n        backgroundColor: [],\r\n        data: []\r\n      }\r\n    ],\r\n    labels: []\r\n  }\r\n\r\n  // add each project to doughnutData\r\n  props.projects.forEach(project => {\r\n    // calculate its duration, determine what should be added to doughnutData\r\n    // (if the project is finished, add the whole thing to both charts, else calculate progress)\r\n    let duration = parseInt(project.estimatedDuration)\r\n    if(project.state === \"done\"){\r\n      totalDoneTimeSoFar += duration\r\n      addProjectToDoughnutData(doughnutData, project, duration)\r\n    }\r\n    else{\r\n      let progress = 0\r\n      if(project.progress) progress += parseInt(project.progress)\r\n      if(project.state === \"workingOnIt\" && project.startedWorkingOnIt){\r\n        progress += TimeCalc.subtractToMinutes(\r\n          {...props.currentTime, s: new Date().getSeconds()},\r\n          project.startedWorkingOnIt,\r\n          true\r\n        )\r\n      }\r\n\r\n      if(progress > duration) progress = duration\r\n\r\n      totalDoneTimeSoFar += progress\r\n      totalTimeToBeDone += (duration - progress)\r\n      addProjectToDoughnutData(doughnutData, project, progress)\r\n    }\r\n\r\n    predictedUnproductiveTime += Math.round(duration * bufferTimePercentage)\r\n  })\r\n\r\n  // add breaks to doughnutData\r\n  props.breaks.forEach(breakInfo => {\r\n    let breakDuration = TimeCalc.subtractToMinutes(breakInfo.endTime, breakInfo.startTime, true)\r\n    let color = \"#bbb\" // the color used for all breaks universally\r\n\r\n    // add the break to the \"planned\" chart\r\n    doughnutData.labels.push(breakInfo.name)\r\n    doughnutData.datasets[1].backgroundColor.push(color)\r\n    doughnutData.datasets[1].data.push(breakDuration)\r\n\r\n    // add the break to the \"your day so far\" chart\r\n    let durationSoFar = 0\r\n    // determine durationSoFar\r\n    if(TimeCalc.isBiggerThan(props.currentTime, breakInfo.startTime, false, true)){\r\n\r\n      // determine what part of the break to add\r\n      if(TimeCalc.isBiggerThan(props.currentTime, breakInfo.endTime, true, true)){\r\n        // add the whole break\r\n        durationSoFar = breakDuration\r\n      }\r\n      else{\r\n        // only add the part that has taken place already\r\n        durationSoFar = TimeCalc.subtractToMinutes(props.currentTime, breakInfo.startTime, true)\r\n      }\r\n    }\r\n    doughnutData.datasets[0].backgroundColor.push(color)\r\n    doughnutData.datasets[0].data.push(durationSoFar)\r\n  })\r\n\r\n  // if realEndTime is available, convert and use it, else use currentTime\r\n  let realEndTime\r\n  if(props.realEndTime){\r\n    let date = new Date(props.realEndTime)\r\n    let h = date.getHours()\r\n    let m = date.getMinutes()\r\n    if(date.getSeconds() >= 30) m++ // handle seconds\r\n    let pm = false\r\n    if(h > 12){\r\n      h -= 12\r\n      pm = true\r\n    }\r\n    realEndTime = {h, m, pm}\r\n  }\r\n\r\n  // calculate some more stats\r\n  let totalTimePassed = TimeCalc.subtractToMinutes(realEndTime || props.currentTime, props.startTime, true)\r\n  let timeUntilPredictedEndTime = TimeCalc.subtractToMinutes(predictedEndTime, props.currentTime, true)\r\n  let productivityPercentageSoFar = Math.round(100 * totalDoneTimeSoFar / totalTimePassed)\r\n  let predictedProductivityPercentage = Math.round(100 * (totalDoneTimeSoFar + totalTimeToBeDone) / (totalTimePassed + timeUntilPredictedEndTime))\r\n\r\n  // push the unproductive time so far to the doughnutData\r\n  let unproductiveTime = totalTimePassed - totalDoneTimeSoFar\r\n  unproductiveTime = Math.round(unproductiveTime / roundTo) * roundTo\r\n  addProjectToDoughnutData(doughnutData, {name: \"Unproductive time\", color: \"#aaa\"}, unproductiveTime)\r\n\r\n  // finish calculating the predictedUnproductiveTime\r\n  for(let el of props.breaks){\r\n    predictedUnproductiveTime += TimeCalc.subtractToMinutes(el.endTime, el.startTime, true)\r\n  }\r\n  predictedUnproductiveTime = Math.round(predictedUnproductiveTime / roundTo) * roundTo\r\n\r\n  // push predictedUnproductiveTime to the doughnutData\r\n  doughnutData.datasets[1].backgroundColor.push(\"#aaa\")\r\n  doughnutData.datasets[1].data.push(predictedUnproductiveTime)\r\n\r\n  var textColor = props.settings.darkTheme ? \"white\" : \"black\"\r\n\r\n\r\n  //console.warn(\"Conditional debugger\")\r\n  //if(isNaN(productivityPercentageSoFar) || isNaN(predictedProductivityPercentage)) debugger\r\n\r\n  return (\r\n    <div className=\"TimeStatsModal\" style={{color: textColor}}>\r\n      <Typography variant=\"h6\">\r\n        You need {TimeCalc.makeFullLengthDurationString(props.stats.timeNeeded)}\r\n      </Typography>\r\n      <b>{TimeCalc.makeString(props.stats.totalProjectTime, false, false, timeFormat24H)}</b> for projects\r\n      <br/>\r\n      {TimeCalc.makeString(props.stats.totalBufferTime, false, false, timeFormat24H)} for buffers\r\n      <br/>\r\n      {TimeCalc.makeString(props.stats.totalBreakTime, false, false, timeFormat24H)} for breaks\r\n      <div className=\"section\">\r\n        At the current pace, you'll be done at <b>{TimeCalc.makeString(predictedEndTime, true, false, timeFormat24H)}</b>\r\n        <br/>\r\n        That's\r\n        <b>\r\n          <span> </span>\r\n          {TimeCalc.makeFullLengthDurationString(plannedMinusPredictedEndTime)}\r\n          <span> </span>\r\n          {plannedMinusPredictedEndTimePositive ? \"earlier\" : \"later\"}\r\n        </b>\r\n        <span> </span>\r\n        than what you planned\r\n      </div>\r\n      {!isNaN(productivityPercentageSoFar) && productivityPercentageSoFar >= 0 && productivityPercentageSoFar <= 100 && (\r\n        <div className=\"section\">\r\n          You've been productive <b>{productivityPercentageSoFar}%</b> of the time so far\r\n          <br/>\r\n          Assuming you're done at {TimeCalc.makeString(predictedEndTime, true, false, timeFormat24H)},\r\n          <br/>\r\n          your productivity percentage will be\r\n          <span> </span>\r\n          {predictedProductivityPercentage < productivityPercentageSoFar ? (\r\n            <Tooltip disableFocusListener disableTouchListener\r\n              title={\r\n                `Your predicted productivity percentage is lower then your current one because of buffer times.\r\n                You can learn more about buffer times in the about section.`\r\n              }\r\n            >\r\n              <b>\r\n                {predictedProductivityPercentage}%\r\n              </b>\r\n            </Tooltip>\r\n          ) : (\r\n            <b>\r\n              {predictedProductivityPercentage}%\r\n            </b>\r\n          )}\r\n        </div>\r\n      )}\r\n      <div className=\"section\">\r\n        <Typography variant=\"h6\">\r\n          Your day so far:\r\n          <Tooltip disableFocusListener disableTouchListener\r\n            title={\r\n              `The inner circle represents your day as you planned it,\r\n              the outer one represents your day so far\r\n              (starting at ${TimeCalc.makeString(props.startTime, true, false, timeFormat24H)})`\r\n            }\r\n          >\r\n            <HelpIcon className=\"helperIcon\" />\r\n          </Tooltip>\r\n        </Typography>\r\n        <div>\r\n          <Doughnut\r\n            data={doughnutData}\r\n            width={250}\r\n            height={200 + doughnutData.datasets[0].data.length * 4}\r\n            options={{maintainAspectRatio: false, legend: {position: \"bottom\", labels: {fontColor: textColor}}}}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimeStatsModal\r\n","import React, { Component } from 'react';\r\nimport TimeStatsModal from './TimeStatsModal'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TimeCalc from './util/TimeCalc'\r\nimport './css/TimeStats.css'\r\n\r\nexport default class TimeStats extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      currentTimeAvailable: false, // stores whether the currentTime has been set (to prevent unnecessary and useless calculation on load)\r\n      modalOpen: false\r\n    }\r\n\r\n    this.currentTimeUpdateInterval = setInterval(this.updateCurrentTime, 1000)\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.updateCurrentTime()\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    clearInterval(this.currentTimeUpdateInterval)\r\n  }\r\n\r\n  // runs every second, checks if the time hasn't changed since the last time it ran (ignoring seconds, ms, etc. of course)\r\n  updateCurrentTime = () => {\r\n    let currentTime = new Date()\r\n    let m = currentTime.getMinutes()\r\n\r\n    if(!this.state.currentTimeAvailable) this.setState({currentTimeAvailable: true})\r\n\r\n    // if it's still the same minute, there's no need to update the clock\r\n    // (and if this isn't the initial time setting)\r\n    if(m === this.props.currentTime.m && this.props.currentTime.h !== 0) return\r\n\r\n    // format the time\r\n    let h = currentTime.getHours()\r\n    let pm = h >= 12\r\n    h = h % 12\r\n    h = h === 0 ? 12 : h\r\n\r\n    // update the state\r\n    this.props.onCurrentTimeChange({h, m, pm})\r\n  }\r\n\r\n  openModal = () => {\r\n    this.setState({modalOpen: true})\r\n  }\r\n\r\n  render(){\r\n    // calculate the stats\r\n    // (if currentTime and settings are available)\r\n    let totalProjectTime, totalBufferTime, totalBreakTime, timeNeeded,\r\n      timeRemaining, timeNeededWarning, timeRemainingNegative, timeRemainingWarning\r\n\r\n    if(this.state.currentTimeAvailable && this.props.settings.bufferTimePercentage){\r\n      totalProjectTime = totalBufferTime = 0\r\n      this.props.projects.forEach((project, i) => {\r\n        if(project.state !== \"done\"){\r\n          // determine how much time there is left and how much progress there has been\r\n          let durationLeft = parseInt(project.estimatedDuration)\r\n\r\n          let progress = parseInt(project.progress)\r\n          if(project.state === \"workingOnIt\" && project.startedWorkingOnIt){\r\n            progress += TimeCalc.subtractToMinutes(\r\n              {...this.props.currentTime, s: new Date().getSeconds()},\r\n              project.startedWorkingOnIt,\r\n              true\r\n            )\r\n          }\r\n\r\n          if(progress){\r\n            if(progress > durationLeft) durationLeft = 0\r\n            else durationLeft -= progress\r\n          }\r\n\r\n          totalProjectTime += durationLeft\r\n\r\n          // if this isn't the last project, add a buffer time to the sum\r\n          if(i !== this.props.projects.length - 1){\r\n            totalBufferTime += Math.round(durationLeft * this.props.settings.bufferTimePercentage)\r\n          }\r\n        }\r\n      })\r\n      // round according to settings\r\n      totalProjectTime = Math.round(totalProjectTime / this.props.settings.roundTo) * this.props.settings.roundTo\r\n      totalBufferTime = Math.round(totalBufferTime / this.props.settings.roundTo) * this.props.settings.roundTo\r\n\r\n      // calculate similar stats for breaks\r\n      totalBreakTime = 0\r\n      for(let el of this.props.breaks){\r\n        let endTime = TimeCalc.toMinutesSinceMidnight(el.endTime, true)\r\n        let currentTime = TimeCalc.toMinutesSinceMidnight(this.props.currentTime, true)\r\n\r\n        // if the break has already passed, don't count it in\r\n        if(TimeCalc.isBiggerThan(currentTime, endTime, false)) continue\r\n\r\n        let startTime = TimeCalc.toMinutesSinceMidnight(el.startTime, true)\r\n\r\n        // if the break hasn't started yet, count in its entire length\r\n        if(TimeCalc.isBiggerThan(startTime, currentTime, true)){\r\n          totalBreakTime += TimeCalc.subtractToMinutes(endTime, startTime, true)\r\n        }\r\n        // if the break has started and is currently going on, only add the portion of it that hasn't happened yet\r\n        else totalBreakTime += TimeCalc.subtractToMinutes(endTime, currentTime, true)\r\n      }\r\n      // round totalBreakTime according to settings\r\n      totalBreakTime = Math.round(totalBreakTime / this.props.settings.roundTo) * this.props.settings.roundTo\r\n\r\n      // finally, calculate the 2 numbers to be shown at the top of the screen\r\n      timeNeeded = TimeCalc.toTimeObject(TimeCalc.addToMinutes(totalProjectTime, totalBufferTime, totalBreakTime), false)\r\n      timeRemaining = TimeCalc.subtract(this.props.endTime, this.props.currentTime, true)\r\n\r\n      // figure out which warnings to show\r\n      timeNeededWarning = TimeCalc.isBiggerThan(timeNeeded, timeRemaining, false, false)\r\n      timeRemainingNegative = !TimeCalc.isBiggerThan(timeRemaining, 0)\r\n      timeRemainingWarning = timeRemainingNegative && this.props.endTime.h !== \"\" && this.props.endTime.m !== \"\"\r\n    }\r\n    else{\r\n      // used if the currentTime or settings aren't available yet -> faster load time\r\n      totalProjectTime = totalBufferTime = totalBreakTime = 0\r\n      timeNeeded = timeRemaining = {h: 0, m: 0, pm: false}\r\n      timeNeededWarning = timeRemainingNegative = timeRemainingWarning = false\r\n    }\r\n\r\n\r\n    //console.warn(\"Conditional debugger\");\r\n    //if(this.props.projects.length.length && !Number(timeNeeded.m) && !Number(timeNeeded.h)) debugger\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Grid item className={\"timeStatsSideGridItem\" + (timeNeededWarning ? \" timeStatsWarning\" : \"\")}>\r\n          <Tooltip title={\r\n            \"Projects: \" + TimeCalc.makeString(totalProjectTime, false) +\r\n            \",\\nBuffers: \" + TimeCalc.makeString(totalBufferTime, false) +\r\n            \",\\nBreaks: \" + TimeCalc.makeString(totalBreakTime, false) + \" (click for more)\"\r\n          }>\r\n            <div onClick={this.openModal}>\r\n              <div className=\"timeStatsLabelDiv\">\r\n                <label>\r\n                  {this.props.shortLabels ? \"N\" : \"Time n\"}eeded:\r\n                </label>\r\n              </div>\r\n              {TimeCalc.makeString(timeNeeded, false)}\r\n            </div>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid item>\r\n          <h4>\r\n            {TimeCalc.makeString(this.props.currentTime, true, false, this.props.settings.timeFormat24H)}\r\n          </h4>\r\n        </Grid>\r\n        <Grid item className={\"timeStatsSideGridItem\" + (timeRemainingWarning ? \" timeStatsWarning\" : \"\")}>\r\n          <div onClick={this.openModal}>\r\n            <div className=\"timeStatsLabelDiv\">\r\n              <label>\r\n                {this.props.shortLabels ? \"R\" : \"Time r\"}emaining:\r\n              </label>\r\n            </div>\r\n            {timeRemainingNegative ? \"0:00\" : TimeCalc.makeString(timeRemaining, false)}\r\n          </div>\r\n        </Grid>\r\n        <Dialog\r\n          open={this.state.modalOpen}\r\n          onClose={() => {this.setState({modalOpen: false})}}\r\n          aria-label=\"Time Stats Modal\"\r\n        >\r\n          <TimeStatsModal\r\n            stats={{timeNeeded, totalProjectTime, totalBufferTime, totalBreakTime}}\r\n            {...this.props}\r\n          />\r\n        </Dialog>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","// objects is an array of projects or breaks, key is either \"projecs\" or \"breaks\"\r\nexport default function makeNewId(objects, key){\r\n  // make a new unique ID\r\n  let newId\r\n  let haveFoundUniqueId = false\r\n\r\n  // if the ID isn't unique (in other words if it already exists in the state or local storage), try again\r\n  while(!haveFoundUniqueId){\r\n    newId = Math.floor(Math.random() * 10**8)\r\n    haveFoundUniqueId = true\r\n\r\n    // make sure the ID is unique within the state\r\n    for(let i = 0; i < objects.length; i++){\r\n      if(objects[i].id === newId){\r\n        haveFoundUniqueId = false\r\n        break\r\n      }\r\n    }\r\n    // make sure there aren't any lastModified fields in the localStorage either\r\n    if(haveFoundUniqueId){\r\n      let localStorageKey = [\"lastModified\", key, newId, \"id\"].join(\"_\")\r\n      if(!isNaN(localStorage[localStorageKey])) haveFoundUniqueId = false\r\n    }\r\n  }\r\n\r\n  return newId\r\n}\r\n","import React, { Component } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TimeSetter from './TimeSetter'\r\nimport TimeCalc from './util/TimeCalc'\r\nimport makeNewId from './util/makeNewId'\r\nimport validationRegex from './util/validationRegex'\r\nimport './css/BreaksDrawer.css'\r\n\r\nexport default class BreaksDrawer extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    // put some props into the state\r\n    let breaks = JSON.parse(JSON.stringify(props.breaks))\r\n    let newBreak = {}\r\n\r\n    // if there are any breaks...\r\n    if(breaks.length){\r\n      // set the default value of newBreak\r\n      newBreak.startTime = TimeCalc.add(breaks[breaks.length - 1].endTime, 90)\r\n      newBreak.endTime = TimeCalc.add(newBreak.startTime, 60)\r\n    }\r\n\r\n    // if there aren't any, set the default value\r\n    else{\r\n      newBreak.startTime = TimeCalc.round(TimeCalc.add(props.currentTime, 90), 15)\r\n      newBreak.endTime = TimeCalc.add(newBreak.startTime, 60)\r\n    }\r\n\r\n    newBreak.name = \"\"\r\n\r\n    // store the length of breaks\r\n    let breakDurations = {\r\n      new: 30\r\n    }\r\n    for(let i = 0; i < breaks.length; i++){\r\n      let breakId = breaks[i].id\r\n      breakDurations[breakId] = TimeCalc.subtractToMinutes(breaks[i].endTime, breaks[i].startTime, true)\r\n    }\r\n\r\n    this.state = {\r\n      breaks,\r\n      newBreak,\r\n      breakDurations,\r\n      errors: {},\r\n      showEndTimeErrors: {},\r\n      temp: {\r\n        showEndTimeErrors: {}\r\n      }\r\n    }\r\n  }\r\n\r\n  // used for simple text input editing (not the start or end times)\r\n  handleInputChange(breakId, propertyId, e){\r\n    let val = e.target.value\r\n\r\n    if(validationRegex.test(val)) return // these characters could be problematic in the stringified JSON\r\n\r\n    if(breakId === \"new\"){ // \"new\" means the input fields of the last row that is used to add new breaks\r\n      let newBreak = this.state.newBreak\r\n      newBreak[propertyId] = val\r\n      this.setState({newBreak})\r\n    }\r\n    else{\r\n      let breaks = this.state.breaks\r\n      let index = breaks.findIndex(el => el.id === breakId)\r\n      breaks[index][propertyId] = val\r\n\r\n      this.setState({breaks})\r\n      this.props.onSave(breaks, {breaks: breakId})\r\n    }\r\n  }\r\n\r\n  validateEndTime = (breakId, startTime, endTime) => {\r\n    let temp = this.state.temp\r\n    let showEndTimeErrors = this.state.showEndTimeErrors\r\n\r\n    let success\r\n\r\n    // endTime needs to be after startTime, if it isn't show an error\r\n    // (show the error after a timeout to prevent flashing errors as the user types)\r\n    if(!TimeCalc.isBiggerThan(endTime, startTime, false, true)){\r\n      success = false\r\n\r\n      temp.showEndTimeErrors[breakId] = setTimeout(() => {\r\n        this.setState({\r\n          showEndTimeErrors: {\r\n            ...this.state.showEndTimeErrors,\r\n            [breakId]: true\r\n          }\r\n        })\r\n      }, 500)\r\n    }\r\n    else{\r\n      success = true\r\n\r\n      showEndTimeErrors[breakId] = false\r\n      clearTimeout(temp.showEndTimeErrors[breakId])\r\n    }\r\n\r\n    this.setState({temp, showEndTimeErrors})\r\n    return success\r\n  }\r\n\r\n  // when the user edits the startTime/endTime\r\n  handleTimeInputChange(breakId, propertyId, inputId, val){\r\n    if(validationRegex.test(val)) return\r\n\r\n    if(breakId === \"new\"){ // see above\r\n      let newBreak = this.state.newBreak\r\n      let breakDurations = this.state.breakDurations\r\n\r\n      // inputId can either be a single field (eg. minutes) or the whole time object\r\n      if(inputId === \"object\") newBreak[propertyId] = val\r\n      else newBreak[propertyId][inputId] = val\r\n\r\n      if(val !== \"\"){\r\n        // if the user edits the startTime, adjust endTime accordingly\r\n        if(propertyId === \"startTime\"){\r\n          newBreak.endTime = TimeCalc.add(newBreak.startTime, breakDurations.new)\r\n        }\r\n\r\n        if(propertyId === \"endTime\"){\r\n          this.validateEndTime(breakId, newBreak.startTime, newBreak.endTime)\r\n\r\n          // changing the endTime also changes the duration, the state needs to reflect that\r\n          breakDurations.new = TimeCalc.subtractToMinutes(newBreak.endTime, newBreak.startTime, true)\r\n        }\r\n      }\r\n\r\n      this.setState({newBreak, breakDurations})\r\n    }\r\n\r\n    else{\r\n      let breaks = this.state.breaks\r\n      let breakDurations = this.state.breakDurations\r\n      let index = breaks.findIndex(el => el.id === breakId)\r\n\r\n      // accept both a single input (eg. minutes) or an entirely new time object\r\n      if(inputId === \"object\") breaks[index][propertyId] = val\r\n      else breaks[index][propertyId][inputId] = val\r\n\r\n      let success = true\r\n\r\n      if(val === \"\") success = false // an empty string is not a valid time value for an existing break\r\n      else {\r\n        // if the user changes the startTime, adjust the endTime too\r\n        if(propertyId === \"startTime\"){\r\n          breaks[index].endTime = TimeCalc.add(breaks[index].startTime, breakDurations[breakId])\r\n        }\r\n\r\n        if(propertyId === \"endTime\"){\r\n          success = this.validateEndTime(breakId, breaks[index].startTime, breaks[index].endTime)\r\n\r\n          // breakDurations need to be updated if the endTime is changed\r\n          breakDurations[index] = TimeCalc.subtractToMinutes(breaks[index].endTime, breaks[index].startTime, true)\r\n          this.setState({breakDurations})\r\n        }\r\n      }\r\n\r\n      // check if there were any errors\r\n      let errors = this.state.errors\r\n      errors[breakId] = !success\r\n      let canClose = Object.values(errors).every(x => !x)\r\n\r\n      this.setState({breaks, errors})\r\n      this.props.onSave(breaks, canClose, {breaks: breakId})\r\n    }\r\n  }\r\n\r\n  // add a new break\r\n  addBreak = () => {\r\n    // if there is an error coming from input validation, the user has to fix it first\r\n    if(this.state.showEndTimeErrors.new) return\r\n\r\n    let breaks = this.state.breaks\r\n    let newBreak = this.state.newBreak\r\n\r\n    // make a new unique ID\r\n    let newId = makeNewId(breaks, \"breaks\")\r\n    newBreak.id = newId\r\n\r\n    breaks.push(newBreak)\r\n\r\n    this.setState({breaks})\r\n    this.props.onSave(breaks, {breaks: newId})\r\n\r\n    // adjust breakDurations to reflect the changes\r\n    let breakDurations = this.state.breakDurations\r\n    breakDurations.new = 30\r\n    breakDurations[newId] = TimeCalc.subtractToMinutes(newBreak.endTime, newBreak.startTime, true)\r\n\r\n    // store new init values for the newBreak input fields\r\n    this.setState({\r\n      newBreak: {\r\n        startTime: TimeCalc.add(newBreak.endTime, 90),\r\n        endTime: TimeCalc.add(newBreak.endTime, 120),\r\n        name: \"\"\r\n      },\r\n      breakDurations\r\n    })\r\n  }\r\n\r\n  deleteBreak(id){\r\n    let breaks = this.state.breaks\r\n    let index = breaks.findIndex(el => el.id === id)\r\n    breaks.splice(index, 1)\r\n\r\n    // when the break is deleted, there's no reason to store any errors that might've been associated with it\r\n    let errors = this.state.errors\r\n    delete errors[id]\r\n    let canClose = Object.values(errors).every(x => !x)\r\n\r\n    this.setState({breaks, errors})\r\n    this.props.onSave(breaks, canClose, {breaks: id})\r\n  }\r\n\r\n  handleSave = () => {\r\n    this.props.onClose()\r\n  }\r\n\r\n  handleEnterPress = e => {\r\n    if(e.key === \"Enter\") this.addBreak()\r\n  }\r\n\r\n  handleEnterPressNew = e => { // \"new\" -> when adding a new break\r\n    if(e.key === \"Enter\") this.addBreak()\r\n  }\r\n\r\n  render = () => (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" className=\"drawerTitle\">\r\n        Breaks:\r\n      </Typography>\r\n      <Table className=\"BreaksDrawer\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Name (optional)</TableCell>\r\n            <TableCell>Start</TableCell>\r\n            <TableCell>End</TableCell>\r\n            <TableCell/>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {this.state.breaks.length ? (\r\n            this.state.breaks.map((breakInfo, i) => (\r\n              <TableRow key={breakInfo.id}>\r\n                <TableCell>\r\n                  <Input\r\n                    value={breakInfo.name}\r\n                    onChange={this.handleInputChange.bind(this, breakInfo.id, \"name\")}\r\n                    onKeyPress={this.handleEnterPress}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TimeSetter\r\n                    value={breakInfo.startTime}\r\n                    onChange={this.handleTimeInputChange.bind(this, breakInfo.id, \"startTime\")}\r\n                    onEnterPress={this.handleSave}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TimeSetter\r\n                    value={breakInfo.endTime}\r\n                    onChange={this.handleTimeInputChange.bind(this, breakInfo.id, \"endTime\")}\r\n                    onEnterPress={this.handleSave}\r\n                    showError={this.state.showEndTimeErrors[breakInfo.id]}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IconButton onClick={this.deleteBreak.bind(this, breakInfo.id)}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))\r\n          ) : (\r\n            <TableRow>\r\n              <TableCell colSpan={4}>You haven't set any breaks</TableCell>\r\n            </TableRow>\r\n          )}\r\n          <TableRow>\r\n            <TableCell>\r\n              <Input\r\n                value={this.state.newBreak.name}\r\n                onChange={this.handleInputChange.bind(this, \"new\", \"name\")}\r\n                onKeyPress={this.handleEnterPressNew}\r\n              />\r\n            </TableCell>\r\n            <TableCell>\r\n              <TimeSetter\r\n                value={this.state.newBreak.startTime}\r\n                onChange={this.handleTimeInputChange.bind(this, \"new\", \"startTime\")}\r\n                onEnterPress={this.addBreak}\r\n              />\r\n            </TableCell>\r\n            <TableCell>\r\n              <TimeSetter\r\n                value={this.state.newBreak.endTime}\r\n                onChange={this.handleTimeInputChange.bind(this, \"new\", \"endTime\")}\r\n                onEnterPress={this.addBreak}\r\n                showError={this.state.showEndTimeErrors.new}\r\n              />\r\n            </TableCell>\r\n            <TableCell>\r\n              <IconButton color=\"primary\" onClick={this.addBreak}>\r\n                <AddIcon />\r\n              </IconButton>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n      <Grid container justify=\"center\">\r\n        <Button\r\n          onClick={this.handleSave.bind(this)}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{margin: \".5rem\"}}>\r\n          Save\r\n        </Button>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nexport default class GoogleSignIn extends Component {\r\n  responseGoogle = res => {\r\n    if(res.error){\r\n      console.log(res);\r\n      return\r\n    }\r\n\r\n    // execute as a makrotask to make sure the tab is active when the confirm method fires\r\n    setTimeout(() => {\r\n      if(window.confirm(\"Data syncing is still under beta testing. If you encouter any problems, please send us a bug report. It will only take a minute or two and it helps us a lot with improving the app.\")){\r\n        this.props.connect(res.tokenId)\r\n      }\r\n    }, 50)\r\n  }\r\n\r\n  render = () => (\r\n    <GoogleLogin\r\n      clientId=\"1070394852834-4nunul2jqv2pqn9du9ralgd61220d3c1.apps.googleusercontent.com\"\r\n      buttonText=\"Sign In\"\r\n      onSuccess={this.responseGoogle}\r\n      onFailure={this.responseGoogle}\r\n      render={this.props.render}\r\n    />\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport GoogleSignIn from './signIn/GoogleSignIn';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport './css/SignInPanel.css'\r\n\r\n// this panel suggests that the user should sign in\r\n// if the user already dismissed the panel once, we want to give them an option...\r\n// to dismiss it permanently. So the first time the user clicks the close icon,...\r\n// dismiss the panel and after that, ask them if they want to dismiss it for now or permanently (using a Menu)\r\nexport default class SignInPanel extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {anchorEl: null}\r\n  }\r\n\r\n  handleDismiss = e => {\r\n    // if this is the first time the user is dismissing the panel, only dismiss it\r\n    if(!this.props.showDontRemindMeAgain) this.props.dismiss()\r\n    // if the user has dismissed it before, let them chose if they want to do it permanently this time\r\n    else this.setState({anchorEl: e.currentTarget})\r\n  }\r\n\r\n  closeDismissMenu = () => {\r\n    this.setState({anchorEl: null})\r\n  }\r\n\r\n  render(){\r\n    let anchorEl = this.state.anchorEl\r\n\r\n    return (\r\n      <div className=\"signInPanel\">\r\n        <Grid\r\n          className=\"signInPanelContainer\"\r\n          container\r\n          alignItems='center'\r\n          justify=\"space-evenly\"\r\n        >\r\n          <Grid>\r\n            Sign in to sync your data between all your devices:\r\n          </Grid>\r\n          <Grid>\r\n            <GoogleSignIn connect={this.props.connect}/>\r\n          </Grid>\r\n        </Grid>\r\n        <IconButton\r\n          className=\"dismissButton\"\r\n          onClick={this.handleDismiss}\r\n          aria-owns={anchorEl ? 'signInPanelDismissMenu' : undefined}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n        {this.props.showDontRemindMeAgain && ( //saves performance\r\n          <Menu\r\n            id=\"signInPanelDismissMenu\"\r\n            anchorEl={anchorEl}\r\n            open={Boolean(anchorEl)}\r\n            onClose={this.closeDismissMenu}\r\n          >\r\n            <MenuItem onClick={() => {this.closeDismissMenu(); this.props.dismiss()}}>\r\n              Remind me later\r\n            </MenuItem>\r\n            <MenuItem onClick={() => {this.closeDismissMenu(); this.props.dontRemindMeAgain()}}>\r\n              Don't remind me again\r\n            </MenuItem>\r\n          </Menu>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","export const defaultSettings = {\r\n  timeFormat24H: false,\r\n  bufferTimePercentage: .2,\r\n  showResetButtonAfter: 16, // in hours\r\n  defaultColors: [\r\n    \"#4BFFD1\",\r\n    \"#39FF00\",\r\n    \"#E8A60C\",\r\n    \"#FF4848\",\r\n    \"#290CE8\",\r\n  ],\r\n  updateTimesAfterDrag: true,\r\n  updateTimesAfterEdit: true,\r\n  updateTimesAfterDelete: true,\r\n  roundTo: 5,\r\n  changeModeOnTab: false,\r\n  detectBreaksAutomatically: true,\r\n  adjustDurationOnPause: true,\r\n  offerToAdjustDurationOnDone: true,\r\n  darkTheme: false\r\n}\r\n\r\n\r\nexport const defaultDataValues = {\r\n  projects: [],\r\n  breaks: [],\r\n  defaultProjects: [],\r\n  settings: defaultSettings,\r\n  startTime: {h: 2, m: \"00\", pm: true},\r\n  endTime: {h: 9, m: \"00\", pm: true},\r\n  mode: \"planning\",\r\n  defaultColorIndex: 0,\r\n  defaultColorIndexDefaultProjects: 0,\r\n  productivityPercentages: {},\r\n  useDefaultProjects: true,\r\n  lastReset: undefined,\r\n  lastModified: {},\r\n  realEndTime: undefined\r\n}\r\n","import React, { Component } from 'react';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport { defaultDataValues } from './util/defaultValues'\r\n\r\n// a part of DevOptions, lets the user easily reset local data (especially on mobile devices)\r\nexport default class DevOptionsResetDialog extends Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n    // the state here is an object with keys representing the data items and boolean values\r\n    let state = {}\r\n    for(let el of this.props.dataItems) state[el] = true\r\n    this.state = state\r\n  }\r\n\r\n  handleChange = id => e => this.setState({[id]: e.target.checked})\r\n\r\n  // when the user confirms the reset\r\n  reset = () => {\r\n    let updateData = {}\r\n    for(let el of Object.keys(this.state)) if(this.state[el]){\r\n      updateData[el] = defaultDataValues[el]\r\n    }\r\n    this.props.update(updateData)\r\n    window.location.reload() // reload so that everything can be re-processed properly\r\n  }\r\n\r\n  render = () => (\r\n    <React.Fragment>\r\n      <DialogTitle children=\"Reset local data\" />\r\n      <DialogContent>\r\n        <FormGroup>\r\n          {this.props.dataItems.map(el => (\r\n            <FormControlLabel\r\n              key={el}\r\n              control={\r\n                <Checkbox\r\n                  checked={this.state[el]}\r\n                  onChange={this.handleChange(el)}\r\n                />\r\n              }\r\n              label={el}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={this.reset} children=\"Reset\" color=\"primary\" />\r\n      </DialogActions>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport DevOptionsResetDialog from './DevOptionsResetDialog';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DeveloperModeIcon from '@material-ui/icons/DeveloperMode';\r\n\r\n// used mainly for exporting/importing local data\r\n// is made available by going to Settings and clicking the icon next to the \"General\" section label several times in a row\r\nexport default class DevOptions extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      anchorEl: null, // the bulk of the element is a Menu, thus the need for an anchor\r\n      resetDialogOpen: false\r\n    }\r\n  }\r\n\r\n  open = e => this.setState({anchorEl: e.currentTarget})\r\n\r\n  close = () => {\r\n    this.setState({anchorEl: null})\r\n    if(this.props.close) this.props.close()\r\n  }\r\n\r\n  // exports an object with a date and the data\r\n  export = () => {\r\n    let date = new Date()\r\n\r\n    // create a file with the data\r\n    let file = new Blob([\r\n      JSON.stringify({data: this.props.data, date: date.toLocaleString()})\r\n    ], {type: \"application/json\"})\r\n\r\n    let filename = \"Mind-Your-Time-data-\" + date.toISOString()\r\n    filename = filename.replace(\".\", \"-\")\r\n\r\n    // IE\r\n    if(window.navigator.msSaveOrOpenBlob) window.navigator.msSaveOrOpenBlob(file, filename)\r\n\r\n    else{\r\n      // trigger a download\r\n      let a = document.createElement(\"a\")\r\n      let url = URL.createObjectURL(file)\r\n      a.href = url\r\n      a.download = filename\r\n      document.body.appendChild(a)\r\n      a.click()\r\n      setTimeout(() => {\r\n        document.body.removeChild(a)\r\n        window.URL.revokeObjectURL(url)\r\n      })\r\n    }\r\n  }\r\n\r\n  import = () => {\r\n    // create the element to trigger the upload\r\n    let input = document.createElement(\"input\")\r\n    input.type = \"file\"\r\n    input.style = \"display: none;\"\r\n    input.accept = \".json\"\r\n\r\n    // when the user uploads a file, load it using FileReader\r\n    input.addEventListener(\"change\", e => {\r\n      let file = e.path[0].files[0]\r\n      let fileReader = new FileReader()\r\n      fileReader.onloadend = () => {\r\n        // ask the user to confirm that they want to load the data first\r\n        let {data, date} = JSON.parse(fileReader.result)\r\n        if(window.confirm(\"Are you sure you want to load data from \" + date + \"? This will permanently delete all your current local data.\")){\r\n          this.props.update(data)\r\n        }\r\n      }\r\n      fileReader.readAsText(file)\r\n    })\r\n\r\n    // trigger the upload\r\n    document.body.appendChild(input)\r\n    input.click()\r\n    setTimeout(() => {\r\n      document.body.removeChild(input)\r\n    })\r\n  }\r\n\r\n  render = () => (\r\n    <React.Fragment>\r\n      {this.props.showAsListItem ? (\r\n        <ListItem button onClick={this.open}>\r\n          <ListItemIcon children={<DeveloperModeIcon />} />\r\n          <ListItemText children=\"Stuff for nerds\" />\r\n        </ListItem>\r\n      ) : (\r\n        <MenuItem onClick={this.open}>\r\n          <DeveloperModeIcon />\r\n          Stuff for nerds\r\n        </MenuItem>\r\n      )}\r\n      <Menu\r\n        anchorEl={this.state.anchorEl}\r\n        open={Boolean(this.state.anchorEl)}\r\n        onClose={this.close}\r\n      >\r\n        <MenuItem onClick={this.export}>\r\n          Export\r\n        </MenuItem>\r\n        <MenuItem onClick={this.import}>\r\n          Import\r\n        </MenuItem>\r\n        <MenuItem onClick={() => this.setState({resetDialogOpen: true})}>\r\n          Reset\r\n        </MenuItem>\r\n        <Dialog\r\n          open={this.state.resetDialogOpen}\r\n          onClose={() => this.setState({resetDialogOpen: false})}\r\n        >\r\n          <DevOptionsResetDialog\r\n            dataItems={Object.keys(this.props.data).sort()}\r\n            update={this.props.update}\r\n          />\r\n        </Dialog>\r\n      </Menu>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nconst GoogleIcon = props => (\r\n  <svg width=\"23px\" height=\"23px\" viewBox=\"11.5 11.5 23 23\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <title>btn_google_light_normal_ios</title>\r\n      <desc>Created with Sketch.</desc>\r\n      <defs>\r\n          <filter x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\" filterUnits=\"objectBoundingBox\" id=\"filter-1\">\r\n              <feOffset dx=\"0\" dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\"></feOffset>\r\n              <feGaussianBlur stdDeviation=\"0.5\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\"></feGaussianBlur>\r\n              <feColorMatrix values=\"0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.168 0\" in=\"shadowBlurOuter1\" type=\"matrix\" result=\"shadowMatrixOuter1\"></feColorMatrix>\r\n              <feOffset dx=\"0\" dy=\"0\" in=\"SourceAlpha\" result=\"shadowOffsetOuter2\"></feOffset>\r\n              <feGaussianBlur stdDeviation=\"0.5\" in=\"shadowOffsetOuter2\" result=\"shadowBlurOuter2\"></feGaussianBlur>\r\n              <feColorMatrix values=\"0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.084 0\" in=\"shadowBlurOuter2\" type=\"matrix\" result=\"shadowMatrixOuter2\"></feColorMatrix>\r\n              <feMerge>\r\n                  <feMergeNode in=\"shadowMatrixOuter1\"></feMergeNode>\r\n                  <feMergeNode in=\"shadowMatrixOuter2\"></feMergeNode>\r\n                  <feMergeNode in=\"SourceGraphic\"></feMergeNode>\r\n              </feMerge>\r\n          </filter>\r\n          <rect id=\"path-2\" x=\"0\" y=\"0\" width=\"40\" height=\"40\" rx=\"2\"></rect>\r\n      </defs>\r\n      <g id=\"Google-Button\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n          <g id=\"9-PATCH\" transform=\"translate(-608.000000, -160.000000)\"></g>\r\n          <g id=\"btn_google_light_normal\" transform=\"translate(-1.000000, -1.000000)\">\r\n              <g id=\"button\" transform=\"translate(4.000000, 4.000000)\" filter=\"url(#filter-1)\">\r\n                  <g id=\"button-bg\">\r\n                      <use fill=\"#FFFFFF\" fillRule=\"evenodd\"></use>\r\n                      <use fill=\"none\"></use>\r\n                      <use fill=\"none\"></use>\r\n                      <use fill=\"none\"></use>\r\n                  </g>\r\n              </g>\r\n              <g id=\"logo_googleg_48dp\" transform=\"translate(15.000000, 15.000000)\">\r\n                  <path d=\"M17.64,9.20454545 C17.64,8.56636364 17.5827273,7.95272727 17.4763636,7.36363636 L9,7.36363636 L9,10.845 L13.8436364,10.845 C13.635,11.97 13.0009091,12.9231818 12.0477273,13.5613636 L12.0477273,15.8195455 L14.9563636,15.8195455 C16.6581818,14.2527273 17.64,11.9454545 17.64,9.20454545 L17.64,9.20454545 Z\" id=\"Shape\" fill=\"#4285F4\"></path>\r\n                  <path d=\"M9,18 C11.43,18 13.4672727,17.1940909 14.9563636,15.8195455 L12.0477273,13.5613636 C11.2418182,14.1013636 10.2109091,14.4204545 9,14.4204545 C6.65590909,14.4204545 4.67181818,12.8372727 3.96409091,10.71 L0.957272727,10.71 L0.957272727,13.0418182 C2.43818182,15.9831818 5.48181818,18 9,18 L9,18 Z\" id=\"Shape\" fill=\"#34A853\"></path>\r\n                  <path d=\"M3.96409091,10.71 C3.78409091,10.17 3.68181818,9.59318182 3.68181818,9 C3.68181818,8.40681818 3.78409091,7.83 3.96409091,7.29 L3.96409091,4.95818182 L0.957272727,4.95818182 C0.347727273,6.17318182 0,7.54772727 0,9 C0,10.4522727 0.347727273,11.8268182 0.957272727,13.0418182 L3.96409091,10.71 L3.96409091,10.71 Z\" id=\"Shape\" fill=\"#FBBC05\"></path>\r\n                  <path d=\"M9,3.57954545 C10.3213636,3.57954545 11.5077273,4.03363636 12.4404545,4.92545455 L15.0218182,2.34409091 C13.4631818,0.891818182 11.4259091,0 9,0 C5.48181818,0 2.43818182,2.01681818 0.957272727,4.95818182 L3.96409091,7.29 C4.67181818,5.16272727 6.65590909,3.57954545 9,3.57954545 L9,3.57954545 Z\" id=\"Shape\" fill=\"#EA4335\"></path>\r\n                  <path d=\"M0,0 L18,0 L18,18 L0,18 L0,0 Z\" id=\"Shape\"></path>\r\n              </g>\r\n              <g id=\"handles_square\"></g>\r\n          </g>\r\n      </g>\r\n  </svg>\r\n)\r\n\r\nexport default GoogleIcon\r\n","import React, { Component } from 'react';\r\nimport GoogleSignIn from './signIn/GoogleSignIn';\r\nimport DevOptions from './DevOptions'\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport GoogleIcon from './signIn/GoogleIcon'\r\nimport './css/DropdownMenu.css'\r\n\r\nexport default class DropdownMenu extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {anchorEl: null}\r\n  }\r\n\r\n  close = () => {\r\n    this.setState({anchorEl: null});\r\n  }\r\n\r\n  about = () => {\r\n    this.close()\r\n    this.props.history.push(\"/about\")\r\n  }\r\n\r\n  signIn = tokenId => {\r\n    this.close()\r\n    this.props.connect(tokenId)\r\n  }\r\n\r\n  signOut = () => {\r\n    this.close()\r\n    this.props.disconnect();\r\n  }\r\n\r\n  render(){\r\n    let anchorEl = this.state.anchorEl\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          id=\"dropdownMenuButton\"\r\n          aria-owns={anchorEl ? 'dropdownMenu' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={e => {this.setState({anchorEl: e.currentTarget})}}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"dropdownMenu\"\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={this.close}\r\n        >\r\n          <MenuItem onClick={this.about}>\r\n            <HelpIcon />\r\n            About\r\n          </MenuItem>\r\n          {\r\n            this.props.loggedIn ? (\r\n              <MenuItem onClick={this.signOut}>\r\n                <CloseIcon />\r\n                Sign Out\r\n              </MenuItem>\r\n            ) : (\r\n              <GoogleSignIn connect={this.signIn} render={renderProps => (\r\n                <MenuItem onClick={renderProps.onClick}>\r\n                  <GoogleIcon />\r\n                  Sign In\r\n                </MenuItem>\r\n              )} />\r\n            )\r\n          }\r\n          {\r\n            localStorage.devUnlocked && (\r\n              <DevOptions\r\n                data={this.props.data}\r\n                update={this.props.update}\r\n                close={this.close}\r\n              />\r\n            )\r\n          }\r\n        </Menu>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Confetti from 'react-dom-confetti';\r\nimport './css/ConfettiWrapper.css'\r\n\r\n// necessary to prevent the confetti from overflowing which would display scrollbars\r\n// (used to congratulate the user on finishing all their work)\r\nexport default class ConfettiWrapper extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {}\r\n    // for some reason the Confetti module can only be fired by an update\r\n    setTimeout(() => this.setState({fireConfetti: true}))\r\n  }\r\n\r\n  render = () => (\r\n    <div className=\"ConfettiWrapper\">\r\n      <div>\r\n        <Confetti active={this.state.fireConfetti}\r\n          config={{\r\n            spread: 80,\r\n            startVelocity: 90,\r\n            elementCount: 185,\r\n            dragFriction: .07,\r\n            duration: 10000\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nexport default class ProductivityLineChart extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      scale: \"1w\" // show the last week by default\r\n    }\r\n  }\r\n\r\n  render(){\r\n    // line out the data structure\r\n    var lineChartData = {\r\n      datasets: [{\r\n        data: [],\r\n        borderColor: \"rgba(00, 208, 83, .5)\",\r\n        label: \"Productivity percentage\",\r\n        fill: false,\r\n        pointBackgroundColor: \"rgba(00, 208, 83, .5)\"\r\n      }],\r\n      labels: []\r\n    }\r\n\r\n    // apply the scale\r\n    var scaleInMs\r\n    // this is the Date that serves as a line between data that is displayed and data that isn't\r\n    var scaleBreakpoint = 0\r\n    switch (this.state.scale) {\r\n      case \"1w\":\r\n        scaleInMs = 7*24*60*60*1000\r\n        break;\r\n      case \"1m\":\r\n        scaleInMs = 30*24*60*60*1000\r\n        break;\r\n      case \"3m\":\r\n        scaleInMs = 3*30*24*60*60*1000\r\n        break;\r\n      case \"6m\":\r\n        scaleInMs = 6*30*24*60*60*1000\r\n        break;\r\n      case \"1y\":\r\n        scaleInMs = 365*24*60*60*1000\r\n        break;\r\n      default:\r\n    }\r\n    if(scaleInMs) scaleBreakpoint = new Date(new Date().getTime() - scaleInMs)\r\n    let prodPercArr = []\r\n    for(let {date, perc} of this.props.prodPercArr){\r\n      date = new Date(date)\r\n      if(date >= scaleBreakpoint) prodPercArr.push({date, perc})\r\n    }\r\n\r\n    // check if there are any days without associated values\r\n    // (if the user doesn't use the app for a few days, we want it to be visible in the chart)\r\n    let prevDate, oneDayInMs = 24*60*60*1000\r\n    prodPercArr.forEach(({date, perc}, i) => {\r\n      date = new Date(date)\r\n      // check if there are any days between the one being processed and the one before it\r\n      if(prevDate && (date.getTime() > prevDate.getTime() + oneDayInMs)){\r\n        // add all the missing dates between prevDate and date, fill the values with null\r\n        let lastDateInDataset = prevDate\r\n        while(date.getTime() > lastDateInDataset.getTime() + oneDayInMs){\r\n          let dateToAdd = new Date(lastDateInDataset.getTime() + oneDayInMs)\r\n\r\n          prodPercArr.splice(i, 0, {date: dateToAdd.toLocaleDateString(), perc: null})\r\n\r\n          lastDateInDataset = dateToAdd\r\n        }\r\n      }\r\n\r\n      prevDate = date\r\n    })\r\n\r\n    // figure out how many values to show\r\n    // (if the user wants to see data of the whole year, we don't want to have to show 365 datapoints)\r\n    let datapointsToShow = Math.round(window.innerWidth / 50)\r\n    // eg. if ratioToShow === 5, show one value per 5 datapoints\r\n    let ratioToShow = Math.round(prodPercArr.length / datapointsToShow)\r\n    if(!ratioToShow) ratioToShow = 1 // handle prodPercArr.length < datapointsToShow\r\n    let counter = 0, sumCounter = 0\r\n\r\n    // if ratioToShow is 5, we want to set up a counter that will let us only show every 5th datapoint\r\n    // we also want to show the average of those 5 datapoints instead of showing the 5th one alone\r\n    for(let {date, perc} of prodPercArr){\r\n      counter++\r\n      sumCounter += perc\r\n      if(counter < ratioToShow) continue\r\n      let average = sumCounter / ratioToShow\r\n      counter = sumCounter = 0\r\n\r\n      // since we're showing the average value, we want to show the average Date as well\r\n      let avgDate = ratioToShow === 1 ? new Date(date) : new Date(date.getTime() - (ratioToShow * oneDayInMs/2))\r\n\r\n      lineChartData.datasets[0].data.push(average)\r\n      lineChartData.labels.push(avgDate.toLocaleDateString())\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <InputLabel htmlFor=\"lineChartScaleSelect\" children=\"Scale: \" />\r\n        <Select\r\n          value={this.state.scale}\r\n          onChange={e => this.setState({scale: e.target.value})}\r\n          inputProps={{id: 'lineChartScaleSelect'}}\r\n        >\r\n          <MenuItem value=\"1w\">Last Week</MenuItem>\r\n          <MenuItem value=\"1m\">Last Month</MenuItem>\r\n          <MenuItem value=\"3m\">Last 3 Months</MenuItem>\r\n          <MenuItem value=\"6m\">Last 6 Months</MenuItem>\r\n          <MenuItem value=\"1y\">Last Year</MenuItem>\r\n          <MenuItem value=\"a\">All</MenuItem>\r\n        </Select>\r\n        <Line\r\n          data={lineChartData}\r\n          height={100}\r\n          width={300}\r\n          options={{\r\n            maintainAspectRatio: false,\r\n            legend: {position: \"bottom\"},\r\n            spanGaps: true,\r\n            animation: false\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ConfettiWrapper from './ConfettiWrapper'\r\nimport ProductivityLineChart from './ProductivityLineChart'\r\nimport \"./css/Congrats.css\"\r\n\r\nconst Congrats = props => {\r\n  // sort productivityPercentages by their dates\r\n  let prodPercArr = []\r\n  Object.entries(props.productivityPercentages).forEach(val => prodPercArr.push({date: val[0], perc: val[1]}))\r\n  prodPercArr.sort((a, b) => a.date > b.date ? 1 : -1)\r\n\r\n  // the current one\r\n  let productivityPercentage = prodPercArr[prodPercArr.length - 1].perc\r\n\r\n  // should we show the LineChart displaying productivity percentages or not?\r\n  // is there currently enough data for it to make sense?\r\n  let showLineChart = (\r\n    prodPercArr.length > 3 &&\r\n    productivityPercentage >= 0 &&\r\n    productivityPercentage <= 100\r\n  )\r\n\r\n  let showConfetti = props.dateString === prodPercArr[prodPercArr.length - 1].date\r\n\r\n  return (\r\n    <div className=\"Congrats\">\r\n      <span className=\"congratsSpan\">\r\n        CONGRATULATIONS!\r\n      </span>\r\n      <br/>\r\n      You got {props.totalTimeWorkedString} worth of work done\r\n      <br/>\r\n      {\r\n        productivityPercentage >= 0 && productivityPercentage <= 100 &&(\r\n          <span>\r\n            You were productive {productivityPercentage}% of the time\r\n          </span>\r\n        )\r\n      }\r\n      {showLineChart && <ProductivityLineChart prodPercArr={prodPercArr} /> }\r\n      {showConfetti && <ConfettiWrapper /> }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Congrats\r\n","// converts the GET parameters from the URL into an object\r\nexport default function getGetParams(locationSearch){\r\n  let getParamsString = locationSearch.substr(1).split(\"&\")\r\n  let getParams = {}\r\n  for(let param of getParamsString){\r\n    let paramArr = param.split(\"=\")\r\n    getParams[paramArr[0]] = paramArr[1]\r\n  }\r\n\r\n  return getParams\r\n}\r\n","import React, { Component } from 'react';\r\nimport AddProjectView from \"./MobileViews/AddProjectView\"\r\nimport EditProjectView from \"./MobileViews/EditProjectView\"\r\nimport BreaksView from \"./MobileViews/BreaksView\"\r\nimport DefaultProjectsView from \"./MobileViews/DefaultProjectsView\"\r\nimport ModeSwitch from './ModeSwitch'\r\nimport ProjectsTable from './ProjectsTable'\r\nimport TimeSetter from './TimeSetter'\r\nimport TimeStats from './TimeStats'\r\nimport BreaksDrawer from './BreaksDrawer'\r\nimport DefaultProjectsDrawer from './DefaultProjectsDrawer'\r\nimport SignInPanel from './SignInPanel'\r\nimport DropdownMenu from './DropdownMenu'\r\nimport AddFab from './AddFab'\r\nimport Congrats from './Congrats'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Link } from \"react-router-dom\";\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport StartIcon from '@material-ui/icons/PlayArrow';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport TimeCalc, { setTimesForProjects } from './util/TimeCalc'\r\nimport makeNewId from './util/makeNewId'\r\nimport getGetParams from './util/getGetParams'\r\nimport { SettingsContext, IsMobileContext } from './_Context'\r\nimport './css/App.css'\r\n\r\nexport default class App extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      showErrors: {},\r\n      showResetButton: false,\r\n      temp: {\r\n        dontShowSignInYet: true,\r\n        snackbar: { // used to display certain messages to the user\r\n          open: false,\r\n          message: \"\",\r\n          action: () => {},\r\n          buttonLabel: \"\"\r\n        }\r\n      }\r\n    }\r\n\r\n    // show the sign in panel after a little while\r\n    this.showSignInPanelAfterLoadTimeout = setTimeout(() => {\r\n      this.setState({temp: {...this.state.temp, dontShowSignInYet: false}})\r\n    }, 5000)\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    // since data is loaded in DataSync not App, it will only be available to App after an update\r\n    // once it's available, determine if the reset button should be shown\r\n    if(!Object.keys(prevProps.data.settings).length && Object.keys(this.props.data.settings).length){\r\n      this.setShowResetButton()\r\n    }\r\n\r\n    // if there's been a change in projects...\r\n    if(prevProps.data.projects !== this.props.data.projects){\r\n      let allProjectsDone = false\r\n      let productivityPercentage, totalTimeWorkedString\r\n\r\n      // get today's productivityPercentage\r\n      let dateString = this.getDateString()\r\n      let todaysProdPerc = this.props.data.productivityPercentages[dateString]\r\n\r\n      // check if all projects are done\r\n      if(this.props.data.projects.length){\r\n        allProjectsDone = true\r\n        for(let i = 0; i < this.props.data.projects.length; i++){\r\n          if(this.props.data.projects[i].state !== \"done\"){\r\n            allProjectsDone = false\r\n            break\r\n          }\r\n        }\r\n\r\n        // if all projects are done, calculate the relevant stats\r\n        if(allProjectsDone){\r\n          let totalTimeWorked = 0\r\n\r\n          for(let i = 0; i < this.props.data.projects.length; i++){\r\n            totalTimeWorked += parseInt(this.props.data.projects[i].estimatedDuration)\r\n          }\r\n\r\n          // the string is eg. 45 -> \"45 miuntes\", 75 -> \"1:15\" etc.\r\n          if(totalTimeWorked >= 60){\r\n            totalTimeWorkedString = TimeCalc.makeString(TimeCalc.toTimeObject(totalTimeWorked, false), false)\r\n          }\r\n          else totalTimeWorkedString = totalTimeWorked + \" minutes\"\r\n\r\n          // if the productivityPercentage was already stored, use it\r\n          if(todaysProdPerc) productivityPercentage = todaysProdPerc\r\n          // else calculate and store it\r\n          else{\r\n            let totalTimePassed = TimeCalc.subtractToMinutes(this.props.currentTime, this.props.data.startTime, true)\r\n            productivityPercentage = Math.round(100 * totalTimeWorked / totalTimePassed)\r\n          }\r\n        }\r\n      }\r\n      else allProjectsDone = false\r\n\r\n      // save the things that have changed\r\n      // always compare the calculated value to the one in the state to avoid an update loop\r\n      if(!this.props.data.realEndTime || dateString === this.props.data.realEndTime.split(\"T\")[0]){\r\n        if(allProjectsDone !== this.state.allProjectsDone){\r\n          this.setState({allProjectsDone})\r\n          if(typeof this.state.allProjectsDone !== \"undefined\"){\r\n            this.props.update({realEndTime: allProjectsDone ? new Date() : undefined})\r\n          }\r\n        }\r\n        if(totalTimeWorkedString !== this.state.totalTimeWorkedString) this.setState({totalTimeWorkedString})\r\n        if(\r\n          productivityPercentage !== todaysProdPerc &&\r\n          !(isNaN(productivityPercentage) && typeof productivityPercentage === \"number\")// handle NaN\r\n        ){\r\n          let productivityPercentages = Object.assign({}, this.props.data.productivityPercentages)\r\n          productivityPercentages[dateString] = productivityPercentage\r\n          this.props.update({productivityPercentages})\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    // prevents memory leaks\r\n    clearTimeout(this.showSignInAgainTimeout)\r\n    clearTimeout(this.showSignInPanelAfterLoadTimeout)\r\n  }\r\n\r\n  // internal method, used in componentDidMount and componentDidUpdate\r\n  // determines if the reset button should or shouldn't be shown\r\n  setShowResetButton = () => {\r\n    // the reset button is shown in one of 2 cases:\r\n    let condition1, condition2\r\n\r\n    // show the reset button if 5AM is between lastReset and currentTime\r\n    let lastResetInMs = new Date(localStorage.lastReset).getTime() // ms since 1970\r\n    lastResetInMs = lastResetInMs % (24*60*60*1000)\r\n    let lastResetInMinutes = lastResetInMs / 1000 / 60\r\n    condition1 = TimeCalc.isBiggerThan(lastResetInMinutes, this.props.currentTime, false, true)\r\n\r\n    // only check for condition2 if condition1 doesn't check out\r\n    if(!condition1){\r\n      // show the reset button if lastReset + showResetButtonAfter > currentTime\r\n      let lastReset = new Date(localStorage.lastReset)\r\n      let settings = this.props.data.settings.showResetButtonAfter ? this.props.data.settings : this.props.data.settings\r\n      let showResetButtonAfter = settings.showResetButtonAfter\r\n      lastReset.setTime(lastReset.getTime() + (showResetButtonAfter * 60 * 60 * 1000))\r\n      condition2 = lastReset < new Date()\r\n    }\r\n\r\n    // only one of the two needs to be true to show the reset button\r\n    let showResetButton = (condition1 || condition2) && this.props.data.projects.length\r\n    this.setState({showResetButton})\r\n  }\r\n\r\n  // internal method, used when auto detecting breaks\r\n  // converts the arguments into the correct format, creates an ID etc.\r\n  addBreak = (startTime, endTime) => {\r\n    let breaks = this.props.data.breaks.slice()\r\n\r\n    for(let i = 0; i < breaks.length; i++){\r\n      // check if the break overlaps with any preexisting breaks\r\n      if(\r\n        (\r\n          TimeCalc.isBiggerThan(endTime, breaks[i].startTime, false, true) &&\r\n          TimeCalc.isBiggerThan(breaks[i].startTime, startTime, true, true)\r\n        ) || (\r\n          TimeCalc.isBiggerThan(endTime, breaks[i].endTime, false, true) &&\r\n          TimeCalc.isBiggerThan(breaks[i].endTime, startTime, true, true)\r\n        )\r\n      ){\r\n\r\n        // if the overlapping break was also autodetected, merge the two\r\n        if(breaks[i].autodetected){\r\n\r\n          // if the other break's startTime is earlier than the new break's start time...\r\n          if(TimeCalc.isBiggerThan(startTime, breaks[i].startTime, false, true)){\r\n            // set the startTime to be equal to the previous startTime\r\n            startTime = breaks[i].startTime\r\n          }\r\n\r\n          // if the other break's endTime is later that the current one...\r\n          if(TimeCalc.isBiggerThan(breaks[i].endTime, endTime, true, true)){\r\n            endTime = breaks[i].endTime\r\n          }\r\n\r\n          // finally, remove the other break as it's no longer needed (it'll be merged into the new one)\r\n          breaks.splice(i, 1)\r\n        }\r\n\r\n        // if the break was manually inserted, move the startTime after the other break\r\n        else {\r\n          startTime = breaks[i].endTime\r\n        }\r\n      }\r\n    }\r\n\r\n    let newId = makeNewId(breaks, \"breaks\")\r\n\r\n    breaks.push({\r\n      id: newId,\r\n      name: \"Auto \" + (breaks.length + 1),\r\n      autodetected: true,\r\n      startTime, endTime\r\n    })\r\n\r\n    this.props.update({breaks}, {breaks: newId})\r\n    return breaks\r\n  }\r\n\r\n  // if the user changes the endTime (time when they want to stop working)\r\n  // can be either a single input change (eg. only minutes) or the entire time object\r\n  handleEndTimeChange = (id, val) => {\r\n    let endTime = Object.assign({}, this.props.data.endTime)\r\n    let newState = {\r\n      showErrors: this.state.showErrors,\r\n      temp: this.state.temp\r\n    }\r\n\r\n    if(id === \"object\") endTime = val\r\n    else endTime[id] = val\r\n\r\n    // show/hide errors\r\n    // (don't show them immediately, we don't want the user to get a seizure when typing)\r\n    if(endTime.h === \"\"\r\n      || endTime.m === \"\"\r\n      || TimeCalc.isBiggerThan(this.props.currentTime, endTime, true, true)\r\n    ){\r\n      newState.temp.endTimeErrorTimeout = setTimeout(() => {\r\n        this.props.changeRouterShowErrors(\"endTime\", true)\r\n      }, 250)\r\n    }\r\n    else{\r\n      clearTimeout(newState.temp.endTimeErrorTimeout)\r\n      this.props.changeRouterShowErrors(\"endTime\", false)\r\n    }\r\n\r\n    newState.endTime = endTime\r\n\r\n    this.setState(newState)\r\n    this.props.update({endTime})\r\n  }\r\n\r\n  addProject(arrayId, project, newDefaultColorIndex){\r\n    // hide the noProjects error, hide the temp var\r\n    this.props.changeRouterShowErrors(\"noProjects\", false)\r\n\r\n    // copy the state\r\n    let projects = this.props.data[arrayId].slice()\r\n    let settings = this.props.data.settings\r\n\r\n    // make a new unique ID\r\n    let newId = makeNewId(projects, \"projects\")\r\n\r\n    // convert (depending on the type - project/break/defaultProject)\r\n    let newProject = {\r\n      id: newId,\r\n      name: project.name,\r\n      color: project.color,\r\n      estimatedDuration: project.duration,\r\n      state:'notStarted'\r\n    }\r\n    if(arrayId === \"defaultProjects\"){\r\n      newProject.days = project.days\r\n    }\r\n    else{ // don't add the plannedTime property if we're editting the defaultProjects\r\n      newProject.plannedTime = {\r\n        start: project.startTime,\r\n        end: TimeCalc.add(project.startTime, project.duration)\r\n      }\r\n    }\r\n\r\n    // if the startTime is larger that the suggested time, add a new break\r\n    // (don't execute if there are no previous projects or if it's a defaultProject)\r\n    if(projects.length && arrayId !== \"defaultProjects\"){\r\n      let currentLastProject = projects[projects.length - 1]\r\n      if(\r\n        settings.detectBreaksAutomatically &&\r\n        TimeCalc.isBiggerThan(project.startTime,\r\n          TimeCalc.suggestStartTime(currentLastProject.plannedTime.end, currentLastProject.estimatedDuration, settings),\r\n          false, true\r\n        )\r\n      ){\r\n        this.addBreak(currentLastProject.plannedTime.end, project.startTime)\r\n      }\r\n    }\r\n\r\n    // create the newState object , handle undefined for newDefaultColorIndex\r\n    projects.push(newProject)\r\n    let newState = {[arrayId]: projects}\r\n    if(typeof newDefaultColorIndex !== \"undefined\"){\r\n      let defaultColorIndexKey = arrayId === \"projects\" ? \"defaultColorIndex\" : \"defaultColorIndexDefaultProjects\"\r\n      newState[defaultColorIndexKey] = newDefaultColorIndex\r\n    }\r\n\r\n    // if it's the first project being added, save the startTime as well\r\n    if(projects.length === 1 && arrayId !== \"defaultProjects\") newState.startTime = projects[0].plannedTime.start\r\n\r\n    // save to state\r\n    this.props.update(newState, {[arrayId]: newId})\r\n  }\r\n\r\n  deleteProject(arrayId, id){\r\n    let projects = this.props.data[arrayId].slice()\r\n    let settings = this.props.data.settings\r\n\r\n    let index = projects.findIndex(project => project.id === parseInt(id))\r\n\r\n    // if we are updating the timing and if the deleted project is the first one, adjust the next startTime\r\n    if(settings.updateTimesAfterDelete && index === 0 && projects[1] && arrayId !== \"defaultProjects\"){\r\n      projects[1].plannedTime.start = projects[0].plannedTime.start\r\n    }\r\n\r\n    projects.splice(index, 1)\r\n\r\n    // if the user wants us to update the timing of other projects, do so\r\n    if(settings.updateTimesAfterDelete && arrayId !== \"defaultProjects\"){\r\n      projects = setTimesForProjects(projects, settings, this.props.data.breaks, this.props.data.startTime)\r\n    }\r\n\r\n    let newState = {[arrayId]: projects}\r\n\r\n    // if the user just deleted the last remaining project, reset breaks as well\r\n    if(!projects.length && arrayId !== \"defaultProjects\") newState.breaks = []\r\n\r\n    this.props.update(newState, {[arrayId]: id})\r\n  }\r\n\r\n  // switch mode on Tab press\r\n  handleRootKeyDown = e => {\r\n    if(this.props.data.settings.changeModeOnTab && e.key === \"Tab\" && !this.state.temp.openBreaksDrawer){\r\n      e.preventDefault()\r\n\r\n      this.props.changeMode(this.props.data.mode === \"planning\" ? \"working\" : \"planning\")\r\n    }\r\n  }\r\n\r\n  // if the user changes the value of a project's ColorPicker\r\n  handleColorChange(arrayId, id, val){\r\n    let projects = this.props.data[arrayId].slice()\r\n\r\n    let index = projects.findIndex(project => project.id === parseInt(id))\r\n\r\n    // break the reference\r\n    let changedProject = Object.assign({}, projects[index])\r\n    projects.splice(index, 1)\r\n\r\n    changedProject.color = val\r\n\r\n    // insert back into the array\r\n    projects.splice(index, 0, changedProject)\r\n\r\n    this.props.update({[arrayId]: projects}, {projects: id})\r\n  }\r\n\r\n  handleDragEnd(arrayId, result){\r\n    this.setState({temp: {...this.state.temp, dragging: false}})\r\n\r\n    // handle the draggable being drop outside the droppable\r\n    if(!result.destination) return\r\n\r\n    let id = result.draggableId\r\n    let index = result.destination.index\r\n    let projects = []\r\n\r\n    // break the references (necessary for properly setting lastModified in DataSync)\r\n    this.props.data[arrayId].forEach(project => {\r\n      let copy = Object.assign({}, project)\r\n      if(arrayId !== \"defaultProjects\"){\r\n        copy.plannedTime = JSON.parse(JSON.stringify(project.plannedTime))\r\n      }\r\n      projects.push(copy)\r\n    })\r\n\r\n    let movedProjectIndex = projects.findIndex(el => el.id === parseInt(id))\r\n    let movedProject = projects[movedProjectIndex]\r\n\r\n    // if the project was dropped at the same spot it was picked up from, stop executing\r\n    if(index === movedProjectIndex) return\r\n\r\n    // store the startTime of the project that is currently first\r\n    // (for the setTimesForProjects function to work properly)\r\n    let firstStartTime\r\n    if(arrayId !== \"defaultProjects\") firstStartTime = projects[0].plannedTime.start\r\n\r\n    // remove from the current position\r\n    projects.splice(movedProjectIndex, 1)\r\n\r\n    // add to the new position\r\n    projects.splice(index, 0, movedProject)\r\n\r\n    // if the user wants us to update the timing of projects, do so\r\n    if(this.props.data.settings.updateTimesAfterDrag && arrayId !== \"defaultProjects\"){\r\n      projects[0].plannedTime.start = firstStartTime\r\n\r\n      projects = setTimesForProjects(projects, this.props.data.settings, this.props.data.breaks, this.props.data.startTime)\r\n    }\r\n\r\n    // save\r\n    this.props.update({[arrayId]: projects})\r\n  }\r\n\r\n  handleDoneEditingProject(arrayId, id, values){\r\n    let projects = this.props.data[arrayId].slice()\r\n    let breaks = this.props.data.breaks\r\n    let settings = this.props.data.settings\r\n\r\n    let index = projects.findIndex(project => project.id === parseInt(id))\r\n\r\n    // undefined handling\r\n    if(index < 0) return\r\n\r\n    // break the reference (keep the reference for plannedTime if it hasn't changed)\r\n    let changedProject = {}\r\n    Object.keys(projects[index]).forEach(key => {\r\n      changedProject[key] = projects[index][key]\r\n    })\r\n\r\n    // if we're changing something about the timing, break the reference to plannedTime too\r\n    if(\r\n      arrayId !== \"defaultProjects\" && (\r\n        changedProject.estimatedDuration !== values.duration ||\r\n        !TimeCalc.areIdentical(changedProject.plannedTime.start, values.startTime)\r\n      )\r\n    ){\r\n      changedProject.plannedTime = Object.assign({}, changedProject.plannedTime)\r\n    }\r\n\r\n    projects.splice(index, 1) // breaking the reference pt. 2\r\n\r\n    // if the user increased the startTime, save a new break\r\n    if(\r\n      settings.detectBreaksAutomatically &&\r\n      index !== 0 &&\r\n      arrayId !== \"defaultProjects\" &&\r\n      TimeCalc.isBiggerThan(values.startTime, changedProject.plannedTime.start, false, true)\r\n    ){\r\n      breaks = this.addBreak(\r\n        TimeCalc.suggestStartTime(projects[index - 1].plannedTime.end, projects[index - 1].estimatedDuration, settings),\r\n        values.startTime\r\n      )\r\n    }\r\n\r\n    // if the user decreased the startTime, check to see if any breaks need to adjusted\r\n    if(\r\n      settings.detectBreaksAutomatically &&\r\n      index !== 0 &&\r\n      arrayId !== \"defaultProjects\" &&\r\n      TimeCalc.isBiggerThan(changedProject.plannedTime.start, values.startTime, false, true)\r\n    ){\r\n      for(let i = 0; i < breaks.length; i++){\r\n        // if an autodetected break was previously right before the project being editted, adjust it\r\n        if(\r\n          breaks[i].autodetected &&\r\n          TimeCalc.areIdentical(changedProject.plannedTime.start, breaks[i].endTime)\r\n        ){\r\n          breaks[i].endTime = values.startTime\r\n        }\r\n      }\r\n    }\r\n\r\n    // check if any time values were changed (so that we don't unnecessarily recalculate project times)\r\n    let durationChanged, startTimeChanged\r\n    if(arrayId !== \"defaultProjects\"){\r\n      durationChanged = parseInt(changedProject.estimatedDuration) !== parseInt(values.duration)\r\n      startTimeChanged = !TimeCalc.areIdentical(changedProject.plannedTime.start, values.startTime)\r\n    }\r\n\r\n    // change the values\r\n    changedProject.name = values.name\r\n    changedProject.estimatedDuration = values.duration\r\n    if(arrayId === \"defaultProjects\") changedProject.days = values.days\r\n    else changedProject.plannedTime.start = values.startTime\r\n\r\n    // insert the changedProject back into the array\r\n    projects.splice(index, 0, changedProject)\r\n\r\n    let changes // what was modified\r\n\r\n    // if the user wants to update all times, do so\r\n    if(this.props.data.settings.updateTimesAfterEdit && (durationChanged || startTimeChanged)){\r\n      // break the references of all projects after the one that was changed (their times will be changed)\r\n      for(let i = index + 1; i < projects.length; i++){\r\n        projects[i] = Object.assign({}, projects[i])\r\n        projects[i].plannedTime = Object.assign({}, projects[i].plannedTime)\r\n      }\r\n\r\n      // recalculate the timing\r\n      let startTime = index === 0 ? values.startTime : Object.assign({}, this.props.data.startTime)\r\n      projects = setTimesForProjects(projects, settings, breaks, startTime)\r\n    }\r\n\r\n    // else simply adjust the endTime\r\n    else{\r\n      changes = {[arrayId]: id}\r\n      if(arrayId !== \"defaultProjects\"){\r\n        projects[index].plannedTime.end = TimeCalc.add(projects[index].plannedTime.start, projects[index].estimatedDuration)\r\n      }\r\n    }\r\n\r\n    // create the newState object\r\n    let newState = {[arrayId]: projects}\r\n\r\n    // if the startTime of the first project was changed, adjust this.props.data.startTime accordingly\r\n    if(\r\n      index === 0 &&\r\n      arrayId !== \"defaultProjects\" &&\r\n      !TimeCalc.areIdentical(this.props.data.startTime, changedProject.plannedTime.start)\r\n    ){\r\n      newState.startTime = changedProject.plannedTime.start\r\n    }\r\n\r\n    // save to state\r\n    this.props.update(newState, changes)\r\n  }\r\n\r\n  // state change = starting, pausing etc.\r\n  handleProjectStateChange(id, val, progress){\r\n    let projects = this.props.data.projects.slice()\r\n\r\n    let index = projects.findIndex(project => project.id === parseInt(id))\r\n\r\n    // break the reference\r\n    let changedProject = Object.assign({}, projects[index])\r\n    projects.splice(index, 1)\r\n\r\n    // set the state of the changed project\r\n    let prevProjState = changedProject.state\r\n    changedProject.state = val\r\n\r\n    // if it's being paused, set progress\r\n    if(val === \"paused\" && !isNaN(parseInt(progress))){\r\n      changedProject = this.handleProjectPause(changedProject, progress)\r\n    }\r\n\r\n    // if it's being changed to workingOnIt, save current time\r\n    if(val === \"workingOnIt\"){\r\n      changedProject.startedWorkingOnIt = Object.assign({},\r\n        {...this.props.currentTime, s: new Date().getSeconds()}\r\n      )\r\n\r\n      // loop through the other projects, pause any other projects with state === \"workingOnIt\"\r\n      projects.map(project => {\r\n        if(project.state === \"workingOnIt\" && project.id !== id){\r\n          // calculate progress\r\n          let progress = TimeCalc.subtractToMinutes(\r\n            {...this.props.currentTime, s: new Date().getSeconds()},\r\n            project.startedWorkingOnIt,\r\n            true\r\n          )\r\n          if(project.progress) progress += parseInt(project.progress)\r\n\r\n          // pause\r\n          project.state = \"paused\"\r\n          return this.handleProjectPause(project, progress)\r\n        }\r\n\r\n        return project\r\n      })\r\n    }\r\n\r\n    // if the state is being changed to done but the its progress is significantly more than its duration,\r\n    // let the user decide whether to increase the duration or not (using a Snackbar)\r\n    if(val === \"done\"){\r\n      let progress = 0\r\n      let duration = parseInt(changedProject.estimatedDuration)\r\n      if(changedProject.progress) progress += parseInt(changedProject.progress)\r\n      if(changedProject.startedWorkingOnIt){\r\n        progress += TimeCalc.subtractToMinutes(\r\n          {...this.props.currentTime, s: new Date().getSeconds()},\r\n          changedProject.startedWorkingOnIt,\r\n          true\r\n        )\r\n      }\r\n\r\n      if(progress > (duration * 1.1) && prevProjState !== \"paused\"){\r\n        let {roundTo} = this.props.data.settings\r\n        let suggestedDuration = Math.round(progress / roundTo) * roundTo\r\n\r\n        if(suggestedDuration !== duration){ // if duration is 5 and progress is 6, we'd offer the user to go from 5 to 5 (which is nonsense)\r\n          this.setState({temp: {...this.state.temp, snackbar: {\r\n            open: true,\r\n            message: `${changedProject.name} took way longer than expected. Do you want us to change its estimated duration to make it reflect how long it really took? (from ${duration} minutes to ${suggestedDuration} minutes)`,\r\n            action: () => {\r\n              this.handleDoneEditingProject(\"projects\", id, {\r\n                name: changedProject.name,\r\n                duration: suggestedDuration,\r\n                startTime: changedProject.plannedTime.start\r\n              })\r\n            },\r\n            buttonLabel: \"Change\"\r\n          }}})\r\n        }\r\n      }\r\n    }\r\n\r\n    let changes = {projects: [id]}\r\n\r\n    projects.splice(index, 0, changedProject)\r\n\r\n    this.props.update({projects}, changes)\r\n  }\r\n\r\n  handleCurrentTimeChange = time => {\r\n    this.props.onCurrentTimeChange(time)\r\n    setTimeout(this.setShowResetButton)\r\n  }\r\n\r\n  resetState = () => {\r\n    if(window.confirm(\"Are you sure you want to delete all your projects?\")){\r\n      this.props.update({\r\n        projects: [],\r\n        breaks: [],\r\n        mode: \"planning\"\r\n      })\r\n      this.setState({showResetButton: false})\r\n    }\r\n  }\r\n\r\n  // used to close any and all drawers in App\r\n  closeDrawer = (drawerName, dataLabel) => {\r\n    // first check if there isn't anything preventing the drawer from closing (such as an incorrect value that can't be saved)\r\n    if(typeof this.state.temp[\"canClose\" + drawerName] === \"undefined\" ||\r\n      this.state.temp[\"canClose\" + drawerName] ||\r\n      window.confirm(`Some of the ${dataLabel} weren't editted properly. If you close this now, those changes will be lost`)\r\n    ){\r\n      // close the drawer (by adjusting this.state.temp)\r\n      let newTemp = this.state.temp\r\n      newTemp[\"open\" + drawerName] = false\r\n      newTemp[\"canClose\" + drawerName] = undefined\r\n      if(drawerName === \"DefaultProjectsDrawer\") newTemp.defaultProjectsDrawerRemoveTransform = false\r\n      this.setState(newTemp)\r\n    }\r\n  }\r\n\r\n  saveBreaks = (breaks, canClose, changes) => {\r\n    // first check if the breaks can be saved (in other words if there are no invalid values)\r\n    if(typeof canClose === \"undefined\" || canClose){\r\n      let projects = this.props.data.projects.slice()\r\n\r\n      // adjust the timing of projects accordingly\r\n      if(this.props.data.projects.length){\r\n        projects = setTimesForProjects(projects, this.props.data.settings, breaks, this.props.data.startTime)\r\n      }\r\n\r\n      let temp = this.state.temp\r\n      if(typeof canClose !== \"undefined\") temp.canCloseBreaksDrawer = canClose\r\n\r\n      this.setState({temp})\r\n      this.props.update({projects, breaks: JSON.parse(JSON.stringify(breaks))}, changes)\r\n    }\r\n    else this.setState({temp: {...this.state.temp, canCloseBreaksDrawer: false}})\r\n  }\r\n\r\n  // when the user dissmisses (clicks the close icon on) the panel that suggests that they sign in\r\n  handleSignInDismiss = () => {\r\n    this.setState({temp: {...this.state.temp, signInDissmissed: true}})\r\n\r\n    // used to offer the user the \"Don't remind me again\" option when dismissing the panel for a second time\r\n    if(!localStorage.userHasDismissedSignInBefore){\r\n      localStorage.userHasDismissedSignInBefore = true\r\n    }\r\n\r\n    // show the panel again in an hour\r\n    this.showSignInAgainTimeout = setTimeout(() => {\r\n      this.setState({temp: {...this.state.temp, signInDissmissed: null}})\r\n    }, 60*60*1000)\r\n  }\r\n\r\n  // when the user clicks \"Don't remind me again\" on the SignInPanel\r\n  handleSignInDontRemindMeAgain = () => {\r\n    this.setState({temp: {...this.state.temp, signInDissmissed: null}})\r\n    localStorage.removeItem(\"userHasDismissedSignInBefore\")\r\n    localStorage.dontShowSignInPanelAgain = true\r\n  }\r\n\r\n  openDefaultProjectsDrawer = () => {\r\n    this.setState({temp: {...this.state.temp, openDefaultProjectsDrawer: true}})\r\n    setTimeout(() => {\r\n      this.setState({temp: {...this.state.temp, defaultProjectsDrawerRemoveTransform: true}})\r\n    }, 400)\r\n  }\r\n\r\n  // handles mobile navigation\r\n  changeView(view, change, additionalProps){\r\n    // if the change is positive (we're moving into 'view')\r\n    if(change){\r\n      // create the new path including the GET parameters\r\n      let newPath = \"/\" + view\r\n      if(additionalProps && typeof additionalProps.stopPropagation !== \"function\"){\r\n        newPath += \"?\"\r\n\r\n        let isFirst = true\r\n        for(let [key, value] of Object.entries(additionalProps)){\r\n\r\n          // add \"&\" (unless it would be before the first param)\r\n          if(isFirst) isFirst = false\r\n          else newPath += \"&\"\r\n\r\n          newPath += key + \"=\" + value\r\n        }\r\n      }\r\n      this.props.history.push(newPath)\r\n    }\r\n    // if the change is negative (we're returning from 'view')\r\n    else{\r\n      let pathArr = this.props.history.location.pathname.split(\"/\")\r\n      pathArr.splice(-1, 1)\r\n      this.props.history.push(pathArr.join(\"/\"))\r\n    }\r\n  }\r\n\r\n  // used when the user adds a break in BreaksDrawer/BreaksView\r\n  addBreak = newBreak => {\r\n    let { breaks } = this.props.data\r\n\r\n    let newId = makeNewId(breaks, \"breaks\")\r\n\r\n    breaks.push({\r\n      id: newId,\r\n      ...newBreak\r\n    })\r\n\r\n    this.props.update({breaks}, {breaks: newId})\r\n  }\r\n\r\n  // when the user wants to save a break, convert and save it\r\n  handleDoneEditingBreak(id, inputValues){\r\n    let breaks = this.props.data.breaks.slice()\r\n\r\n    let index = breaks.findIndex(obj => obj.id === parseInt(id))\r\n\r\n    if(index < 0) return\r\n\r\n    let obj = JSON.parse(JSON.stringify(breaks[index]))\r\n\r\n    obj.name = inputValues.name\r\n    obj.startTime = inputValues.startTime\r\n    obj.endTime = inputValues.endTime\r\n\r\n    breaks.splice(index, 1, obj)\r\n\r\n    this.props.update({breaks}, {breaks: id})\r\n  }\r\n\r\n  deleteBreak(id){\r\n    let breaks = this.props.data.breaks\r\n\r\n    let index = breaks.findIndex(obj => obj.id === parseInt(id))\r\n\r\n    breaks.splice(index, 1)\r\n\r\n    this.props.update({breaks}, {breaks: id})\r\n  }\r\n\r\n  // the dateString is eg. \"2019-05-06\" and is used as the key in productivityPercentages\r\n  getDateString = () => {\r\n    let date\r\n    // if it's between midnight and 5 am, use the previous day's date string\r\n    if(TimeCalc.isBiggerThan(5*60, this.props.currentTime, true)){\r\n      date = new Date(Date.now() - (24*60*60*1000))\r\n    }\r\n    // else simply use the current one\r\n    else date = new Date()\r\n\r\n    // convert the date into a date string (to save space)\r\n    return date.toISOString().split(\"T\")[0]\r\n  }\r\n\r\n  closeSnackbar = () => this.setState({temp: {...this.state.temp, snackbar: {open: false}}})\r\n\r\n  // pausing is different than other state changes because we have to consider the progress that the user set\r\n  // that requires some additional functionality that needs to be used in 2 part of handleProjectStateChange\r\n  handleProjectPause = (changedProject, progress) => {\r\n    changedProject.progress = progress\r\n\r\n    // if the user set progress significantly higher than the total duration, adjust the duration\r\n    let duration = parseInt(changedProject.estimatedDuration)\r\n    if(progress > (duration * 1.1)){\r\n      let {roundTo} = this.props.data.settings\r\n      let suggestedDuration = Math.round(progress / roundTo) * roundTo\r\n\r\n      if(suggestedDuration !== duration){ // prevent situations like duration = 5; progress = 6\r\n        changedProject.estimatedDuration = suggestedDuration\r\n\r\n        // show a Snackbar to let the user revert the change\r\n        this.setState({temp: {...this.state.temp, snackbar: {\r\n          open: true,\r\n          message: `${changedProject.name}'s duration was changed from ${duration} to ${changedProject.estimatedDuration}`,\r\n          action: () => {\r\n            this.handleDoneEditingProject(\"projects\", changedProject.id, {\r\n              name: changedProject.name,\r\n              duration,\r\n              startTime: changedProject.plannedTime.start\r\n            })\r\n          },\r\n          buttonLabel: \"Undo\"\r\n        }}})\r\n      }\r\n    }\r\n\r\n    return changedProject\r\n  }\r\n\r\n  render() {\r\n    // certain mobile \"routing\" is actually handled within the App component to let the different views use App's methods\r\n    if(this.props.history.location.pathname === \"/add\"){\r\n      // getting the GET parameters of the current path\r\n      let getParams = getGetParams(this.props.location.search)\r\n\r\n      // set certain props depending on the type of object the user wants to add\r\n      let title, arrayId, closeFunc, defaultColorIndex\r\n      switch(getParams.type){\r\n        case \"default\":\r\n          arrayId = \"defaultProjects\"\r\n          title = \"Add a repetitive project\"\r\n          closeFunc = this.changeView.bind(this, \"defaultProjects\", true)\r\n          defaultColorIndex = this.props.data.defaultColorIndexDefaultProjects\r\n          break\r\n        case \"break\":\r\n          arrayId = \"breaks\"\r\n          title = \"Add a break\"\r\n          closeFunc = this.changeView.bind(this, \"breaks\", true)\r\n          break\r\n        default:\r\n          arrayId = \"projects\"\r\n          closeFunc = this.changeView.bind(this, \"add\", false)\r\n          defaultColorIndex = this.props.data.defaultColorIndex\r\n      }\r\n\r\n      return (\r\n        <AddProjectView\r\n          settings={this.props.data.settings}\r\n          defaultColorIndex={defaultColorIndex}\r\n          showErrors={this.state.showErrors}\r\n          currentTime={this.props.currentTime}\r\n          lastProject={this.props.data.projects[this.props.data.projects.length - 1]}\r\n          onAddProject={this.addProject.bind(this, arrayId)}\r\n          onAddBreak={this.addBreak}\r\n          type={getParams.type}\r\n          close={closeFunc}\r\n          title={title}\r\n        />\r\n      )\r\n    }\r\n\r\n    if(\r\n      this.props.history.location.pathname === \"/edit\" &&\r\n      this.props.data.breaks // only open after the data is loaded to prevent errors\r\n    ){\r\n      // parse GET params of the current path\r\n      let getParams = getGetParams(this.props.location.search)\r\n\r\n      let { type } = getParams\r\n\r\n      // set certain props depending on what kind of object the user wants to edit\r\n      let arrayId, close\r\n      switch(type){\r\n        case \"default\":\r\n          arrayId = \"defaultProjects\"\r\n          close = this.changeView.bind(this, \"defaultProjects\", true)\r\n          break\r\n        case \"break\":\r\n          arrayId = \"breaks\"\r\n          close = this.changeView.bind(this, \"breaks\", true)\r\n          break\r\n        default:\r\n          arrayId = \"projects\"\r\n          close = this.changeView.bind(this, \"edit\", false)\r\n      }\r\n\r\n      let id = getParams.id\r\n\r\n      let array = this.props.data[arrayId]\r\n\r\n      let index = array.findIndex(obj => obj.id.toString() === id)\r\n\r\n      let obj = array[index] // this is the object the user wants to edit\r\n      if(obj){ // handle undefined\r\n\r\n        // convert it into a differently structured object\r\n        let inputValues = {name: obj.name}\r\n        if(type === \"default\") inputValues.days = obj.days\r\n        else inputValues.startTime = obj.plannedTime ? obj.plannedTime.start : obj.startTime\r\n        if(type === \"break\"){\r\n          inputValues.endTime = obj.endTime\r\n        }\r\n        else{\r\n          inputValues.duration = obj.estimatedDuration\r\n          inputValues.color = obj.color\r\n        }\r\n\r\n        // set and bind the relevant functions\r\n        let deleteFunc, doneEditingFunc\r\n        if(type === \"break\"){\r\n          deleteFunc = this.deleteBreak.bind(this, id)\r\n          doneEditingFunc = this.handleDoneEditingBreak.bind(this, id)\r\n        }\r\n        else{\r\n          deleteFunc = this.deleteProject.bind(this, arrayId, id)\r\n          doneEditingFunc = this.handleDoneEditingProject.bind(this, arrayId, id)\r\n        }\r\n\r\n        return (\r\n          <EditProjectView\r\n            settings={this.props.data.settings}\r\n            inputValues={inputValues}\r\n            delete={deleteFunc}\r\n            onDoneEditing={doneEditingFunc}\r\n            close={close}\r\n            type={type}\r\n          />\r\n        )\r\n      }\r\n    }\r\n\r\n    if(\r\n      this.props.history.location.pathname === \"/breaks\"&&\r\n      this.props.data.breaks\r\n    ){\r\n      return (\r\n        <BreaksView\r\n          breaks={this.props.data.breaks}\r\n          changeView={this.changeView.bind(this)}\r\n        />\r\n      )\r\n    }\r\n\r\n    if(\r\n      this.props.history.location.pathname === \"/defaultProjects\" &&\r\n      this.props.data.defaultProjects\r\n    ){\r\n      return (\r\n        <DefaultProjectsView\r\n          projects={this.props.data.defaultProjects}\r\n          settings={this.props.data.settings}\r\n          defaultColorIndex={this.props.data.defaultColorIndexDefaultProjects}\r\n          useDefaultProjects={this.props.data.useDefaultProjects}\r\n          onColorChange={this.handleColorChange.bind(this, \"defaultProjects\")}\r\n          onDoneEditing={this.handleDoneEditingProject.bind(this, \"defaultProjects\")}\r\n          onAddProject={this.addProject.bind(this, \"defaultProjects\")}\r\n          onDeleteProject={this.deleteProject.bind(this, \"defaultProjects\")}\r\n          onDragEnd={this.handleDragEnd.bind(this, \"defaultProjects\")}\r\n          onUseDefaultProjectsChange={e => {this.props.update({useDefaultProjects: e.target.checked})}}\r\n          startEditingMobile={id => {\r\n            this.changeView(\"edit\", true, {type: \"default\", id})\r\n          }}\r\n          changeView={this.changeView.bind(this)}\r\n        />\r\n      )\r\n    }\r\n\r\n    let {allProjectsDone} = this.state\r\n\r\n    // merge showErrors from App and Router\r\n    let showErrors = {\r\n      ...this.props.showErrors,\r\n      ...this.state.showErrors\r\n    }\r\n\r\n    return (\r\n      <IsMobileContext.Consumer>\r\n        {isMobile => (\r\n          <Grid\r\n            className=\"container\"\r\n            onKeyDown={this.handleRootKeyDown}\r\n            tabIndex=\"0\"\r\n            autoselect=\"true\"\r\n          >\r\n            {!isMobile && (\r\n              <ModeSwitch\r\n                mode={this.props.data.mode}\r\n                onModeChange={this.props.changeMode}>\r\n                <TimeStats\r\n                  currentTime={this.props.currentTime}\r\n                  onCurrentTimeChange={this.handleCurrentTimeChange}\r\n                  endTime={this.props.data.endTime}\r\n                  projects={this.props.data.projects}\r\n                  breaks={this.props.data.breaks}\r\n                  settings={this.props.data.settings}\r\n                  startTime={this.props.data.startTime}\r\n                  realEndTime={this.props.data.realEndTime}\r\n                />\r\n              </ModeSwitch>\r\n            )}\r\n            <Grid container>\r\n              <SettingsContext.Provider value={this.props.data.settings}>\r\n                <ProjectsTable\r\n                  mode={this.props.data.mode}\r\n                  projects={this.props.data.projects}\r\n                  settings={this.props.data.settings}\r\n                  currentTime={this.props.currentTime}\r\n                  defaultColorIndex={this.props.data.defaultColorIndex}\r\n                  showErrors={showErrors}\r\n                  onColorChange={this.handleColorChange.bind(this, \"projects\")}\r\n                  onDoneEditing={this.handleDoneEditingProject.bind(this, \"projects\")}\r\n                  onAddProject={this.addProject.bind(this, \"projects\")}\r\n                  onProjectStateChange={this.handleProjectStateChange.bind(this)}\r\n                  onDeleteProject={this.deleteProject.bind(this, \"projects\")}\r\n                  onDragEnd={this.handleDragEnd.bind(this, \"projects\")}\r\n                  startEditingMobile={id => {\r\n                    this.changeView(\"edit\", true, {id})\r\n                  }}\r\n                />\r\n                {\r\n                  this.props.data.mode === \"planning\" ?\r\n                  // planning mode\r\n                  (\r\n                    <React.Fragment>\r\n                      <div id=\"setEndTime\">\r\n                        <label htmlFor=\"endTimeHoursInput\">\r\n                          {isMobile ? \"End time\" : \"Time when you want to stop working\"}:\r\n                        </label>\r\n                        <TimeSetter\r\n                          onChange={this.handleEndTimeChange}\r\n                          value={this.props.data.endTime}\r\n                          firstInputId=\"endTimeHoursInput\"\r\n                          showError={showErrors.endTime}\r\n                        />\r\n                      </div>\r\n                      <Grid container justify=\"space-around\">\r\n                        {\r\n                          !isMobile && (\r\n                            <Grid>\r\n                              <Button\r\n                                className=\"planningSecondaryButton\"\r\n                                onClick={() => {\r\n                                  this.setState({temp: {...this.state.temp, openBreaksDrawer: true}})\r\n                                }}\r\n                                style={{marginBottom: \"1rem\"}}>\r\n                                <PauseIcon color=\"primary\" />\r\n                                Edit breaks\r\n                              </Button>\r\n                            </Grid>\r\n                          )\r\n                        }\r\n                        <Grid>\r\n                          <Button\r\n                            onClick={() => {this.props.changeMode(\"working\")}}\r\n                            variant=\"contained\"\r\n                            color=\"primary\">\r\n                            <StartIcon />\r\n                            Let's get to work!\r\n                          </Button>\r\n                        </Grid>\r\n                        {\r\n                          !isMobile && (\r\n                            <Grid>\r\n                              <Button\r\n                                className=\"planningSecondaryButton\"\r\n                                onClick={this.openDefaultProjectsDrawer}\r\n                                style={{marginBottom: \"1rem\"}}>\r\n                                <AutorenewIcon color=\"primary\" />\r\n                                Repetitive projects\r\n                              </Button>\r\n                            </Grid>\r\n                          )\r\n                        }\r\n                      </Grid>\r\n                      <Drawer\r\n                        id=\"BreaksDrawer\"\r\n                        anchor=\"bottom\"\r\n                        open={this.state.temp.openBreaksDrawer && !isMobile}\r\n                        onClose={() => {this.closeDrawer(\"BreaksDrawer\", \"breaks\")}}\r\n                      >\r\n                        <BreaksDrawer\r\n                          breaks={this.props.data.breaks}\r\n                          currentTime={this.props.currentTime}\r\n                          onSave={this.saveBreaks}\r\n                          onClose={() => {this.closeDrawer(\"BreaksDrawer\", \"breaks\")}}\r\n                        />\r\n                      </Drawer>\r\n                      <Drawer\r\n                        className={\r\n                          this.state.temp.defaultProjectsDrawerRemoveTransform ?\r\n                          \"defaultProjectsDrawerRemoveTransform\" : null\r\n                        }\r\n                        anchor=\"bottom\"\r\n                        open={this.state.temp.openDefaultProjectsDrawer && !isMobile}\r\n                        onClose={() => {this.closeDrawer(\"DefaultProjectsDrawer\", \"projects\")}}\r\n                      >\r\n                        <DefaultProjectsDrawer\r\n                          projects={this.props.data.defaultProjects}\r\n                          settings={this.props.data.settings}\r\n                          defaultColorIndex={this.props.data.defaultColorIndexDefaultProjects}\r\n                          useDefaultProjects={this.props.data.useDefaultProjects}\r\n                          onClose={() => {this.closeDrawer(\"DefaultProjectsDrawer\", \"projects\")}}\r\n                          onColorChange={this.handleColorChange.bind(this, \"defaultProjects\")}\r\n                          onDoneEditing={this.handleDoneEditingProject.bind(this, \"defaultProjects\")}\r\n                          onAddProject={this.addProject.bind(this, \"defaultProjects\")}\r\n                          onDeleteProject={this.deleteProject.bind(this, \"defaultProjects\")}\r\n                          onDragEnd={this.handleDragEnd.bind(this, \"defaultProjects\")}\r\n                          onUseDefaultProjectsChange={e => {this.props.update({useDefaultProjects: e.target.checked})}}\r\n                          startEditingMobile={id => {\r\n                            this.changeView(\"edit\", true, {id})\r\n                          }}\r\n                        />\r\n                      </Drawer>\r\n                    </React.Fragment>\r\n                  )\r\n                  :\r\n                  // working mode\r\n                  (\r\n                    allProjectsDone && (\r\n                      <Congrats\r\n                        productivityPercentages={this.props.data.productivityPercentages}\r\n                        allProjectsDone={this.state.allProjectsDone}\r\n                        totalTimeWorkedString={this.state.totalTimeWorkedString}\r\n                        dateString={this.getDateString()}\r\n                      />\r\n                    )\r\n                  )\r\n                }\r\n                {this.state.showResetButton && (\r\n                  <Grid container justify=\"flex-end\" alignItems=\"flex-end\" style={{marginTop: \"2rem\"}}>\r\n                    <Button\r\n                      id=\"resetButton\"\r\n                      onClick={this.resetState}\r\n                      variant=\"contained\">\r\n                      Reset\r\n                    </Button>\r\n                  </Grid>\r\n                )}\r\n              </SettingsContext.Provider>\r\n            </Grid>\r\n            {!isMobile && (\r\n              <React.Fragment>\r\n                <Link id=\"linkToSettings\" to=\"/settings\" aria-label=\"Settings\" title=\"Settings\">\r\n                  <SettingsIcon />\r\n                </Link>\r\n                <DropdownMenu\r\n                  connect={this.props.connect}\r\n                  disconnect={this.props.disconnect}\r\n                  history={this.props.history}\r\n                  loggedIn={this.props.loggedIn}\r\n                  data={localStorage.devUnlocked ? this.props.data : {}}\r\n                  update={localStorage.devUnlocked ? this.props.update : {}}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            <Slide\r\n              direction=\"right\"\r\n              in={\r\n                !this.props.loggedIn &&\r\n                !this.state.temp.dontShowSignInYet &&\r\n                !this.state.temp.signInDissmissed &&\r\n                !localStorage.dontShowSignInPanelAgain &&\r\n                !this.props.disconnected\r\n              }\r\n              mountOnEnter unmountOnExit\r\n            >\r\n              <SignInPanel\r\n                connect={this.props.connect}\r\n                dismiss={this.handleSignInDismiss}\r\n                showDontRemindMeAgain={localStorage.userHasDismissedSignInBefore}\r\n                dontRemindMeAgain={this.handleSignInDontRemindMeAgain}\r\n              />\r\n            </Slide>\r\n            {isMobile && this.props.data.mode === \"planning\" && (\r\n              <AddFab\r\n                onClick={this.changeView.bind(this, \"add\", true)}\r\n              />\r\n            )}\r\n\r\n            <Snackbar\r\n              anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\r\n              open={this.state.temp.snackbar.open}\r\n              autoHideDuration={6000}\r\n              onClose={this.closeSnackbar}\r\n              ContentProps={{'aria-describedby': 'message-id',}}\r\n              message={<span id=\"message-id\">{this.state.temp.snackbar.message}</span>}\r\n              action={[\r\n                <Button key=\"action\" color=\"secondary\" size=\"small\"\r\n                  onClick={() => {\r\n                    this.state.temp.snackbar.action()\r\n                    this.closeSnackbar()\r\n                  }}\r\n                  children={this.state.temp.snackbar.buttonLabel || \"\"}\r\n                />,\r\n                <IconButton\r\n                  key=\"close\"\r\n                  aria-label=\"Close\"\r\n                  color=\"inherit\"\r\n                  onClick={this.closeSnackbar}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>,\r\n              ]}\r\n            />\r\n          </Grid>\r\n        )}\r\n      </IsMobileContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n// adds functionality used in both the desktop version of settings and the mobile view responsible for editing default colors\r\nconst withDefaultColorsEditing = WrappedComponent => (\r\n  class withDefaultColorsEditing extends Component{\r\n    constructor(props){\r\n      super(props)\r\n      let state = {}\r\n\r\n      // if the settings are loaded already, load them into the state\r\n      if(this.props.settings && this.props.settings.defaultColors){\r\n        state.defaultColors = this.props.settings.defaultColors\r\n      }\r\n\r\n      this.state = state\r\n    }\r\n\r\n    componentDidUpdate(){\r\n      // only execute if it's the init with data from localStorage\r\n      // (if the user loads the page using this HOC directly instead of clicking on a router link leading here, the data won't be available immediately)\r\n      if(\r\n        typeof this.state.defaultColors === \"undefined\" &&\r\n        this.props.settings\r\n      ){\r\n        this.setState({defaultColors: this.props.settings.defaultColors})\r\n      }\r\n    }\r\n\r\n    handleDefaultColorChange(i, val){\r\n      let defaultColors = this.state.defaultColors\r\n      defaultColors[i] = val\r\n      this.setState({defaultColors})\r\n    }\r\n\r\n    addDefaultColor = () => {\r\n      let defaultColors = this.state.defaultColors\r\n      // generate a random new color\r\n      let newColor = \"#\" + (Math.random() * 16777216).toString(16).substr(0, 6)\r\n      defaultColors.push(newColor)\r\n      this.setState({defaultColors})\r\n    }\r\n\r\n    removeDefaultColor(i){\r\n      let defaultColors = this.state.defaultColors\r\n      defaultColors.splice(i, 1)\r\n      this.setState({defaultColors})\r\n    }\r\n\r\n    save = () => {\r\n      if(typeof this.props.save === \"function\") this.props.save(this.state.defaultColors)\r\n    }\r\n\r\n    render = () => (\r\n      <WrappedComponent\r\n        {...this.props}\r\n        onDefaultColorChange={this.handleDefaultColorChange.bind(this)}\r\n        addDefaultColor={this.addDefaultColor}\r\n        removeDefaultColor={this.removeDefaultColor.bind(this)}\r\n        save={this.save}\r\n      />\r\n    )\r\n  }\r\n)\r\n\r\nexport default withDefaultColorsEditing\r\n","const sectionInfo = {\r\n  general: {\r\n    order: 0,\r\n    label: \"General settings\",\r\n    icon: \"settings\"\r\n  },\r\n  detection: {\r\n    order: 1,\r\n    label: \"Automatic detection\",\r\n    icon: \"search\"\r\n  },\r\n  misc: {\r\n    order: 2,\r\n    label: \"Miscellaneous\",\r\n    icon: \"menu\"\r\n  },\r\n}\r\n\r\nconst inputInfo = {\r\n  timeFormat24H: {\r\n    label: \"Use the 24-hour time format\",\r\n    type: \"boolean\",\r\n    section: \"general\",\r\n    order: 0,\r\n    icon: \"timer\"\r\n  },\r\n  bufferTimePercentage: {\r\n    label: \"Bufffer time percentage\",\r\n    type: \"percentage\",\r\n    max: 1,\r\n    tooltip: \"Buffer times are short breaks inserted after each project. Their length depends on the length of the project before them. This field determines what percentage of the previous project's duration the buffer will be.\",\r\n    section: \"general\",\r\n    order: 1,\r\n    icon: \"view_week\"\r\n  },\r\n  showResetButtonAfter: {\r\n    label: \"Show reset button after (hours)\",\r\n    type: \"int\",\r\n    section: \"misc\",\r\n    order: 3,\r\n    icon: \"restore\"\r\n  },\r\n  defaultColors: {\r\n    label: \"Default colors:\",\r\n    type: \"colors\",\r\n    section: \"misc\",\r\n    order: 0,\r\n    icon: \"color_lens\"\r\n  },\r\n  updateTimesAfterDrag: {\r\n    label: \"Adjust planned times after changing the order of projects\",\r\n    type: \"boolean\",\r\n    section: \"detection\",\r\n    order: 0,\r\n    icon: \"swap_vert\"\r\n  },\r\n  updateTimesAfterEdit: {\r\n    label: \"Adjust planned times after editing a project\",\r\n    type: \"boolean\",\r\n    section: \"detection\",\r\n    order: 1,\r\n    icon: \"edit\"\r\n  },\r\n  updateTimesAfterDelete: {\r\n    label: \"Adjust planned times after deleting a project\",\r\n    type: \"boolean\",\r\n    section: \"detection\",\r\n    order: 2,\r\n    icon: \"delete\"\r\n  },\r\n  roundTo: {\r\n    label: \"Round to (minutes)\",\r\n    type: \"int\",\r\n    section: \"misc\",\r\n    order: 2,\r\n    icon: \"access_time\"\r\n  },\r\n  changeModeOnTab: {\r\n    label: \"Change mode when the Tab key is pressed\",\r\n    type: \"boolean\",\r\n    section: \"misc\",\r\n    order: 1,\r\n    icon: \"redo\"\r\n  },\r\n  detectBreaksAutomatically: {\r\n    label: \"Detect breaks automatically\",\r\n    type: \"boolean\",\r\n    section: \"detection\",\r\n    order: 3,\r\n    icon: \"pause\"\r\n  },\r\n  adjustDurationOnPause: {\r\n    label: \"If you set progress to a number higher than the project's duration, adjust its duration\",\r\n    type: \"boolean\",\r\n    section: \"detection\",\r\n    order: 4,\r\n    icon: \"input\"\r\n  },\r\n  offerToAdjustDurationOnDone: {\r\n    label: \"If a project takes longer than expected, offer to adjust its duration\",\r\n    type: \"boolean\",\r\n    section: \"detection\",\r\n    order: 5,\r\n    icon: \"build\"\r\n  },\r\n  darkTheme: {\r\n    label: \"Dark theme\",\r\n    type: \"boolean\",\r\n    section: \"general\",\r\n    order: 0,\r\n    icon: \"invert_colors\"\r\n  }\r\n}\r\n\r\nexport {sectionInfo, inputInfo}\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from './ColorPicker'\r\nimport Input from '@material-ui/core/Input';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Icon from '@material-ui/core/Icon'\r\nimport { Link } from \"react-router-dom\";\r\nimport { IsMobileContext } from './_Context'\r\nimport withDefaultColorsEditing from './HOCs/withDefaultColorsEditing'\r\nimport './css/Settings.css'\r\nimport {sectionInfo, inputInfo} from './util/settingsConfig'\r\n\r\n\r\nclass Settings extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      inputs: this.props.settings,\r\n      showErrors: {},\r\n      temp: {}\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    // only update if it's the init with data from localStorage\r\n    //(which won't be loaded immediately if the user loads /settings directly)\r\n    if(!Object.keys(this.state.inputs).length && this.props.settings){\r\n      this.setState({inputs: this.props.settings})\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    // prevent memory leaks\r\n    clearTimeout(this.state.temp.firstSectionIconClickCounterTimeout)\r\n  }\r\n\r\n  handleInputChange(id, e){\r\n    // handle checkboxes too\r\n    let val = inputInfo[id].type === \"boolean\" ? e.target.checked : e.target.value\r\n\r\n    // validation\r\n    switch (inputInfo[id].type) {\r\n      case \"int\":\r\n        if(isNaN(val) && val !== \"\") return\r\n        break;\r\n      case \"percentage\":\r\n        let percentage = val.split(\"%\")[0]\r\n        if(percentage !== \"\") val = percentage / 100\r\n        if(isNaN(val) && val !== \"%\") return // if NaN, empty or last character is . (eg. 0.)\r\n        break;\r\n      default:\r\n    }\r\n    if(typeof inputInfo[id].max !== \"undefined\" && val > inputInfo[id].max) return\r\n\r\n    // save to state, hide errors\r\n    let newState = {inputs: this.state.inputs, showErrors: this.state.showErrors}\r\n    newState.inputs[id] = val\r\n    newState.showErrors[id] = false\r\n    this.setState({newState})\r\n  }\r\n\r\n  // save and go back\r\n  save = () => {\r\n    // validation (for empty percentage)\r\n    let inputs = this.state.inputs\r\n    let keys = Object.keys(inputs)\r\n    for(let i = 0; i < keys.length; i++){\r\n      if(inputInfo[keys[i]] && inputInfo[keys[i]].type === \"percentage\" && inputs[keys[i]] === \"%\"){\r\n        let showErrors = this.state.showErrors\r\n        showErrors[keys[i]] = true\r\n        this.setState({showErrors})\r\n        return\r\n      }\r\n    }\r\n\r\n    this.props.update({settings: inputs})\r\n    this.props.history.push(\"/\")\r\n  }\r\n\r\n  resetToDefault = () => {\r\n    if(window.confirm(\"Are you sure you want to reset your settings back to default?\")){\r\n      this.setState({inputs: this.props.defaultSettings})\r\n      this.props.update({settings: this.props.defaultSettings})\r\n    }\r\n  }\r\n\r\n  // unlocks dev options (which are unlocked by clicking the icon of the first section several times)\r\n  handleFirstSectionIconClick = () => {\r\n    // count the amount of clicks\r\n    let {firstSectionIconClickCounter} = this.state.temp\r\n    if(!firstSectionIconClickCounter) firstSectionIconClickCounter = 0\r\n    firstSectionIconClickCounter++\r\n\r\n    // if there have been enough clicks...\r\n    if(firstSectionIconClickCounter > 12){\r\n      // turn off dev options if they were previously enabled\r\n      if(localStorage.devUnlocked){\r\n        if(window.confirm(\"Are you sure you want to turn off dev options?\")){\r\n          localStorage.removeItem(\"devUnlocked\")\r\n        }\r\n      }\r\n\r\n      // if dev options were previously disabled, enable them\r\n      else{\r\n        if(window.confirm(\r\n          `Howdy there! Looks like you just clicked the settings icon 13 times\r\nin a row which means a) you just had a stroke or b) you're trying to unlock developer options.\r\nIf it's the former, please seek help immediately. If the latter, click OK.`\r\n        )){\r\n          localStorage.devUnlocked = true\r\n\r\n          // clear the timeout to prevent memory leaks, delete the temp values as they are no longer needed\r\n          clearTimeout(this.state.temp.firstSectionIconClickCounterTimeout)\r\n          let temp = this.state.temp\r\n          delete temp.firstSectionIconClickCounter\r\n          delete temp.firstSectionIconClickCounterTimeout\r\n\r\n          this.setState({temp})\r\n        }\r\n      }\r\n    }\r\n\r\n    // rest the click counter 3 seconds after the last click (always have only 1 timout runing)\r\n    clearTimeout(this.state.temp.firstSectionIconClickCounterTimeout)\r\n    let firstSectionIconClickCounterTimeout = setTimeout(() => {\r\n      this.setState({temp: {...this.state.temp, firstSectionIconClickCounter: 0}})\r\n    }, 3000)\r\n\r\n    this.setState({temp: {\r\n      ...this.state.temp,\r\n      firstSectionIconClickCounter,\r\n      firstSectionIconClickCounterTimeout\r\n    }})\r\n  }\r\n\r\n  render(){\r\n    // convert the state into a 2D UI array to make rendering easier\r\n    // the 1st dimension represents sections, the 2nd one individual elements\r\n    // eg. [[\"timeFormat\", \"autosave\"], [\"theme\"]]\r\n    let inputKeys = []\r\n    let sectionKeys = Object.keys(sectionInfo)\r\n    sectionKeys.sort((a, b) => sectionInfo[a].order > sectionInfo[b].order ? 1 : -1)\r\n    for(let sectionName of sectionKeys){\r\n      let inputsInSection = Object.keys(this.state.inputs).filter(el => inputInfo[el].section === sectionName)\r\n      inputsInSection.sort((a, b) => inputInfo[a].order > inputInfo[b].order ? 1 : -1)\r\n      inputKeys.push(inputsInSection)\r\n    }\r\n\r\n    return (\r\n      <div className=\"Settings container\">\r\n        <Table>\r\n          <TableBody>\r\n            {inputKeys.map((inputKeyArray, i) => {\r\n              let sectionName = Object.keys(sectionInfo).find(name => sectionInfo[name].order === i)\r\n\r\n              return (\r\n                <React.Fragment key={i}>\r\n                  <TableRow>\r\n                    <TableCell className=\"sectionIconCell\">\r\n                      <Icon onClick={i ? () => {} : this.handleFirstSectionIconClick}>\r\n                        {sectionInfo[sectionName].icon}\r\n                      </Icon>\r\n                    </TableCell>\r\n                    <TableCell colSpan={3}>\r\n                      <Typography variant=\"h5\" style={{paddingTop: \"2.5rem\"}}>\r\n                        {sectionInfo[sectionName].label}:\r\n                      </Typography>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  {inputKeyArray.map((inputKey, i) => (\r\n                    inputKey === \"defaultColors\" ? (\r\n                      <TableRow key={i}>\r\n                        <TableCell className=\"iconCell\">\r\n                          <Icon>{inputInfo[inputKey].icon}</Icon>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          Default colors:\r\n                        </TableCell>\r\n                        <IsMobileContext.Consumer>\r\n                          {isMobile => (\r\n                            isMobile ? (\r\n                              <TableCell className=\"value\">\r\n                                <Link to=\"/settings/defaultColors\" aria-label=\"Set default colors\">\r\n                                  <Button variant=\"outlined\">\r\n                                    Set\r\n                                  </Button>\r\n                                </Link>\r\n                              </TableCell>\r\n                            ) : (\r\n                              <TableCell id=\"defaultColorsCell\" className=\"value\">\r\n                                {\r\n                                  this.state.inputs.defaultColors.map((color, i) => (\r\n                                    <div key={i}>\r\n                                      <ColorPicker\r\n                                        value={color}\r\n                                        onChange={this.props.onDefaultColorChange.bind(this, i)}\r\n                                      />\r\n                                      <div className=\"removeDefaultColorDiv\">\r\n                                        <IconButton\r\n                                          aria-label=\"Remove the color\"\r\n                                          className=\"removeDefaultColor\"\r\n                                          disableRipple={true}\r\n                                          onClick={this.props.removeDefaultColor.bind(this, i)}>\r\n                                          <Icon>remove</Icon>\r\n                                        </IconButton>\r\n                                      </div>\r\n                                    </div>\r\n                                  ))\r\n                                }\r\n                                <IconButton\r\n                                  id=\"addDefaultColor\"\r\n                                  aria-label=\"Add a new default color\"\r\n                                  onClick={this.props.addDefaultColor}>\r\n                                  <Icon>add</Icon>\r\n                                </IconButton>\r\n                              </TableCell>\r\n                            )\r\n                          )}\r\n                        </IsMobileContext.Consumer>\r\n                        <TableCell className=\"rightCell\" />\r\n                      </TableRow>\r\n                    ) : (\r\n                      <TableRow key={i}>\r\n                        <TableCell className=\"iconCell\">\r\n                          <Icon>{inputInfo[inputKey].icon}</Icon>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {inputInfo[inputKey].label}\r\n                          {inputInfo[inputKey].tooltip && (\r\n                            <Tooltip title={inputInfo[inputKey].tooltip} disableFocusListener disableTouchListener>\r\n                              <Icon className=\"tooltipIcon\">help</Icon>\r\n                            </Tooltip>\r\n                          )}\r\n                          :\r\n                        </TableCell>\r\n                        <TableCell className=\"value\">\r\n                          {\r\n                            inputInfo[inputKey].type === \"boolean\" ? (\r\n                              <Switch\r\n                                color=\"primary\"\r\n                                checked={this.state.inputs[inputKey]}\r\n                                onChange={this.handleInputChange.bind(this, inputKey)}\r\n                                aria-label={inputInfo[inputKey].label}\r\n                              />\r\n                            ) : (\r\n                              <Input\r\n                                value={\r\n                                  (inputInfo[inputKey].type === \"percentage\" && this.state.inputs[inputKey] !== \"%\") ? (\r\n                                    this.state.inputs[inputKey] * 100 + \"%\"\r\n                                  ) : (this.state.inputs[inputKey])\r\n                                }\r\n                                onChange={this.handleInputChange.bind(this, inputKey)}\r\n                                error={this.state.showErrors[inputKey]}\r\n                                aria-label={inputInfo[inputKey].label}\r\n                              />\r\n                            )\r\n                          }\r\n                        </TableCell>\r\n                        <TableCell className=\"rightCell\" />\r\n                      </TableRow>\r\n                    )\r\n                  ))}\r\n                </React.Fragment>\r\n              )\r\n            })}\r\n            <TableRow>\r\n              <TableCell colSpan={4}>\r\n                <Grid\r\n                  container\r\n                  alignItems='baseline'\r\n                  justify=\"space-around\"\r\n                >\r\n                  <Grid>\r\n                    <Button\r\n                      onClick={this.save}\r\n                      variant=\"contained\"\r\n                      color=\"primary\">\r\n                      Save\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid>\r\n                    <Button\r\n                      onClick={this.resetToDefault}\r\n                      variant=\"contained\">\r\n                      Reset to default\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withDefaultColorsEditing(Settings)\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './css/About.css'\r\n\r\nconst About = props => (\r\n  <div className=\"container\">\r\n    <Typography variant=\"h4\" className=\"h-1\">\r\n      Welcome to Mind Your Time\r\n    </Typography>\r\n    <p className=\"summary\">\r\n      Mind Your Time is a platform that aims to tackle a complex issue in a simplistic way\r\n    </p>\r\n    <p>\r\n      Do you ever have trouble realistically planning out your day and then actually executing the plan?\r\n      <br/>\r\n      Mind Your Time is here to help.\r\n    </p><p>\r\n      The idea here is simple. Plan your day and then check if you're still on schedule.\r\n      Write down when you're gonna do what and how long it's gonna take.\r\n      Then periodically check if you're making the progress you should be making.\r\n    </p><p>\r\n      Like I said, the idea is simple but if you truly follow it, I promise your productivity will skyrocket.\r\n      Starting right now.\r\n    </p><p>\r\n      It seems easy but if you've ever really tried doing it, you probably know it isn't.\r\n      There are a ton of distractions. All the time. That is why we're introducing buffer times.\r\n    </p>\r\n    <div id=\"#bufferTimes\">\r\n      <Typography variant=\"h5\" className=\"h-2\">\r\n        Buffer Times\r\n      </Typography>\r\n      <p className=\"summary\">\r\n        Buffer times are essential to making a realistic plan\r\n      </p><p>\r\n        You may have noticed that whenever you set out to do something, something else always comes up and requires your full attention.\r\n        Like your cat walking over your keyboard. Or your coffee mug spilling.\r\n        Or a billion other things that you simply cannot foresee.\r\n        By the time you come back, your entire day's plan is thrown into disarray.\r\n      </p><p>\r\n        In order to be truly productive, you need to expect the unexpected.\r\n        We take care of that for you.\r\n      </p><p>\r\n        Buffer times are the solution. They are short breaks that we automatically insert after each planned project.\r\n        Their length is proportional to the length of the previous project - about 20% of the project's length by default.\r\n        (Note that this can be changed in the settings)\r\n        These little breaks in your schedule aren't primarily meant as breaks though.\r\n        Instead, their job is to compansate for the distractions that happen while you're working on the previous project.\r\n        Ideally when you actually execute your plan, these little breaks should disappear.\r\n        However, if they don't feel free to rest for a little while - whatever works for you.\r\n      </p><p>\r\n        Of course if you feel like you need more breaks in your schedule, you can insert them in using our breaks editor.\r\n        You could also increase the buffer time percentage in the settings\r\n        but note that this comes at a price - a slight but measurable decrease in productivity.\r\n        On the other hand, if you want to aim for even higher productivity, you can decrease the percentage\r\n        but then you run the risk of your plan being too ideallistic and falling apart.\r\n      </p><p>\r\n        At the end of the day, your buffer times need to be balanced and that balance can only be accomplished by trial and error.\r\n        So feel free to experiment with the percentage if you feel it can make the app work better for you.\r\n      </p>\r\n    </div>\r\n    <div id=\"#aboutMe\">\r\n      <Typography variant=\"h5\" className=\"h-2\">\r\n        About me\r\n      </Typography>\r\n      <p>\r\n        I've experimented with a lot of different productivity/time-management systems over the years.\r\n        At the end I developed a fairly simple system - writing down what I want to do today and when exactly I wanna do it.\r\n        Sounds simple, I know, but it truly improved my productivity by a lot.\r\n        The problem was that I couldn't find an app to use for this so I just had write it down on my whiteboard.\r\n        (Yes, I actually have a whiteboard in my bedroom. Go ahead, judge me.)\r\n      </p><p>\r\n        This was pretty annoying so of course: I'm the kind of guy that needs everything on a screen so I didn't do it every day.\r\n        And so a while later, I decided to create Mind Your Time.\r\n        At first, it was just as a way off to show my skills to employers and organize my own time,\r\n        only later did I realize that it could actually be really useful to other people as well.\r\n      </p><p>\r\n        I really hope you find this app useful and that it helps you with whatever you set out to do.\r\n        If you find any problems, get an idea for a new feature you'd like to see or just want to send me anything at all, here's my contact info:\r\n      </p>\r\n      <div id=\"#contact\">\r\n        <Typography variant=\"h6\">\r\n          Contact\r\n        </Typography>\r\n        <a href=\"https://goo.gl/forms/jdesExEMegbkLPjp2\" target=\"_blank\" rel=\"noopener noreferrer\">Feedback form</a> (you can submit feedback here or via email, whichever you prefer)\r\n        <br/>\r\n        Email: <a href=\"mailto:michaelfarnik@gmail.com\">michaelfarnik@gmail.com</a>\r\n        <br/>\r\n        GitHub: <a href=\"https://github.com/michaloslav\">Michael Farník</a>\r\n        <br/>\r\n        LinkedIn: <a href=\"https://www.linkedin.com/in/michael-farn%C3%ADk-13002b168/\">Michael Farník</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport ColorPicker from '../ColorPicker'\r\nimport BackButton from './BackButton'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport withDefaultColorsEditing from '../HOCs/withDefaultColorsEditing'\r\n\r\n// editing the default colors of projects\r\nconst SettingsDefaultColors = props => (\r\n  <div className=\"SettingsDefaultColors container\">\r\n    <BackButton onClick={() => {props.history.push(\"/settings/\")}} />\r\n    <Table>\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell colSpan={2}>\r\n            <Typography variant=\"h6\">\r\n              Default colors:\r\n            </Typography>\r\n          </TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {props.settings.defaultColors && props.settings.defaultColors.map((color, i) => (\r\n          <TableRow key={i}>\r\n            <TableCell>\r\n              <ColorPicker\r\n                value={color}\r\n                onChange={props.onDefaultColorChange.bind(this, i)}\r\n                xl\r\n              />\r\n            </TableCell>\r\n            <TableCell>\r\n              <Button\r\n                aria-label=\"Remove the color\"\r\n                className=\"removeDefaultColor\"\r\n                disableRipple={true}\r\n                onClick={props.removeDefaultColor.bind(this, i)}>\r\n                <RemoveIcon />\r\n                Remove\r\n              </Button>\r\n            </TableCell>\r\n          </TableRow>\r\n        ))}\r\n        <TableRow>\r\n          <TableCell colSpan={2}>\r\n            <Grid container justify=\"space-around\">\r\n              <Button\r\n                onClick={props.addDefaultColor}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n              >\r\n                <AddIcon />\r\n                Add\r\n              </Button>\r\n              <Button\r\n                onClick={() => {props.save(); props.history.push(\"/settings/\")}}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n              >\r\n                Save\r\n              </Button>\r\n            </Grid>\r\n          </TableCell>\r\n        </TableRow>\r\n      </TableBody>\r\n    </Table>\r\n  </div>\r\n)\r\n\r\nexport default withDefaultColorsEditing(SettingsDefaultColors)\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\n// a simple arrow acon that takes us back to \"/\"\r\nconst LinkToRoot = props => (\r\n  <Link className=\"LinkToRoot\" to=\"/\" aria-label=\"Back\">\r\n    <ArrowBackIcon />\r\n  </Link>\r\n)\r\n\r\nexport default LinkToRoot\r\n","import React, { Component } from 'react'\r\nimport DevOptions from './DevOptions'\r\nimport GoogleSignIn from './signIn/GoogleSignIn';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport GoogleIcon from './signIn/GoogleIcon'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { withRouter } from \"react-router\";\r\nimport getGetParams from './util/getGetParams'\r\nimport './css/DrawerMenu.css'\r\n\r\nclass DrawerMenu extends Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n    let state = this.checkActive(true)\r\n\r\n    this.state = {\r\n      planningCollapseOpen: false,\r\n      ...state\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    // set the timeout of checkActive (only if it isn't set already)\r\n    // this makes sure that the component always knows which view the user is in but...\r\n    // also prevents it from being displayed while the drawer is closing which wouldn't look good\r\n    if(!this.state.checkActiveTimeout){\r\n      this.setState({\r\n        checkActiveTimeout: setTimeout(() => {\r\n          this.checkActive()\r\n          this.setState({checkActiveTimeout: null})\r\n        }, 500)\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    // prevents memory leaks\r\n    let { checkActiveTimeout } = this.state\r\n    clearTimeout(checkActiveTimeout)\r\n    this.setState({checkActiveTimeout})\r\n  }\r\n\r\n  signIn = tokenId => {\r\n    this.props.close()\r\n    this.props.connect(tokenId)\r\n  }\r\n\r\n  signOut = () => {\r\n    this.props.close()\r\n    this.props.disconnect();\r\n  }\r\n\r\n  navigate(to){\r\n    this.props.history.push(\"/\" + to)\r\n    this.props.close()\r\n  }\r\n\r\n  // \"planning\" or \"working\"\r\n  modeSwitch(mode){\r\n    this.props.changeMode(mode)\r\n    if(this.props.location.pathname !== \"/\") this.props.history.push(\"/\")\r\n    this.props.close()\r\n  }\r\n\r\n  togglePlanningCollapse = e => {\r\n    e.stopPropagation()\r\n    this.setState({planningCollapseOpen: !this.state.planningCollapseOpen})\r\n    this.props.setNavbarState({planningCollapseOpenExplicit: true})\r\n  }\r\n\r\n  // find out which view is currently active\r\n  // the argument means that we won't call setState but will instead return the value\r\n  checkActive = (returnDontUpdate = false) => {\r\n    let active\r\n    let pathname = this.props.location.pathname\r\n\r\n    // if we're at the root, we care about whether we are planning or working\r\n    if(pathname === \"/\") active = this.props.mode\r\n    else{\r\n      let pathname0 = this.props.location.pathname.split(\"/\")[1]\r\n\r\n      // if we're adding or editing something, we care about what that something is (a project, break or a defaultProject?)\r\n      if(pathname0 === \"add\" || pathname0 === \"edit\"){\r\n        let { type } = getGetParams(this.props.location.search)\r\n        switch(type){\r\n          case \"default\":\r\n            active = \"defaultProjects\"\r\n            break\r\n          case \"break\":\r\n            active = \"breaks\"\r\n            break\r\n          default:\r\n            active = \"planning\"\r\n        }\r\n      }\r\n      // else use the pathname (eg. settings)\r\n      else active = pathname0\r\n    }\r\n\r\n    // determine if we should open the Collapse by default or not\r\n    let planningCollapseOpen = (active === \"planning\" || active === \"breaks\" || active === \"defaultProjects\")\r\n\r\n    // if the function call wants us to return instead of calling setState, do so\r\n    if(returnDontUpdate) return {active, planningCollapseOpen}\r\n\r\n    // check if there's anything to be updated, if there is, call setState\r\n    let newState = {}\r\n    if(active !== this.state.active) newState.active = active\r\n    if(\r\n      planningCollapseOpen !== this.state.planningCollapseOpen &&\r\n      !this.props.planningCollapseOpenExplicit\r\n    ){\r\n      newState.planningCollapseOpen = planningCollapseOpen\r\n    }\r\n    if(Object.keys(newState).length) this.setState(newState)\r\n  }\r\n\r\n  render = () => (\r\n    <List>\r\n      <ListItem button onClick={this.modeSwitch.bind(this, \"planning\")}>\r\n        <ListItemIcon>\r\n          <TodayIcon color={this.state.active === \"planning\" ? \"primary\" : undefined} />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Planning\" />\r\n        <IconButton\r\n          onClick={this.togglePlanningCollapse}\r\n          style={{padding: 0}}\r\n        >\r\n          {this.state.planningCollapseOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n        </IconButton>\r\n      </ListItem>\r\n      <Collapse in={this.state.planningCollapseOpen} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          {[\r\n            {\r\n              title: \"Breaks\",\r\n              icon: <PauseIcon color={this.state.active === \"breaks\" ? \"primary\" : undefined} />,\r\n              onClick: this.navigate.bind(this, \"breaks\")\r\n            },\r\n            {\r\n              title: \"Repetitive projects\",\r\n              icon: <AutorenewIcon color={this.state.active === \"defaultProjects\" ? \"primary\" : undefined} />,\r\n              onClick: this.navigate.bind(this, \"defaultProjects\")\r\n            }\r\n          ].map(el => (\r\n            <ListItem key={el.title} button onClick={el.onClick} style={{paddingLeft: \"2rem\"}}>\r\n              <ListItemIcon children={el.icon} />\r\n              <ListItemText inset primary={el.title} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Collapse>\r\n      {\r\n        [\r\n          {\r\n            title: \"Working\",\r\n            icon: <WorkIcon color={this.state.active === \"working\" ? \"primary\" : undefined} />,\r\n            onClick: this.modeSwitch.bind(this, \"working\")\r\n          },\r\n          {\r\n            title: \"Settings\",\r\n            icon: <SettingsIcon color={this.state.active === \"settings\" ? \"primary\" : undefined} />,\r\n            onClick: this.navigate.bind(this, \"settings\")\r\n          },\r\n          {\r\n            title: \"About\",\r\n            icon: <HelpIcon color={this.state.active === \"about\" ? \"primary\" : undefined} />,\r\n            onClick: this.navigate.bind(this, \"about\")\r\n          }\r\n        ].map(el => (\r\n          <ListItem key={el.title} button onClick={el.onClick}>\r\n            <ListItemIcon children={el.icon} />\r\n            <ListItemText primary={el.title} />\r\n          </ListItem>\r\n        ))\r\n      }\r\n      {\r\n        this.props.loggedIn ? (\r\n          <ListItem button onClick={this.signOut}>\r\n            <ListItemIcon>\r\n              <CloseIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Sign Out\" />\r\n          </ListItem>\r\n        ) : (\r\n          <GoogleSignIn connect={this.signIn} render={renderProps => (\r\n            <ListItem button onClick={renderProps.onClick}>\r\n              <ListItemIcon>\r\n                <GoogleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Sign In\" />\r\n            </ListItem>\r\n          )} />\r\n        )\r\n      }\r\n      {\r\n        localStorage.devUnlocked && (\r\n          <DevOptions\r\n            data={this.props.data}\r\n            update={this.props.update}\r\n            showAsListItem\r\n          />\r\n        )\r\n      }\r\n    </List>\r\n  )\r\n}\r\n\r\nexport default withRouter(DrawerMenu)\r\n","import React, { Component } from 'react';\r\nimport DrawerMenu from './DrawerMenu'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport TimeStats from './TimeStats'\r\nimport './css/Navbar.css'\r\n\r\n// the mobile navbar\r\nexport default class Navbar extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      drawerOpen: false, // this opens/closes the swipeable \"menu\" on the left\r\n      planningCollapseOpenExplicit: false\r\n    }\r\n  }\r\n\r\n  open = () => {\r\n    this.setState({drawerOpen: true})\r\n  }\r\n\r\n  close = () => {\r\n    this.setState({\r\n      drawerOpen: false,\r\n      planningCollapseOpenExplicit: false\r\n    })\r\n  }\r\n\r\n  render = () => (\r\n    <React.Fragment>\r\n      <AppBar id=\"Navbar\">\r\n        <Toolbar>\r\n            <IconButton\r\n              id=\"openDrawerMenuButton\"\r\n              aria-label=\"Menu\"\r\n              onClick={this.state.drawerOpen ? this.close : this.open}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Grid\r\n              id=\"TimeStatsContainer\"\r\n              container\r\n              alignItems='baseline'\r\n              justify=\"space-between\">\r\n            <TimeStats\r\n              currentTime={this.props.currentTime}\r\n              onCurrentTimeChange={this.props.onCurrentTimeChange}\r\n              endTime={this.props.data.endTime}\r\n              projects={this.props.data.projects}\r\n              breaks={this.props.data.breaks}\r\n              settings={this.props.data.settings}\r\n              startTime={this.props.data.startTime}\r\n              realEndTime={this.props.data.realEndTime}\r\n              shortLabels\r\n            />\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <SwipeableDrawer\r\n        id=\"DrawerMenu\"\r\n        open={this.state.drawerOpen}\r\n        onOpen={this.open}\r\n        onClose={this.close}\r\n      >\r\n        <DrawerMenu\r\n          connect={this.props.connect}\r\n          disconnect={this.props.disconnect}\r\n          loggedIn={this.props.loggedIn}\r\n          mode={this.props.data.mode}\r\n          changeMode={this.props.changeMode}\r\n          setNavbarState={this.setState.bind(this)}\r\n          close={this.close}\r\n          planningCollapseOpenExplicit={this.state.planningCollapseOpenExplicit}\r\n          data={localStorage.devUnlocked ? this.props.data : {}}\r\n          update={this.props.update}\r\n        />\r\n      </SwipeableDrawer>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport './css/Footer.css'\r\n\r\nconst Footer = props => (\r\n  <footer>\r\n    Created by <a href=\"https://github.com/michaloslav\">Michael Farník</a>\r\n    <span> | </span>\r\n    <a href=\"https://goo.gl/forms/jdesExEMegbkLPjp2\" target=\"_blank\" rel=\"noopener noreferrer\">Feedback</a>\r\n    <span> | </span>\r\n    <HashLink to=\"/about#contact\">Contact</HashLink>\r\n    <div>\r\n      Icon made by <a href=\"https://www.flaticon.com/authors/kiranshastry\" title=\"Kiranshastry\" target=\"_blank\" rel=\"noopener noreferrer\">Kiranshastry</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\" target=\"_blank\" rel=\"noopener noreferrer\">www.flaticon.com</a> is licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\" title=\"Creative Commons BY 3.0\" target=\"_blank\" rel=\"noopener noreferrer\">CC 3.0 BY</a>\r\n    </div>\r\n  </footer>\r\n)\r\n\r\nexport default Footer\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport App from \"./App\"\r\nimport Settings from \"./Settings\"\r\nimport About from \"./About\"\r\nimport SettingsDefaultColors from \"./MobileViews/SettingsDefaultColors\"\r\nimport LinkToRoot from './LinkToRoot'\r\nimport Navbar from \"./Navbar\"\r\nimport Footer from \"./Footer\"\r\nimport { defaultSettings } from './util/defaultValues'\r\nimport { IsMobileContext } from './_Context'\r\n\r\nexport default class extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      width: window.innerWidth, // used to determine if we should show the desktop or mobile UI\r\n      currentTime: {\r\n        h: 0,\r\n        m: 0,\r\n        pm: true,\r\n        defaultVal: true // this means this isn't a real value, just a placeholder\r\n      },\r\n      showErrors: {}\r\n    }\r\n  }\r\n  componentWillMount(){\r\n    // when the user resizes the window, we need to check if we should still use the desktop/mobile UI or switch to the other one\r\n    window.addEventListener(\"resize\", () => {\r\n      this.setState({width: window.innerWidth})\r\n    })\r\n  }\r\n\r\n  // these methods are necessary for letting these child components access props\r\n  AppWithProps = props => (\r\n    <App\r\n      data={this.props.data}\r\n      connect={this.props.connect}\r\n      changeMode={this.changeMode}\r\n      update={this.props.update}\r\n      disconnect={this.props.disconnect}\r\n      loggedIn={this.props.loggedIn}\r\n      disconnected={this.props.disconnected}\r\n      currentTime={this.state.currentTime}\r\n      showErrors={this.state.showErrors}\r\n      changeRouterShowErrors={this.changeShowErrors}\r\n      onCurrentTimeChange={currentTime => {this.setState({currentTime})}}\r\n      {...props}\r\n    />\r\n  )\r\n\r\n  SettingsWithProps = props => (\r\n    <Settings\r\n      settings={Object.assign({}, this.props.data.settings)}\r\n      defaultSettings={defaultSettings}\r\n      update={this.props.update}\r\n      {...props}\r\n    />\r\n  )\r\n\r\n  SettingsDefaultColorsWithProps = props => (\r\n    <SettingsDefaultColors\r\n      settings={Object.assign({}, this.props.data.settings)}\r\n      save={defaultColors => {\r\n        this.props.update({settings: {...this.props.data.settings, defaultColors}})\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n\r\n  // go from \"planning\" to \"working\" and back\r\n  changeMode = val => {\r\n    // don't let the user go into work mode if there isn't an endTime or if projects are empty (+ show an error)\r\n    if(val === \"working\"){\r\n      if(this.props.data.endTime.h === \"\" || this.props.data.endTime.m === \"\"){\r\n        this.changeShowErrors(\"endTime\", true)\r\n        return\r\n      }\r\n      if(!this.props.data.projects.length){\r\n        this.changeShowErrors(\"noProjects\", true)\r\n        return\r\n      }\r\n    }\r\n\r\n    this.props.update({mode: val})\r\n  }\r\n\r\n  // an util function to DRY the code\r\n  changeShowErrors = (id, val) => {\r\n    this.setState({showErrors: {...this.state.showErrors, [id]: val}})\r\n  }\r\n\r\n  render(){\r\n    let isMobile = this.state.width < 660\r\n\r\n    return (\r\n      <Router>\r\n        {\r\n          isMobile ? (\r\n              <Navbar\r\n                data={this.props.data}\r\n                connect={this.props.connect}\r\n                changeMode={this.changeMode}\r\n                disconnect={this.props.disconnect}\r\n                loggedIn={this.props.loggedIn}\r\n                currentTime={this.state.currentTime}\r\n                onCurrentTimeChange={currentTime => {this.setState({currentTime})}}\r\n                update={localStorage.devUnlocked ? this.props.update : {}}\r\n              />\r\n            ) : (\r\n              <Switch>\r\n                <Route path=\"/(|add|edit|breaks|defaultProjects)\" exact />\r\n                <Route component={LinkToRoot} />\r\n              </Switch>\r\n          )\r\n        }\r\n        <IsMobileContext.Provider value={isMobile}>\r\n          <Switch>\r\n            <Route path=\"/settings/defaultColors/\" render={this.SettingsDefaultColorsWithProps}/>\r\n            <Route path=\"/settings/\" render={this.SettingsWithProps}/>\r\n            <Route path=\"/about/\" component={About}/>\r\n            <Route path=\"/robots.txt\" target=\"_self\" />\r\n            <Route path=\"/(|add|edit|breaks|defaultProjects)\" exact render={this.AppWithProps}/>\r\n            <Route render={() => <Redirect to=\"/\" />} />\r\n          </Switch>\r\n        </IsMobileContext.Provider>\r\n        {\r\n          isMobile ? (\r\n            <Route path=\"/about/\" component={Footer} />\r\n          ) : (\r\n            <Footer />\r\n          )\r\n        }\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n","// simple util function for checking if objects are identical\r\nexport function areIdenticalObjects(obj1, obj2){\r\n  if(!obj2) return false\r\n\r\n  let keys\r\n  if(Array.isArray(obj1)) keys = obj1.keys()\r\n  else keys = Object.keys(obj1)\r\n\r\n  for(let key of keys){\r\n    if(typeof obj1[key] === \"object\"){\r\n      if(!areIdenticalObjects(obj1[key], obj2[key])) return false\r\n    }\r\n    else if(obj1[key] !== obj2[key]) return false\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n// uses oldData first, then rewrites it using the properties of newData to make sure all the properties are represented\r\n// (in other words the newData value is always used but if a property of oldData isn't present in newData, that value is used too)\r\n// usually oldData is considerably larger, hence the algorithm design\r\nexport function mergeObjects(oldData, newData){\r\n  let mergedData = JSON.parse(JSON.stringify(oldData))\r\n  for(let [key, val] of Object.entries(newData)){\r\n    if(typeof val === \"object\" && typeof val.getTime !== \"function\"){\r\n      let oldVal = oldData[key]\r\n      if(!oldVal) oldVal = {} // handle undefined\r\n      mergedData[key] = mergeObjects(oldVal, val)\r\n    }\r\n    else mergedData[key] = val\r\n  }\r\n  return mergedData\r\n}\r\n","// shows the proper structure of the data, used for validating data to make sure nothing gets corrupted\r\n\r\nimport {defaultSettings} from './defaultValues'\r\n\r\n// define types\r\nconst numberOptional = {type: \"number\"}\r\nconst number = {type: \"number\", required: true}\r\nconst string = {type: \"string\", required: true}\r\nconst booleanOptional = {type: \"boolean\"}\r\nconst boolean = {type: \"boolean\", required: true}\r\nconst timeObjectOptional = {type: \"object\", properties: {h: number, m: number, pm: boolean, s: numberOptional}}\r\nconst timeObject = {...timeObjectOptional, required: true}\r\nconst date = {type: \"string\", isDate: true}\r\nconst array = elements => ({type: \"object\", isArray: true, elements})\r\nconst object = properties => ({type: \"object\", properties})\r\n\r\nconst projectBaseline = { // what projects and defaultProjects have in common\r\n  id: number,\r\n  name: string,\r\n  color: string,\r\n  estimatedDuration: number,\r\n  state: string,\r\n  order: numberOptional,\r\n  plannedTime: {type: \"object\", properties: {\r\n    start: timeObject,\r\n    end: timeObject\r\n  }}\r\n}\r\n\r\n// create the settings structure based on defaultSettings\r\n// the settings object only contains primitives and arrays\r\nvar settingsStructure = {}\r\nfor(let [key, val] of Object.entries(defaultSettings)){\r\n  let typeofVal = typeof val\r\n\r\n  if(typeofVal === \"object\"){\r\n    if(Array.isArray(val)){\r\n      settingsStructure[key] = array({type: typeof val[0], required: true})\r\n    }\r\n    else console.warn(\"Unhandled scenraio, settings contains an object that isn't an array\")\r\n  }\r\n  else{\r\n    settingsStructure[key] = {type: typeofVal, required: true}\r\n  }\r\n}\r\n\r\n// create the lastModifiedStructure\r\n// (each primitive has its own field, each object has its own nested object)\r\nvar lastModifiedStructure = {}\r\nconst primitivesInLastModified = [\"startTime\", \"endTime\", \"mode\", \"defaultColorIndex\",\r\n  \"defaultColorIndexDefaultProjects\", \"lastReset\", \"useDefaultProjects\"]\r\nconst projectBaselineKeys = Object.keys(projectBaseline)\r\nconst objectsInLastModified = {\r\n  projects: [...projectBaselineKeys, \"startedWorkingOnIt\", \"progress\"],\r\n  breaks: [\"id\", \"name\", \"startTime\", \"endTime\", \"autodetected\"],\r\n  defaultProjects: [...projectBaselineKeys, \"days\"],\r\n  settings: Object.keys(defaultSettings)\r\n}\r\nfor(let primitive of primitivesInLastModified){\r\n  lastModifiedStructure[primitive] = date\r\n}\r\nfor(let [key, val] of Object.entries(objectsInLastModified)){\r\n  let properties = {}\r\n\r\n  for(let property of val){\r\n    // id is required\r\n    if(property === \"id\") properties.id = {...date, required: true}\r\n    // other fields are optional\r\n    else properties[property] = date\r\n  }\r\n\r\n  if(key === \"settings\") lastModifiedStructure[key] = object(properties)\r\n  else{\r\n    lastModifiedStructure[key] = object({\r\n      __any__: object(properties)\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const correctDataStructure = {\r\n  projects: array(object({\r\n    ...projectBaseline,\r\n    startedWorkingOnIt: timeObjectOptional,\r\n    progress: numberOptional\r\n  })),\r\n  breaks: array(object({\r\n    id: number,\r\n    name: string,\r\n    startTime: timeObject,\r\n    endTime: timeObject,\r\n    autodetected: booleanOptional\r\n  })),\r\n  defaultProjects: array(object({\r\n    ...projectBaseline,\r\n    days: array(boolean)\r\n  })),\r\n  settings: object(settingsStructure),\r\n  startTime: timeObject,\r\n  endTime: timeObject,\r\n  mode: string,\r\n  defaultColorIndex: number,\r\n  defaultColorIndexDefaultProjects: number,\r\n  lastReset: string,\r\n  useDefaultProjects: boolean,\r\n  productivityPercentages: object({__any__: numberOptional}),\r\n  realEndTime: date,\r\n  lastModified: object(lastModifiedStructure)\r\n}\r\n","import {mergeObjects} from './objectUtil'\r\nimport {correctDataStructure} from './correctDataStructure'\r\nimport {defaultSettings} from './defaultValues'\r\n\r\n// since we are using recursive functions, the lastModified property usually isn't available\r\n// these sysNotes let the algorithm create notes for itself as to which fields were updated and therefore need a new lastModified field\r\n// since sysNotes can be nested, the function needs to work recursively\r\nfunction lastModifiedSysNoteToDates(sysNote){\r\n  var lastModified = {}\r\n  Object.entries(sysNote).forEach(([key, val]) => {\r\n    if(typeof val === \"object\") lastModified[key] = lastModifiedSysNoteToDates(val)\r\n    else lastModified[key] = new Date()\r\n  })\r\n  return lastModified\r\n}\r\n\r\n// in each function call, we only need a certain setion of the correctDataStructure\r\n// this function finds and returns that section\r\nfunction getCorrectDataStructureSection(keys){\r\n  if(typeof keys === \"string\") console.warn(\"Keys must be an array!\")\r\n\r\n  // this error message is used if the section cannot be found\r\n  var warningMessage = `Incorrect property detected in data: ${keys.join(\".\")} should not be defined`\r\n\r\n  try{\r\n    var result = keys.reduce((section, key) => section[key], correctDataStructure)\r\n  }\r\n  catch(e){\r\n    console.warn(warningMessage)\r\n    console.warn(e)\r\n  }\r\n  if(!result) console.warn(warningMessage)\r\n\r\n  return result\r\n}\r\n\r\n// esentially just checks if the given primitive is the type it's supposed to be\r\nfunction validatePrimitive(keys, val){\r\n  var correctDataStructureSection = getCorrectDataStructureSection(keys)\r\n  if(!correctDataStructureSection) return\r\n\r\n  let expectedType = correctDataStructureSection.type\r\n  let actualType = typeof val\r\n\r\n  if(correctDataStructureSection.isDate){\r\n    if(\r\n      (actualType === \"string\" && !isNaN(new Date(val).getTime())) ||\r\n      (actualType === \"object\" && !isNaN(val.getTime()))\r\n    ) return val\r\n    else{\r\n      if(actualType === \"undefined\") return\r\n      console.warn(`Incorrect type or invalid date detected: ${keys.join(\".\")} is '${val}' (of type ${actualType}) which isn't a valid date`)\r\n      return\r\n    }\r\n  }\r\n\r\n  if(expectedType === actualType ||\r\n    (// allow numbers to be in the form of a string\r\n      expectedType === \"number\" &&\r\n      actualType === \"string\" &&\r\n      !isNaN(parseFloat(val))\r\n    ) ||\r\n    ( // dates can be objects too\r\n      expectedType === \"string\" &&\r\n      correctDataStructureSection.isDate &&\r\n      actualType === \"object\" &&\r\n      val instanceof Date\r\n    )\r\n  ) return val\r\n  else{\r\n    if(actualType === \"undefined\") return // if the value is undefined and we're returning undefined, there's no need for a warning\r\n    console.warn(`Incorrect type detected in data: ${keys.join(\".\")} is '${val}' which is of type ${actualType}, should be of type ${expectedType}`)\r\n  }\r\n}\r\n\r\n// is used recursively for nested objects, eventually calls validatePrimitive to handle the actual type checking\r\nfunction validateObject(keys, val){\r\n  var correctedVal\r\n\r\n  var correctDataStructureSection = getCorrectDataStructureSection(keys)\r\n  if(!correctDataStructureSection) return\r\n\r\n  if(correctDataStructureSection.isArray){\r\n    correctedVal = []\r\n\r\n    // if it's supposed to be an array and isn't, something went wrong\r\n    if(!Array.isArray(val)) return\r\n\r\n    for(let el of val){\r\n      if(typeof el === \"object\"){\r\n        correctedVal.push(validateObject([...keys, \"elements\"], el))\r\n      }\r\n      else{\r\n        correctedVal.push(validatePrimitive([...keys, \"elements\"], el))\r\n      }\r\n    }\r\n  }\r\n  else{\r\n    correctedVal = {}\r\n\r\n    for(let [objKey, objVal] of Object.entries(val)){\r\n\r\n      // get the expectedType (first try the key, then __any__, if both fails, throw an error)\r\n      // (__any__ is used for objects that can have any property names)\r\n      let expectedType, keyToPass\r\n      if(correctDataStructureSection.properties[objKey]){\r\n        expectedType = correctDataStructureSection.properties[objKey].type\r\n        keyToPass = objKey // gets passed down to the next validateObject call to let it get the correctDataStructureSection\r\n      }\r\n      else{\r\n        if(correctDataStructureSection.properties.__any__){\r\n          expectedType = correctDataStructureSection.properties.__any__.type\r\n          keyToPass = \"__any__\"\r\n        }\r\n        else{\r\n          console.warn(`Incorrect property in data: ${keys.join(\".\")}.${objKey} should not be defined `)\r\n          continue\r\n        }\r\n      }\r\n\r\n      // if we're dealing with an object, call the function again recursively\r\n      // else validate the types via validatePrimitive\r\n      if(expectedType === \"object\"){\r\n        correctedVal[objKey] = validateObject([...keys, \"properties\", keyToPass], objVal)\r\n\r\n        // after the object is validated, check if it has a sysNote (explained above)\r\n        // if so, pass it up\r\n        // (in other word take it from the validated object and put it into the object that will eventually be returned\r\n        // to make sure all the sysNotes are in 1 place)\r\n        if(correctedVal[objKey] && correctedVal[objKey].__lastModifiedSysNote){\r\n          if(!correctedVal.__lastModifiedSysNote) correctedVal.__lastModifiedSysNote = {}\r\n          correctedVal.__lastModifiedSysNote[objKey] = correctedVal[objKey].__lastModifiedSysNote\r\n          delete correctedVal[objKey].__lastModifiedSysNote\r\n        }\r\n      }\r\n      else{\r\n        correctedVal[objKey] = validatePrimitive([...keys, \"properties\", keyToPass], objVal)\r\n      }\r\n    }\r\n\r\n    // check for missing required values\r\n    for(let [propertyKey, propertyVal] of Object.entries(correctDataStructureSection.properties)){\r\n      if(propertyVal.required && typeof val[propertyKey] === \"undefined\"){\r\n        console.warn(`Property missing in data: ${keys.join(\".\")}.${propertyKey} is not defined`)\r\n\r\n        // figure out what property to use\r\n        // (currently only used if the missing property is in the settings, then the default value gets used)\r\n        let propertyValToSet\r\n        if(keys.length === 1 && keys[0] === \"settings\") propertyValToSet = defaultSettings[propertyKey]\r\n\r\n        if(typeof propertyValToSet !== \"undefined\"){\r\n          console.log(`${keys.join(\".\")}.${propertyKey} automatically set to ${propertyValToSet}`)\r\n          correctedVal[propertyKey] = propertyValToSet\r\n\r\n          if(!correctedVal.__lastModifiedSysNote) correctedVal.__lastModifiedSysNote = {}\r\n          correctedVal.__lastModifiedSysNote[propertyKey] = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return correctedVal\r\n}\r\n\r\n// the validator itself only calls the other functions, all functionality is handled in a function-oriented fashion\r\nexport default function dataValidation(data){\r\n  var correctedData = {}\r\n\r\n  for(let [key, val] of Object.entries(data)){\r\n    if(!correctDataStructure[key]){\r\n      console.warn(`Incorrect key in data: ${key}`)\r\n      continue\r\n    }\r\n    if(correctDataStructure[key].type === \"object\"){\r\n      correctedData[key] = validateObject([key], val)\r\n\r\n      // the sysNotes (see lastModifiedSysNoteToDates) are passed up the same way as in validateObject (see above)\r\n      if(correctedData[key].__lastModifiedSysNote){\r\n        if(!correctedData.__lastModifiedSysNote) correctedData.__lastModifiedSysNote = {}\r\n        correctedData.__lastModifiedSysNote[key] = correctedData[key].__lastModifiedSysNote\r\n        delete correctedData[key].__lastModifiedSysNote\r\n      }\r\n    }\r\n    else correctedData[key] = validatePrimitive([key], val)\r\n  }\r\n\r\n  // finally convert the sysNotes (see lastModifiedSysNoteToDates) are converted into dates in lastModified\r\n  if(correctedData.__lastModifiedSysNote){\r\n    let newLastModifiedItems = lastModifiedSysNoteToDates(correctedData.__lastModifiedSysNote)\r\n    delete correctedData.__lastModifiedSysNote\r\n\r\n    if(!correctedData.lastModified) correctedData.lastModified = newLastModifiedItems\r\n    else correctedData.lastModified = mergeObjects(correctedData.lastModified, newLastModifiedItems)\r\n  }\r\n\r\n  return correctedData\r\n}\r\n","import React, { Component } from 'react';\r\nimport Router from './Router'\r\nimport TimeCalc, { setTimesForProjects } from './util/TimeCalc'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport * as SocketIOClient from 'socket.io-client'\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport green from '@material-ui/core/colors/green';\r\nimport { defaultDataValues } from './util/defaultValues'\r\nimport makeNewId from './util/makeNewId'\r\nimport dataValidation from './util/dataValidation'\r\nimport {areIdenticalObjects, mergeObjects} from './util/objectUtil'\r\nimport './css/themes.css'\r\n\r\nconst lightTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#039be5',\r\n    },\r\n    secondary: green\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  }\r\n})\r\n\r\nconst darkTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#039be5',\r\n    },\r\n    secondary: green,\r\n    type: \"dark\"\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  }\r\n})\r\n\r\n// takes care of all data operations (loading, saving, syncing) as well as signing in/out\r\nexport default class DataSync extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      projects: [],\r\n      settings: {},\r\n      lastModified: {},\r\n      temp: {}\r\n    }\r\n\r\n    /*this.io = SocketIOClient.connect('localhost:3000')\r\n    console.warn(\"connecting to localhost\");*/\r\n    this.io = SocketIOClient.connect('https://mind-your-time-server.herokuapp.com')\r\n\r\n    // check if the user is offline (first give the sockets enough time to try to connect)\r\n    setTimeout(() => {\r\n      if(this.io.disconnected){ // if connection failed\r\n        console.warn(\"Can't connect to server\");\r\n\r\n        let temp = this.state.temp\r\n        temp.disconnected = true\r\n        // show an error if the user is logged in\r\n        if(this.state.accessToken) temp.showDisconnectedError = true\r\n\r\n        this.setState({temp})\r\n      }\r\n    }, 500)\r\n\r\n    // the SocketIO init event\r\n    this.io.on(\"connect\", data => {\r\n      // if the user was previously disconnected and they're logged in, connect them\r\n      if(!this.state.temp.successfulConnectInit && this.state.temp.disconnected && this.state.accessToken){\r\n        let localData\r\n\r\n        // if the initil connection wasn't successful or if there have been updates while the user was disconnected...\r\n        if(!this.state.temp.successfulConnectInit || this.state.temp.updatedWhileDisconnected){\r\n          // gather all the relevant data\r\n          let {accessToken, temp, ...data} = this.state\r\n          localData = data\r\n        }\r\n        else localData = {}\r\n\r\n        // send the initial connect event to the server\r\n        this.io.emit(\"connectInit\", {\r\n          type: \"accessToken\", accessToken: this.state.accessToken, localData\r\n        })\r\n      }\r\n\r\n      // hide the errors\r\n      let temp = this.state.temp\r\n      temp.disconnected = false\r\n      temp.showDisconnectedError = false\r\n      clearTimeout(temp.showDisconnectedErrorTimeout)\r\n\r\n      this.setState({temp})\r\n    })\r\n\r\n    // if the user goes offline/server stops responding\r\n    this.io.on(\"disconnect\", data => {\r\n      let temp = this.state.temp\r\n      temp.disconnected = true\r\n      // show an error if the user is logged in\r\n      // (after a reasonable amount of time so that the client can try to reconnect)\r\n      if(this.state.accessToken) temp.showDisconnectedErrorTimeout = setTimeout(() => {\r\n        this.setState({temp: {...this.state.temp, showDisconnectedError: true}})\r\n      }, 1500)\r\n      this.setState({temp})\r\n    })\r\n\r\n    // this event simply lets the client side know that everything went ok on the server\r\n    // in the case of the login events, it also sends along an accessToken which is used the next time when connecting to the server\r\n    this.io.on(\"success\", data => {\r\n      // login\r\n      if(data.type === \"connectInsert\" || data.type === \"connectUpdate\"){\r\n        // store the accessToken (in the localStorage for lack of a better place)\r\n        localStorage.accessToken = data.accessToken\r\n\r\n        this.setState({\r\n          accessToken: data.accessToken,\r\n          temp: {...this.state.temp, successfulConnectInit: true}\r\n        })\r\n      }\r\n\r\n      // logout\r\n      if(data.type === \"disconnect\"){\r\n        // remove the accessToken\r\n        delete localStorage.accessToken\r\n        this.setState({accessToken: undefined})\r\n      }\r\n    })\r\n\r\n    // if there was an error, show a warning in the console\r\n    this.io.on(\"errorU\", data => {\r\n      console.warn(\"error\", data);\r\n\r\n      // if the accessToken is invalid, we should remove it to sign out the user\r\n      // (we don't want the client side thinking it's still logged in if it's credentials are invalid)\r\n      if(data.type === \"invalidAccessToken\"){\r\n        delete localStorage.accessToken\r\n        this.setState({accessToken: undefined})\r\n      }\r\n    })\r\n\r\n    // if the server sent new data, use the handleUpdateFromServer method to store the new data locally\r\n    this.io.on('connectUpdate', this.handleUpdateFromServer)\r\n    this.io.on('update', this.handleUpdateFromServer)\r\n  }\r\n\r\n  componentDidMount(){\r\n    // load all the data from localStorage\r\n    // these are all the keys that need to be loaded:\r\n    let objectsToLoad = [\"projects\", \"breaks\", \"defaultProjects\", \"settings\", \"startTime\", \"endTime\", \"productivityPercentages\"]\r\n    let propertiesToLoad = [\"mode\", \"defaultColorIndex\", \"defaultColorIndexDefaultProjects\", \"useDefaultProjects\", \"lastReset\", \"realEndTime\"]\r\n\r\n    let data = {}\r\n\r\n    // for objects, parse the JSON and catch any errors\r\n    objectsToLoad.forEach(el => {\r\n      try{\r\n        data[el] = JSON.parse(localStorage[el])\r\n      }\r\n      catch(e){\r\n        // set default (if data from localStorage can't be used)\r\n        data[el] = defaultDataValues[el]\r\n      }\r\n    })\r\n\r\n    // for primitives, simply load the data\r\n    propertiesToLoad.forEach(el => {\r\n      data[el] = localStorage[el] ? localStorage[el] : defaultDataValues[el]\r\n    })\r\n\r\n    // load lastModified\r\n    for(let localStorageKey of Object.keys(localStorage)){\r\n      if(localStorageKey.startsWith(\"lastModified_\")){\r\n        // set the value for an arbitrarily long path\r\n        let pathArray = localStorageKey.split(\"_\")\r\n        let pathLength = pathArray.length\r\n        let lastModifiedObj = data\r\n        for(let i = 0; i < pathLength - 1; i++){\r\n          if(!(pathArray[i] in lastModifiedObj)) lastModifiedObj[pathArray[i]] = {}\r\n          lastModifiedObj = lastModifiedObj[pathArray[i]]\r\n        }\r\n        lastModifiedObj[pathArray[pathLength - 1]] = new Date(localStorage[localStorageKey])\r\n      }\r\n    }\r\n\r\n    this.setState(data);\r\n\r\n    // if the user's logged in, connect to the server using the gathered data\r\n    (data => {\r\n      setTimeout(() => {\r\n        let {accessToken} = localStorage\r\n        if(accessToken){\r\n          if(this.io.disconnected) this.setState({accessToken})\r\n          else this.io.emit(\"connectInit\", {type: \"accessToken\", accessToken, localData: data})\r\n        }\r\n      }, 5)\r\n    }).call(this, data)\r\n  }\r\n\r\n  // logging in\r\n  connect = idToken => {\r\n    // if the user is offline or the server is down...\r\n    if(this.io.disconnected){\r\n      this.setState({temp: {...this.state.temp, showDisconnectedError: true}})\r\n      return\r\n    }\r\n\r\n    // gather localData\r\n    var {accessToken, temp, ...localData} = this.state\r\n\r\n    this.idToken = idToken\r\n\r\n    // log in\r\n    this.io.emit(\"connectInit\", {type: \"OAuth\", idToken, localData})\r\n  }\r\n\r\n  // log out\r\n  disconnect = (dontConfirm = false) => {\r\n    if(dontConfirm || window.confirm(\"Are you sure you want to sign out?\")){\r\n      // if the user is offline or the server is down...\r\n      if(this.io.disconnected){\r\n        this.setState({temp: {...this.state.temp, showDisconnectedError: true}})\r\n        return\r\n      }\r\n\r\n      this.io.emit(\"disconnectU\", {accessToken: localStorage.accessToken})\r\n    }\r\n  }\r\n\r\n  // if any data changes in the app, update the state and if logged in, send an update to the server\r\n  update = (data, changes) => {\r\n    // handle a reset\r\n    if(data.projects && !data.projects.length && this.state.projects.length){\r\n      if(data.useDefaultProjects || this.state.useDefaultProjects){\r\n        // get the current dayOfTheWeek\r\n        // (defaultProjects have the option of only being applied on certain days of the week)\r\n        let dayOfTheWeek = new Date().getDay()\r\n        // in getDay(), 0 means Sunday -> convert it so that 0 means Monday\r\n        dayOfTheWeek--\r\n        if(dayOfTheWeek < 0) dayOfTheWeek = 6\r\n\r\n        // insert the defaultProjects into projects\r\n        // (don't insert the days array, break the object reference at the same time)\r\n        data.projects = []\r\n        this.state.defaultProjects.forEach(defProj => {\r\n          let {days, ...projectToInsert} = defProj\r\n          if(!days || days[dayOfTheWeek]) data.projects.push(projectToInsert)\r\n        })\r\n\r\n        // suggest a new startTime and set the project times\r\n        let settings = data.settings || this.state.settings\r\n        let startTime = TimeCalc.add(new Date().getHours() * 60 + new Date().getMinutes(), 10)\r\n        startTime = TimeCalc.round(startTime, settings.roundTo)\r\n        data.projects = setTimesForProjects(data.projects, settings, [], startTime)\r\n\r\n        // generate a new unique ID for each project\r\n        data.projects.forEach(project => {\r\n          project.id = makeNewId(data.projects, \"projects\")\r\n        })\r\n\r\n        // set the startTime\r\n        data.startTime = startTime\r\n\r\n        var setLastModifiedOfAllProjects = true\r\n      }\r\n      else data.projects = []\r\n\r\n      // reset certain fields\r\n      data.breaks = []\r\n      data.lastReset = new Date().toISOString()\r\n      data.realEndTime = undefined\r\n\r\n      // reset lastModified\r\n      if(!data.lastModified) data.lastModified = {}\r\n      data.lastModified.projects = {}\r\n      data.lastModified.breaks = {}\r\n\r\n      // delete the project/break lastModified fields in localStorage\r\n      this.deleteObjectsLocalStorage(\"lastModified_projects_\")\r\n      this.deleteObjectsLocalStorage(\"lastModified_breaks_\")\r\n    }\r\n\r\n    // data validation (to prevent corrupted data from entering the system)\r\n    data = dataValidation(data)\r\n\r\n    // assign order to projects\r\n    for(let arrId of [\"projects\", \"defaultProjects\"]){\r\n      if(data[arrId]){\r\n        data[arrId].forEach((project, i) => {\r\n          project.order = i\r\n        })\r\n      }\r\n    }\r\n\r\n    // convert dates\r\n    if(data.realEndTime) data.realEndTime = data.realEndTime.toISOString()\r\n\r\n    // generate lastModified (used for deciding which data to use on the server side)\r\n    let lastModified = {}\r\n    Object.keys(data).forEach(el => {\r\n      switch (el) {\r\n        case \"projects\":\r\n          lastModified.projects = this.setMultipleLastModified(\r\n            data.projects,\r\n            changes && !setLastModifiedOfAllProjects ? changes.projects : undefined,\r\n            \"projects\"\r\n          )\r\n          break;\r\n        case \"breaks\":\r\n          lastModified.breaks = this.setMultipleLastModified(\r\n            data.breaks,\r\n            changes ? changes.breaks : undefined,\r\n            \"breaks\"\r\n          )\r\n          break;\r\n        case \"defaultProjects\":\r\n          lastModified.defaultProjects = this.setMultipleLastModified(\r\n            data.defaultProjects,\r\n            changes ? changes.defaultProjects : undefined,\r\n            \"defaultProjects\"\r\n          )\r\n          break;\r\n        case \"settings\":\r\n          lastModified.settings = this.state.lastModified && this.state.lastModified.settings ? this.state.lastModified.settings : {}\r\n          Object.keys(data.settings).forEach(el => {\r\n            if(data.settings[el] !== this.state.settings[el]){\r\n              lastModified.settings[el] = new Date()\r\n              localStorage[\"lastModified_settings_\" + el] = lastModified.settings[el].toISOString()\r\n            }\r\n          })\r\n          break;\r\n        case \"lastReset\":\r\n        case \"realEndTime\":\r\n          break\r\n        default:\r\n          lastModified[el] = new Date()\r\n          localStorage[\"lastModified_\" + el] = lastModified[el].toISOString()\r\n      }\r\n    })\r\n\r\n    // merge the new lastModified with the one in the state\r\n    data.lastModified = mergeObjects(this.state.lastModified, lastModified)\r\n\r\n    // set the state (merge with the current state)\r\n    this.setState(data)\r\n\r\n    // save to localStorage\r\n    for(let [key, val] of Object.entries(data)){\r\n      if(key === \"lastModified\") continue // lastModified was already saved to localStorage above\r\n\r\n      if(typeof val === \"undefined\"){\r\n        delete localStorage[key]\r\n        continue\r\n      }\r\n      if(typeof val === \"object\" && key !== \"lastReset\") localStorage[key] = JSON.stringify(val)\r\n      else localStorage[key] = val\r\n    }\r\n\r\n    // send an update to the server (if the user is logged in and online)\r\n    if(this.state.accessToken){\r\n      if(!this.io.disconnected){\r\n        // always send the lastReset along\r\n        if(!data.lastReset) data.lastReset = this.state.lastReset\r\n\r\n        // only use the relevant part of lastModified\r\n        let lastModifiedToSend = {}\r\n        for(let key of Object.keys(lastModified)) lastModifiedToSend[key] = data.lastModified[key]\r\n        data.lastModified = lastModifiedToSend\r\n\r\n        this.io.emit(\"update\", {accessToken: this.state.accessToken, data})\r\n      }\r\n      else{\r\n        this.setState({temp: {...this.state.temp, updatedWhileDisconnected: true}})\r\n      }\r\n    }\r\n  }\r\n\r\n  closeSnackbar = () => {\r\n    this.setState({\r\n      temp: {...this.state.temp, showDisconnectedError: false}\r\n    })\r\n  }\r\n\r\n  // determine which properties of a project or a break were modified, save lastModified to localStorage and return it too\r\n  /*\r\n    object = project or break\r\n    key = \"projects\" or \"breaks\"\r\n    lastModified is only the project's/break's last modified (from the state)\r\n  */\r\n  setLastModified = (object, objectId, key, lastModified) => {\r\n    // if the user deleted the object\r\n    if(!object){\r\n      lastModified = {id: new Date()}\r\n      let localStorageKey = [\"lastModified\", key, objectId, \"id\"].join(\"_\")\r\n      localStorage[localStorageKey] = lastModified.id.toISOString()\r\n\r\n      this.deleteObjectsLocalStorage([\"lastModified\", key, objectId, \"\"].join(\"_\"), localStorageKey)\r\n\r\n      return lastModified\r\n    }\r\n\r\n    // handle undefined\r\n    if(!lastModified) lastModified = {}\r\n\r\n    // find the object in the state\r\n    let stateObjectIndex = this.state[key].findIndex(el => el.id === objectId)\r\n\r\n    // loop through the properties we want to keep track of\r\n    Object.keys(object).forEach(property => {\r\n      // if it was changed...\r\n      let propertyChanged\r\n      // (if the user created a new project/break, it won't be in the state yet)\r\n      if(this.state[key][stateObjectIndex]){\r\n        if(typeof object[property] === \"object\"){\r\n          propertyChanged = !areIdenticalObjects(\r\n            object[property],\r\n            this.state[key][stateObjectIndex][property]\r\n          )\r\n        }\r\n        else propertyChanged = object[property] !== this.state[key][stateObjectIndex][property]\r\n      }\r\n      else propertyChanged = true\r\n\r\n      if(propertyChanged){\r\n        lastModified[property] = new Date()\r\n\r\n        let localStorageKey = [\"lastModified\", key, objectId, property].join(\"_\")\r\n        localStorage[localStorageKey] = lastModified[property].toISOString()\r\n      }\r\n    })\r\n\r\n    return lastModified\r\n  }\r\n\r\n  // determine which projects/breaks were modified, call setLastModified on them\r\n  /*\r\n    array = array of projects or breaks from the update method's args\r\n    lastModified is only lastModified.projects or .breaks\r\n    changedIds can be undefined\r\n    key = \"projects\" or \"breaks\"\r\n  */\r\n  setMultipleLastModified = (array, changedIds, key) => {\r\n    let lastModified = this.state.lastModified[key] // init\r\n    if(!lastModified) lastModified = {} // handle undefined\r\n\r\n    // if only a specific project/break was modified, check its fields\r\n    if(changedIds){\r\n      // handle an input with just 1 id\r\n      if(typeof changedIds !== \"object\") changedIds = [changedIds]\r\n\r\n      changedIds.forEach(changedId => {\r\n        let index = array.findIndex(object => object.id === parseInt(changedId))\r\n        let changedObject = array[index]\r\n\r\n        lastModified[changedId] = this.setLastModified(\r\n          changedObject,\r\n          changedId,\r\n          key,\r\n          lastModified[changedId]\r\n        )\r\n      })\r\n    }\r\n    // else check all projects\r\n    else{\r\n      array.forEach((object, i) => {\r\n        let objectId = object.id\r\n\r\n        lastModified[objectId] = this.setLastModified(\r\n          object,\r\n          objectId,\r\n          key,\r\n          lastModified[objectId]\r\n        )\r\n      })\r\n    }\r\n\r\n    return lastModified\r\n  }\r\n\r\n  // a util method for deleting localStorage entries tha fulfill certain criteria\r\n  deleteObjectsLocalStorage = (startsWithString, except = \"\") => {\r\n    let localStorageKeys = Object.keys(localStorage)\r\n    let relevantKeys = []\r\n    localStorageKeys.forEach(key => {\r\n      if(key.startsWith(startsWithString) && key !== except) relevantKeys.push(key)\r\n    })\r\n    relevantKeys.forEach(key => {\r\n      localStorage.removeItem(key)\r\n    })\r\n  }\r\n\r\n  // if the server sends an update, insert it into the state and save it to localStorage\r\n  handleUpdateFromServer = data => {\r\n    // merge lastModified when saving to state\r\n    this.setState({\r\n      ...data,\r\n      lastModified: {\r\n        ...this.state.lastModified,\r\n        ...data.lastModified\r\n      }\r\n    })\r\n\r\n    // save to localStorage\r\n    Object.keys(data).forEach(key => {\r\n      if(key === \"lastModified\"){\r\n        // since lastModified is a nested object, it needs to be stored more carefully\r\n        // we want to be able to modify differnt fields quickly which is why...\r\n        // it is stored as many different entries, eg. \"lastModified_project_{id}_name\"\r\n        // this part of the code handles the nested nature of the object and also converts the dates into ISO strings\r\n        Object.keys(data.lastModified).forEach(lastModifiedKey => {\r\n          if(\r\n            lastModifiedKey === \"projects\" ||\r\n            lastModifiedKey === \"breaks\" ||\r\n            lastModifiedKey ===\"defaultProjects\"\r\n          ){\r\n            for(let objectIdKey of Object.keys(data.lastModified[lastModifiedKey])){\r\n              if(\r\n                !data.lastModified[lastModifiedKey][objectIdKey] ||\r\n                typeof data.lastModified[lastModifiedKey][objectIdKey] !== \"object\"\r\n              ) continue\r\n              Object.keys(data.lastModified[lastModifiedKey][objectIdKey]).forEach(propertyKey => {\r\n                let localStorageKey = [\"lastModified\", lastModifiedKey, objectIdKey, propertyKey].join(\"_\")\r\n                let dateString = data.lastModified[lastModifiedKey][objectIdKey][propertyKey]\r\n                if(typeof dateString !== \"string\") dateString = dateString.toISOString()\r\n                localStorage[localStorageKey] = dateString\r\n              })\r\n            }\r\n          }\r\n          else{\r\n            if(lastModifiedKey === \"settings\"){\r\n              for(let settingsKey of Object.keys(data.lastModified.settings)){\r\n                let dateString = data.lastModified.settings[settingsKey]\r\n                if(!dateString) continue\r\n                let localStorageKey = \"lastModified_settings_\" + settingsKey\r\n                if(typeof dateString !== \"string\") dateString = dateString.toISOString()\r\n                localStorage[localStorageKey] = dateString\r\n              }\r\n            }\r\n            else{\r\n              let dateString = data.lastModified[lastModifiedKey]\r\n              if(dateString){\r\n                if(typeof dateString !== \"string\") dateString = dateString.toISOString()\r\n                localStorage[\"lastModified_\" + lastModifiedKey] = dateString\r\n              }\r\n            }\r\n          }\r\n        })\r\n      }\r\n      else{\r\n        // store the actual values\r\n        if(typeof data[key] === \"object\") localStorage[key] = JSON.stringify(data[key])\r\n        else localStorage[key] = data[key]\r\n      }\r\n    })\r\n  }\r\n\r\n  checkForUpdates = () => {\r\n    if(this.state.accessToken && !this.io.disconnected){\r\n      this.io.emit(\"checkForUpdates\", {accessToken: this.state.accessToken})\r\n    }\r\n  }\r\n\r\n  render(){\r\n    var {accessToken, temp, lastModified, ...data} = this.state\r\n\r\n    return (\r\n      <MuiThemeProvider theme={data.settings.darkTheme ? darkTheme : lightTheme}>\r\n        <div style={{position: \"relative\"}} onFocus={this.checkForUpdates}\r\n          className={data.settings.darkTheme ? \"darkRoot\" : \"lightRoot\"}\r\n        >\r\n          <CssBaseline />\r\n          <Router\r\n            data={data}\r\n            connect={this.connect}\r\n            update={this.update}\r\n            disconnect={this.disconnect}\r\n            loggedIn={Boolean(this.state.accessToken)}\r\n            disconnected={this.state.temp.disconnected}\r\n            checkForUpdates={this.checkForUpdates}\r\n          />\r\n          <Snackbar\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'left',\r\n            }}\r\n            open={this.state.temp.showDisconnectedError}\r\n            autoHideDuration={6000}\r\n            onClose={this.closeSnackbar}\r\n          >\r\n            <SnackbarContent\r\n              style={{backgroundColor: \"#d32f2f\"}}\r\n              aria-describedby=\"disconnectedErrorSnackbar\"\r\n              message={<span id=\"disconnectedErrorSnackbar\">We're having trouble reaching our server</span>}\r\n              action={[\r\n                <IconButton\r\n                  key=\"close\"\r\n                  aria-label=\"Close\"\r\n                  color=\"inherit\"\r\n                  styles={{padding: \".5rem\"}}\r\n                  onClick={this.closeSnackbar}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              ]}\r\n            />\r\n          </Snackbar>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'core-js'; // polyfill\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport DataSync from './DataSync';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<DataSync />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}
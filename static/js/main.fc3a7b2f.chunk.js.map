{"version":3,"sources":["MobileViews/BackButton.js","util/TimeCalc.js","TimeSetterDesktop.js","TimeSetterMobile.js","_Context.js","TimeSetter.js","ColorPicker.js","MobileViews/MobileInputFields.js","util/validation.js","HOCs/withInputFields.js","HOCs/withAdd.js","MobileViews/AddProjectView.js","MobileViews/EditProjectView.js","HOCs/withEdit.js","AddFab.js","MobileViews/BreaksView.js","SetStartTimeCell.js","SetProgressPopoverContent.js","SetProgressAndPauseButton.js","ChangeProjectStateDropdown.js","ChangeProjectStateCell.js","ProjectsTableRow.js","AddProjectRow.js","DefaultProjectsDrawer.js","MobileViews/DefaultProjectsView.js","ModeSwitch.js","ProjectsTable.js","TimeStatsModal.js","TimeStats.js","util/makeNewId.js","BreaksDrawer.js","signIn/GoogleSignIn.js","SignInPanel.js","signIn/GoogleIcon.js","DropdownMenu.js","util/getGetParams.js","App.js","HOCs/withDefaultColorsEditing.js","Settings.js","About.js","MobileViews/SettingsDefaultColors.js","LinkToRoot.js","DrawerMenu.js","Navbar.js","Footer.js","util/_defaultSettings.js","Router.js","DataSync.js","serviceWorker.js","index.js"],"names":["BackButton","props","react_default","a","createElement","IconButton_default","onClick","className","aria-label","ArrowBack_default","TimeCalc","time","result","keepPositiveIfCrossingMidnight","arguments","length","undefined","parseInt","isNaN","console","warn","parsedH","h","m","pm","this","isBiggerThan","minutes","setPm","times","Array","isArray","resultInMinutes","i","toMinutesSinceMidnight","toTimeObject","addToMinutes","apply","time1","time2","subtractToMinutes","showPmOrAm","convert0To12EvenIfNotShowingPmOrAm","timeFormat24H","string","precision","timeInMinutes","Math","round","orEqual","difference","temp","argument","toString","previousEndTime","previousDuration","settings","exactStartTime","add","bufferTimePercentage","roundTo","sum","average","setTimesForProjects","projects","breaks","startTime","JSON","parse","stringify","middleTimes","plannedTime","start","end","endTime","suggestStartTime","estimatedDuration","j","projectOverlapAreaStart","breakIsInFirstHalf","lengthOfBreak","isValidNumberInput","val","minSize","maxSize","TimeSetter","handleKeyPress","e","key","_this","onEnterPress","id","target","value","maxHValue","onChange","action","incrementation","showError","style","display","Input_default","handleInputChange","bind","firstInputId","placeholder","autoComplete","error","hError","onKeyPress","onKeyDown","handleKeyDown","mError","Select_default","MenuItem_default","Component","TimeSetterMobile","handleChange","date","valInMinutes","getHours","getMinutes","Date","hours","setHours","setMinutes","lib_default","mode","SettingsContext","React","createContext","IsMobileContext","Consumer","isMobile","TimeSetterMobile_TimeSetterMobile","showErrorProp","TimeSetterDesktop_TimeSetter","ColorPicker","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","render","ref","input","colorInput","type","width","xl","height","click","rx","ry","fill","cx","cy","r","state","createRef","MobileInputFields","Grid_default","MobileViews_BackButton","close","buttonTop","title","Typography_default","variant","children","paddingTop","TextField_default","inputValues","name","onInputChange","showErrors","fullWidth","margin","autoFocus","container","justify","item","xs","duration","src_TimeSetter","onTimeInputChange","startTimeH","startTimeM","endTimeH","endTimeM","ColorPicker_ColorPicker","color","onColorChange","button","projectValidation","project","dontValidateStartTime","push","valid","errors","inputValidation","breakValidation","breakInfo","withInputFields","WrappedComponent","_Component","handleColorChange","setState","objectSpread","assign","noProjects","assertThisInitialized","handleTimeInputChange","lastProject","currentTime","defaultColorIndex","defaultColors","userHasntChangedStartTime","inherits","createClass","isDefaultProjects","suggestedStartTime","areIdentical","suggestedEndTime","defineProperty","inputId","newState","toUpperCase","withAdd","_getPrototypeOf2","_len","args","_key","concat","callback","validation","_this$props","forEach","newDefaultColorIndex","newInputValues","onAddBreak","onAddProject","MobileViews_MobileInputFields","Button_default","withEdit","save","onDoneEditing","values","window","confirm","delete","Delete_default","AddFab","Fab_default","Add_default","BreaksView","changeView","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","map","makeString","Edit_default","colSpan","src_AddFab","SetStartTimeCell","htmlFor","SetProgressPopoverContent","progress","onPause","row","Done_default","startedWorkingOnIt","SetProgressAndPauseButton","handleClick","anchorEl","currentTarget","Fragment","Pause_default","Popover_default","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","SetProgressPopoverContent_SetProgressPopoverContent","ChangeProjectStateDropdown","setTimeout","showSetProgress","Menu_default","onProjectStateChange","List_default","icon","el","ListItem_default","ChangeProjectStateCell","content","Undo_default","ChangeProjectStateDropdown_ChangeProjectStateDropdown","SetProgressAndPauseButton_SetProgressAndPauseButton","PlayArrow_default","ProjectsTableRow","startEditing","handleStartTimeChange","editing","defaultState","stateClass","startIsTooLate","endIsTooLate","timeLeft","_this2","showEditing","tableRowStyle","percentageDone","progressCapped","backgroundImage","RootRef_default","rootRef","provided","innerRef","draggableProps","Icon_default","dragHandleProps","Tooltip_default","src_SetStartTimeCell","startEditingMobile","onDeleteProject","ChangeProjectStateCell_ChangeProjectStateCell","onStartTimeChange","DefaultProjectsDrawer","header","Switch_default","checked","useDefaultProjects","onUseDefaultProjectsChange","mobile","react_beautiful_dnd_esm","onDragEnd","droppableId","droppableProps","draggableId","index","provided2","ProjectsTableRow_ProjectsTableRow","src_AddProjectRow","DefaultProjectsView","passThoughProps","objectWithoutProperties","src_DefaultProjectsDrawer","ModeSwitch","buttons","label","onModeChange","alignItems","ProjectsTable","fontWeight","addToDoughnutData","doughnutData","datasets","backgroundColor","data","labels","TimeStatsModal","plannedMinusPredictedEndTime","_props$settings","predictedEndTime","stats","timeNeeded","plannedMinusPredictedEndTimePositive","subtract","totalDoneTimeSoFar","totalTimeToBeDone","predictedUnproductiveTime","totalTimePassed","timeUntilPredictedEndTime","productivityPercentageSoFar","predictedProductivityPercentage","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","makeFullLengthDurationString","totalProjectTime","totalBufferTime","totalBreakTime","disableFocusListener","disableTouchListener","Help_default","es","options","maintainAspectRatio","legend","position","TimeStats","updateCurrentTime","currentTimeAvailable","onCurrentTimeChange","openModal","modalOpen","currentTimeUpdateInterval","setInterval","clearInterval","timeRemaining","timeNeededWarning","timeRemainingNegative","timeRemainingWarning","durationLeft","shortLabels","Dialog_default","src_TimeStatsModal","makeNewId","objects","newId","haveFoundUniqueId","floor","random","pow","localStorageKey","join","localStorage","BreaksDrawer","validateEndTime","breakId","success","showEndTimeErrors","clearTimeout","addBreak","new","newBreak","onSave","breakDurations","handleSave","handleEnterPress","handleEnterPressNew","deleteBreak","propertyId","findIndex","canClose","every","x","splice","GoogleSignIn","responseGoogle","res","log","connect","tokenId","google_login_default","clientId","buttonText","onSuccess","onFailure","SignInPanel","handleDismiss","showDontRemindMeAgain","dismiss","closeDismissMenu","GoogleSignIn_GoogleSignIn","aria-owns","Close_default","core_Menu_default","dontRemindMeAgain","GoogleIcon","viewBox","version","xmlns","y","filterUnits","dx","dy","in","stdDeviation","stroke","strokeWidth","fillRule","transform","filter","d","DropdownMenu","about","history","signIn","signOut","disconnect","aria-haspopup","loggedIn","renderProps","signIn_GoogleIcon","getGetParams","locationSearch","getParamsString","substr","split","getParams","paramArr","App","setShowResetButton","condition1","condition2","lastResetInMs","lastReset","getTime","lastResetInMinutes","showResetButtonAfter","setTime","showResetButton","slice","autodetected","update","handleEndTimeChange","endTimeErrorTimeout","changeRouterShowErrors","handleRootKeyDown","changeModeOnTab","openBreaksDrawer","preventDefault","changeMode","handleCurrentTimeChange","resetState","productivityPercentage","closeDrawer","drawerName","dataLabel","newTemp","defaultProjectsDrawerRemoveTransform","saveBreaks","changes","canCloseBreaksDrawer","handleSignInDismiss","signInDissmissed","userHasDismissedSignInBefore","showSignInAgainTimeout","handleSignInDontRemindMeAgain","removeItem","dontShowSignInPanelAgain","openDefaultProjectsDrawer","dontShowSignInYet","showSignInPanelAfterLoadTimeout","prevProps","keys","totalTimeWorkedString","allProjectsDone","totalTimeWorked","arrayId","newProject","currentLastProject","detectBreaksAutomatically","updateTimesAfterDelete","changedProject","dragging","destination","copy","firstStartTime","movedProjectIndex","movedProject","updateTimesAfterDrag","durationChanged","startTimeChanged","updateTimesAfterEdit","view","change","additionalProps","newPath","stopPropagation","isFirst","_arr","entries","_i3","_ref3","_ref2","slicedToArray","pathArr","location","pathname","obj","closeFunc","search","defaultColorIndexDefaultProjects","MobileViews_AddProjectView","addProject","array","deleteFunc","doneEditingFunc","handleDoneEditingBreak","deleteProject","handleDoneEditingProject","MobileViews_EditProjectView","MobileViews_BreaksView","defaultProjects","MobileViews_DefaultProjectsView","handleDragEnd","_this$state","tabIndex","ModeSwitch_ModeSwitch","TimeStats_TimeStats","Provider","src_ProjectsTable","handleProjectStateChange","marginBottom","Autorenew_default","Drawer_default","anchor","BreaksDrawer_BreaksDrawer","marginTop","react_router_dom","to","Settings_default","DropdownMenu_DropdownMenu","Slide_default","direction","disconnected","mountOnEnter","unmountOnExit","SignInPanel_SignInPanel","withDefaultColorsEditing","addDefaultColor","newColor","onDefaultColorChange","handleDefaultColorChange","removeDefaultColor","sectionInfo","general","order","detection","misc","inputInfo","section","max","tooltip","Settings","inputs","resetToDefault","defaultSettings","percentage","inputKeysSorted","sort","b","sectionA","sectionB","sectionAOrder","sectionBOrder","tableRow","disableRipple","About","href","rel","Remove_default","LinkToRoot","DrawerMenu","togglePlanningCollapse","planningCollapseOpen","setNavbarState","planningCollapseOpenExplicit","checkActive","active","returnDontUpdate","pathname0","modeSwitch","ListItemIcon_default","Today_default","ListItemText_default","primary","padding","ExpandLess_default","ExpandMore_default","Collapse_default","timeout","component","disablePadding","navigate","paddingLeft","inset","Work_default","checkActiveTimeout","withRouter","Navbar","drawerOpen","AppBar_default","Toolbar_default","SwipeableDrawer_default","onOpen","src_DrawerMenu","Footer","react_router_hash_link_lib","AppRouter","AppWithProps","App_App","changeShowErrors","SettingsWithProps","src_Settings","SettingsDefaultColorsWithProps","MobileViews_SettingsDefaultColors","innerWidth","defaultVal","addEventListener","_this3","Navbar_Navbar","react_router","path","exact","src_Footer","cookies","Cookies","theme","createMuiTheme","palette","main","secondary","green","typography","useNextVariants","DataSync","idToken","io","showDisconnectedError","localData","lastModified","emit","accessToken","get","deleteObjectsLocalStorage","_i","arrId","setMultipleLastModified","_arr2","_i2","updatedWhileDisconnected","closeSnackbar","setLastModified","object","objectId","stateObjectIndex","property","areIdenticalObjects","changedIds","changedId","changedObject","startsWithString","except","localStorageKeys","relevantKeys","startsWith","handleUpdateFromServer","lastModifiedKey","objectIdKey","propertyKey","obj1","obj2","SocketIOClient","on","successfulConnectInit","getData","showDisconnectedErrorTimeout","set","remove","defaultValues","_arr3","pathArray","pathLength","lastModifiedObj","styles","Router_AppRouter","Snackbar_default","autoHideDuration","SnackbarContent_default","aria-describedby","message","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","catch","ReactDOM","DataSync_DataSync","document","getElementById","URL","process","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fc3a7b2f.chunk.js","sourcesContent":["import React from 'react'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport '../css/BackButton.css'\r\n\r\nconst BackButton = props => (\r\n  <IconButton onClick={props.onClick} className=\"BackButton\" aria-label=\"Back\">\r\n    <ArrowBackIcon />\r\n  </IconButton>\r\n)\r\n\r\nexport default BackButton\r\n","export default class TimeCalc {\r\n  static toMinutesSinceMidnight(time, keepPositiveIfCrossingMidnight = false){\r\n    let result\r\n\r\n    switch(typeof time){\r\n      // if it's a number, simply return it\r\n      case \"number\":\r\n        result = time\r\n        break;\r\n      // if it's a string, try to parse it\r\n      case \"string\":\r\n        result = parseInt(time)\r\n        if(isNaN(result)){\r\n          console.warn(\"Unexpected input: \", time)\r\n          return\r\n        }\r\n        break;\r\n      case \"object\":\r\n        // handle time.h === 12 (only if pm is set - allows us to count with an amout of time too)\r\n        let parsedH = parseInt(time.h)\r\n        if(parsedH === 12 && \"pm\" in time) parsedH -= 12\r\n\r\n        result = parsedH * 60 + parseInt(time.m)\r\n        if(time.pm) result += 12 * 60\r\n\r\n        break;\r\n      // if the typeof is none of the above, throw a warning\r\n      default:\r\n        console.warn(\"Unexpected input: \", time)\r\n        return\r\n    }\r\n\r\n    if(keepPositiveIfCrossingMidnight &&\r\n      this.isBiggerThan(time, 0, true) &&\r\n      this.isBiggerThan(5*60, time, true)\r\n    ) result += 24*60\r\n\r\n    return result\r\n  }\r\n\r\n  static toTimeObject(minutes, setPm = true){\r\n    let pm = false\r\n    if(setPm){\r\n\r\n      // check for am/pm\r\n      while(minutes >= 24 * 60){\r\n        minutes -= 24*60\r\n      }\r\n      if(minutes >= 12 * 60){\r\n        pm = true\r\n        minutes -= 12*60\r\n      }\r\n    }\r\n\r\n    // split hours and minutes\r\n    let m = minutes % 60\r\n    let h = (minutes - m) / 60\r\n\r\n    if(isNaN(h) || isNaN(m)) console.warn(\"NaN result: \", {h, m, pm});\r\n\r\n    if(setPm) return {h, m, pm}\r\n    else return {h, m}\r\n  }\r\n\r\n  // add and return resultInMinutes\r\n  // used internally\r\n  static addToMinutes(){\r\n    // make both an array input and a spread input acceptable\r\n    let times = Array.isArray(arguments[0]) ? arguments[0] : arguments\r\n\r\n    // convert to minutes\r\n    let resultInMinutes = 0\r\n    for(let i = 0; i < times.length; i++){\r\n      resultInMinutes += this.toMinutesSinceMidnight(times[i])\r\n    }\r\n\r\n    return resultInMinutes\r\n  }\r\n\r\n  static add(){\r\n    return this.toTimeObject(this.addToMinutes(...arguments))\r\n  }\r\n\r\n  // subtract and return resultInMinutes\r\n  // used internally in subtract and isBiggerThan\r\n  static subtractToMinutes(time1, time2, keepPositiveIfCrossingMidnight = false){\r\n    let mins1 = this.toMinutesSinceMidnight(time1, keepPositiveIfCrossingMidnight)\r\n    let mins2 = this.toMinutesSinceMidnight(time2, keepPositiveIfCrossingMidnight)\r\n    let resultInMinutes = mins1 - mins2\r\n\r\n    return resultInMinutes\r\n  }\r\n\r\n  static subtract(time1, time2, keepPositiveIfCrossingMidnight = false){\r\n    let resultInMinutes = this.subtractToMinutes(time1, time2, keepPositiveIfCrossingMidnight)\r\n\r\n    return this.toTimeObject(resultInMinutes, false)\r\n  }\r\n\r\n  static makeString(time, showPmOrAm = true, convert0To12EvenIfNotShowingPmOrAm = false, timeFormat24H = false){\r\n    // handle a number input\r\n    if(typeof time === \"number\") time = this.toTimeObject(time, showPmOrAm)\r\n\r\n    let h, m\r\n\r\n    if(timeFormat24H)showPmOrAm = false\r\n\r\n    if(typeof time.m === \"string\") time.m = parseInt(time.m) // handle string input\r\n    m = time.m >= 10 ? time.m : \"0\" + time.m\r\n\r\n    h = ((showPmOrAm || convert0To12EvenIfNotShowingPmOrAm) && time.h === 0) ? 12 : time.h\r\n\r\n    if(timeFormat24H && time.pm) h = parseInt(h) + 12\r\n\r\n    // handle NaN\r\n    if(isNaN(m)){\r\n      console.warn(\"Wrong input to makeString: \", time);\r\n      return\r\n    }\r\n\r\n    let string = h + \":\" + m\r\n    if(typeof time.pm !== \"undefined\" && showPmOrAm){\r\n      let pmOrAm = time.pm ? \"PM\" : \"AM\"\r\n      string += \" \" + pmOrAm\r\n    }\r\n    return string\r\n  }\r\n\r\n  static round(time, precision){\r\n    let timeInMinutes = this.toMinutesSinceMidnight(time)\r\n\r\n    // round the minutes\r\n    timeInMinutes = Math.round(timeInMinutes / precision) * precision\r\n\r\n    return this.toTimeObject(timeInMinutes)\r\n  }\r\n\r\n  static isBiggerThan(time1, time2, orEqual = true, keepPositiveIfCrossingMidnight = false){\r\n    let difference = this.subtractToMinutes(time1, time2, keepPositiveIfCrossingMidnight)\r\n    if(orEqual) return difference >= 0\r\n    else return difference > 0\r\n  }\r\n\r\n  static areIdentical(){\r\n    let temp\r\n\r\n    for(let i = 0; i < arguments.length; i++){\r\n      let argument = arguments[i]\r\n\r\n      // handle NaN\r\n      if(isNaN(argument.h)) argument.h = argument.h.toString()\r\n      if(isNaN(argument.m)) argument.m = argument.m.toString()\r\n\r\n      // handle string input\r\n      if(typeof argument.h === \"string\") argument.h = parseInt(argument.h)\r\n      if(typeof argument.m === \"string\") argument.m = parseInt(argument.m)\r\n\r\n      // if temp is empty -> this is the first argument, store the first temp\r\n      if(!temp){\r\n        temp = argument\r\n        continue\r\n      }\r\n\r\n      // if the temp and the current argument are not identical, return false\r\n      if(argument.h !== temp.h || argument.m !== temp.m || argument.pm !== temp.pm) return false\r\n\r\n      // store the current argument as the new temp\r\n      temp = argument\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  static suggestStartTime(previousEndTime, previousDuration, settings){\r\n    let exactStartTime = this.add(previousEndTime, previousDuration * settings.bufferTimePercentage)\r\n\r\n    // round the startTime to the nearest 5 and return\r\n    return this.round(exactStartTime, settings.roundTo)\r\n  }\r\n\r\n  static average(){\r\n    let sum = this.addToMinutes(...arguments)\r\n\r\n    let average = Math.round(sum / arguments.length)\r\n\r\n    return this.toTimeObject(average)\r\n  }\r\n\r\n  static makeFullLengthDurationString(time){\r\n    let h = parseInt(time.h)\r\n    let m = parseInt(time.m)\r\n    if(time.pm) h += 12\r\n\r\n    let string = \"\"\r\n    if(h) string += h + \" hour\"\r\n    if(h > 1) string += \"s\"\r\n    if(h && m) string += \" and \"\r\n    if(m) string += m + \" minute\"\r\n    if(m > 2) string += \"s\"\r\n    if(!h && !m) string = \"0 minutes\"\r\n\r\n    return string\r\n  }\r\n}\r\n\r\n// takes ordered projects and sets appropriate times for each of them\r\nexport function setTimesForProjects(projects, settings, breaks, startTime){\r\n\r\n  // PSEUDO CODE: //\r\n  // determine if a project and a break overlay\r\n    // project.startTime < break.startTime && project.endTime > break.startTime\r\n  // prioritize perserving break length or start and end times?\r\n  // project 9:30-11:00, break 10:30-11:00 -> move break to 11:00-11:30\r\n  // project 9:30-10:30, break 9:50-10:00 -> move break to 9:30-9:40, move project to 9:40-10:40\r\n  // first determine if the break is in the first or second half of the project\r\n    // compare the middle of the break to the middle of the project\r\n  // if in the first, move the break to before the project, set project startTime = break[i].endTime\r\n  // if the second, move the break to after the project, set startTime of the next project to break[i].endTime\r\n\r\n  // break the reference to this.state.breaks\r\n  breaks = JSON.parse(JSON.stringify(breaks))\r\n\r\n  // calculate middleTimes beforehand to avoid multiple executions of the same code (-> improves performance)\r\n  if(breaks.length){\r\n    var middleTimes = {projects: [], breaks: []}\r\n    for(let i = 0; i < projects.length; i++) middleTimes.projects[i] = TimeCalc.average(projects[i].plannedTime.start, projects[i].plannedTime.end)\r\n    for(let i = 0; i < breaks.length; i++) middleTimes.breaks[i] = TimeCalc.average(breaks[i].startTime, breaks[i].endTime)\r\n  }\r\n\r\n  for(let i = 0; i < projects.length; i++){\r\n\r\n    if(!projects[i].plannedTime) projects[i].plannedTime = {}\r\n\r\n    // unless this is the first project, adjust the startTime\r\n    if(i !== 0){\r\n      projects[i].plannedTime.start = TimeCalc.suggestStartTime(\r\n        projects[i - 1].plannedTime.end,\r\n        projects[i - 1].estimatedDuration,\r\n        settings\r\n      )\r\n    }\r\n\r\n    // if it is the first project then startTime must equal the one from the state\r\n    else projects[i].plannedTime.start = startTime\r\n\r\n    // set the appropriate endTime\r\n    projects[i].plannedTime.end = TimeCalc.add(projects[i].plannedTime.start, projects[i].estimatedDuration)\r\n\r\n    // loop through the breaks, adjust if one of them overlays with the project\r\n    for(let j = 0; j < breaks.length; j++){\r\n      // if breaks[j] and projects[i] overlay...\r\n      // (we only care about breaks[j].startTime, the endTime is irrelevant here)\r\n      // (projectOverlapAreaStart is a way to handle the scenario of the break starting in the buffer, it also handles i === 0)\r\n      let projectOverlapAreaStart = i === 0 ? projects[i].plannedTime.start : projects[i - 1].plannedTime.end\r\n      if(\r\n        TimeCalc.isBiggerThan(projects[i].plannedTime.end, breaks[j].startTime, true, true) &&\r\n        TimeCalc.isBiggerThan(breaks[j].startTime, projectOverlapAreaStart, true, true)\r\n      ){\r\n        // determine if the break is in the first or second half of the project\r\n        let breakIsInFirstHalf = TimeCalc.isBiggerThan(middleTimes.projects[i], middleTimes.breaks[j], true, true)\r\n\r\n        // get the length of the break\r\n        let lengthOfBreak = TimeCalc.subtractToMinutes(breaks[j].endTime, breaks[j].startTime, true)\r\n\r\n        // if the break is in the first half of the project...\r\n        if(breakIsInFirstHalf){\r\n          // move the break before the project\r\n          // (if it's the first project, there is no, projects[i - 1] -> handles undefined with ternary statement)\r\n          breaks[j].startTime = (i === 0 ? projects[i].plannedTime.start : projects[i - 1].plannedTime.end)\r\n\r\n          // adjust the endTime of the break\r\n          breaks[j].endTime = TimeCalc.add(breaks[j].startTime, lengthOfBreak)\r\n\r\n          // move the project after the break\r\n          if(i === 0) projects[i].plannedTime.start = breaks[j].endTime // if it's the first project, move the startTime after the break\r\n          // else add the buffer\r\n          else projects[i].plannedTime.start = TimeCalc.suggestStartTime(breaks[j].endTime, projects[i-1].estimatedDuration, settings)\r\n          projects[i].plannedTime.end = TimeCalc.add(projects[i].plannedTime.start, projects[i].estimatedDuration)\r\n        }\r\n\r\n        // if the break is in the second half of the project...\r\n        else{\r\n          // move the break after the project\r\n          breaks[j].startTime = projects[i].plannedTime.end\r\n          breaks[j].endTime = TimeCalc.add(breaks[j].startTime, lengthOfBreak)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return projects\r\n}\r\n","import React, { Component } from 'react';\r\nimport Input from '@material-ui/core/Input';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TimeCalc from './util/TimeCalc'\r\n\r\nfunction isValidNumberInput(val, minSize, maxSize){\r\n  if(\r\n    val === \"\" || (\r\n      !isNaN(val) && // if it's a number or an emty string and...\r\n      val >= minSize && val <= maxSize // the correct size\r\n    )\r\n  ) return true\r\n  else return false\r\n}\r\n\r\n\r\nexport default class TimeSetter extends Component {\r\n  handleInputChange(id, e){\r\n    // get the input value\r\n    let val\r\n    if(typeof e === \"number\") val = e // needs to accept the input from handleKeyDown\r\n    else{\r\n      if(id === \"pm\") val = e.target.value === \"PM\"\r\n      else val = e.target.value\r\n    }\r\n\r\n    // validate the input\r\n    let maxHValue = this.props.settings.timeFormat24H ? 24 : 12\r\n    if((id === \"h\" && !isValidNumberInput(val, 1, maxHValue))\r\n      || (id === \"m\" && !isValidNumberInput(val, 0, 59))\r\n    ) return\r\n\r\n\r\n    // if we're using the 24-hour time format for the UI, convert it back over to the normal format\r\n    if(this.props.settings.timeFormat24H && id === \"h\"){\r\n      if(val >= 12){\r\n        val -= 12\r\n        this.props.onChange(\"pm\", true)\r\n      }\r\n      else this.props.onChange(\"pm\", false)\r\n    }\r\n\r\n\r\n    // emit the change up the chain\r\n    this.props.onChange(id, val)\r\n  }\r\n\r\n  handleKeyPress = e => {\r\n    if(e.key === \"Enter\" && this.props.onEnterPress) this.props.onEnterPress()\r\n  }\r\n\r\n  handleKeyDown(id, e){\r\n    // determine what is to be done\r\n    let action\r\n    if(e.key === \"ArrowUp\") action = \"up\"\r\n    if(e.key === \"ArrowDown\") action = \"down\"\r\n\r\n    // if nothing is supposed to be done, stop the execution\r\n    if(!action) return\r\n\r\n    // get the value, handle empty input\r\n    let val = this.props.value\r\n    if(!val || isNaN(val.m)) val = 0\r\n\r\n    // edit the val\r\n    let incrementation = id === \"m\" ? this.props.settings.roundTo : 60\r\n    if(action === \"up\") val = TimeCalc.add(val, incrementation)\r\n    else val = TimeCalc.toTimeObject(TimeCalc.subtractToMinutes(val, incrementation), true)\r\n\r\n    // handle negative values\r\n    if(TimeCalc.isBiggerThan(0, val, false)) val = TimeCalc.add(val, 24*60)\r\n\r\n    this.props.onChange(\"object\", val)\r\n  }\r\n\r\n  render(){\r\n    let h = this.props.value.h\r\n    h = h === 0 ? 12 : h\r\n    let m = this.props.value.m\r\n    m = m === 0 ? \"0\" + m : m\r\n\r\n    return (\r\n      <div className={\"TimeSetterDesktop\" + (this.props.showError ? \" timeSetterError\" : \"\")} style={{display: \"inline\"}}>\r\n        <Input\r\n          onChange={this.handleInputChange.bind(this, \"h\")}\r\n          value={(this.props.settings.timeFormat24H && this.props.value.pm) ? h + 12 : h}\r\n          id={this.props.firstInputId}\r\n          placeholder=\"Hours\"\r\n          aria-label=\"Hours\"\r\n          autoComplete=\"off\"\r\n          error={this.props.hError}\r\n          onKeyPress={this.handleKeyPress}\r\n          onKeyDown={this.handleKeyDown.bind(this, \"h\")}\r\n        />\r\n        :\r\n        <Input\r\n          onChange={this.handleInputChange.bind(this, \"m\")}\r\n          value={m}\r\n          placeholder=\"Minutes\"\r\n          aria-label=\"Minutes\"\r\n          autoComplete=\"off\"\r\n          error={this.props.mError}\r\n          onKeyPress={this.handleKeyPress}\r\n          onKeyDown={this.handleKeyDown.bind(this, \"m\")}\r\n        />\r\n        {!this.props.settings.timeFormat24H && (\r\n          <Select\r\n            onChange={this.handleInputChange.bind(this, \"pm\")}\r\n            value={this.props.value.pm ? \"PM\" : \"AM\"}>\r\n            <MenuItem value=\"AM\">AM</MenuItem>\r\n            <MenuItem value=\"PM\">PM</MenuItem>\r\n          </Select>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport TimeInput from 'material-ui-time-picker'\r\nimport TimeCalc from './util/TimeCalc'\r\n\r\nexport default class TimeSetterMobile extends Component{\r\n  handleChange = date => {\r\n    // convert into a TimeObject\r\n    let valInMinutes = date.getHours() * 60 + date.getMinutes()\r\n    let val = TimeCalc.toTimeObject(valInMinutes)\r\n\r\n    this.props.onChange(\"object\", val)\r\n  }\r\n\r\n  render(){\r\n    // convert the value into a Date\r\n    let value = new Date()\r\n    let hours = this.props.value.h\r\n    if(this.props.value.pm) hours += 12\r\n    value.setHours(hours)\r\n    value.setMinutes(this.props.value.m)\r\n\r\n    return (\r\n      <TimeInput\r\n        className=\"TimeSetterMobile\"\r\n        mode={this.props.mode}\r\n        value={value}\r\n        onChange={this.handleChange}\r\n        error={this.props.error}\r\n      />\r\n    )\r\n  }\r\n\r\n}\r\n","import React from 'react';\r\n\r\nexport const SettingsContext = React.createContext({})\r\nexport const IsMobileContext = React.createContext({})\r\n","import React from 'react';\r\nimport TimeSetterDesktop from './TimeSetterDesktop'\r\nimport TimeSetterMobile from './TimeSetterMobile'\r\nimport { SettingsContext, IsMobileContext } from './_Context'\r\nimport './css/TimeSetter.css'\r\n\r\nconst TimeSetter = props => (\r\n  <SettingsContext.Consumer>\r\n    {settings => (\r\n      <IsMobileContext.Consumer>\r\n        {isMobile => (\r\n          isMobile ? (\r\n            <TimeSetterMobile\r\n              mode={settings.timeFormat24H ? \"24h\" : \"12h\"}\r\n              value={props.value}\r\n              onChange={props.onChange}\r\n              error={\r\n                props.hError ||\r\n                props.mError ||\r\n                props.showErrorProp\r\n              }\r\n            />\r\n          ) : (\r\n            <TimeSetterDesktop\r\n              onChange={props.onChange}\r\n              value={props.value}\r\n              firstInputId={props.firstInputId}\r\n              hError={props.hError}\r\n              mError={props.mError}\r\n              onEnterPress={props.onEnterPress}\r\n              settings={settings}\r\n            />\r\n          )\r\n        )}\r\n      </IsMobileContext.Consumer>\r\n    )}\r\n  </SettingsContext.Consumer>\r\n)\r\n\r\nexport default TimeSetter\r\n","import React, { Component } from 'react';\r\nimport './css/ColorPicker.css'\r\n\r\nexport default class ColorPicker extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {}\r\n\r\n    this.colorInput = React.createRef()\r\n  }\r\n\r\n  render = () => (\r\n    <span className=\"ColorPicker\">\r\n      <input\r\n        className=\"colorInput\"\r\n        ref={input => this.colorInput = input}\r\n        type=\"color\"\r\n        aria-label=\"Color\"\r\n        value={this.props.value}\r\n        onChange={e => {this.props.onChange(e.target.value)}}/>\r\n      <svg\r\n        width={this.props.xl ? 50 : 20}\r\n        height={this.props.xl ? 30 : 20}\r\n        onClick={() => {this.colorInput.click()}}\r\n      >\r\n        {this.props.xl ? (\r\n          <rect width=\"50\" height=\"30\" rx=\"5\" ry=\"5\" style={{fill: this.props.value}} />\r\n        ) : (\r\n          <circle cx=\"10\" cy=\"10\" r=\".5rem\" fill={this.props.value} />\r\n        )}\r\n\r\n      </svg>\r\n    </span>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport BackButton from './BackButton'\r\nimport TimeSetter from '../TimeSetter'\r\nimport ColorPicker from '../ColorPicker'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport '../css/MobileInputFields.css'\r\n\r\nconst MobileInputFields = props => (\r\n  <Grid className=\"MobileInputFields container\">\r\n    <BackButton onClick={props.close} />\r\n    <Grid className=\"buttonTop\">\r\n      {props.buttonTop}\r\n    </Grid>\r\n    {props.title && (\r\n      <Typography className=\"title\" variant=\"h6\" children={props.title} />\r\n    )}\r\n    <Grid style={props.title ? {} : {paddingTop: \"1.5rem\"}}>\r\n      <TextField\r\n        value={props.inputValues.name}\r\n        onChange={props.onInputChange.bind(this, \"name\")}\r\n        onKeyPress={props.onKeyPress}\r\n        placeholder=\"Name\"\r\n        aria-label=\"Name\"\r\n        error={props.showErrors.name || props.showErrorProp}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        autoFocus\r\n      />\r\n    </Grid>\r\n    <Grid className=\"durationAndStartTimeDiv\" container justify=\"space-between\">\r\n      {props.type !== \"break\" && (\r\n        <Grid\r\n          item\r\n          xs={props.type === \"default\" ? 12 : 6}\r\n          className=\"item\"\r\n        >\r\n          <label>Duration:</label>\r\n          <TextField\r\n            type=\"number\"\r\n            value={props.inputValues.duration}\r\n            onChange={props.onInputChange.bind(this, \"duration\")}\r\n            onKeyPress={props.onKeyPress}\r\n            placeholder=\"Duration\"\r\n            aria-label=\"Duration\"\r\n            error={props.showErrors.duration || props.showErrorProp}\r\n          />\r\n        </Grid>\r\n      )}\r\n      {props.type !== \"default\" && (\r\n        <Grid item xs={6} className=\"item\">\r\n          <label>Start:</label>\r\n          <TimeSetter\r\n            value={props.inputValues.startTime}\r\n            onChange={props.onTimeInputChange.bind(this, \"startTime\")}\r\n            firstInputId=\"newProjectStartTimeInput\"\r\n            hError={props.showErrors.startTimeH || props.showErrorProp}\r\n            mError={props.showErrors.startTimeM || props.showErrorProp}\r\n            showErrors={props.showErrors}\r\n            onEnterPress={props.add}\r\n          />\r\n        </Grid>\r\n      )}\r\n      {props.type === \"break\" && (\r\n        <Grid item xs={6} className=\"item\">\r\n          <label>End:</label>\r\n          <TimeSetter\r\n            value={props.inputValues.endTime}\r\n            onChange={props.onTimeInputChange.bind(this, \"endTime\")}\r\n            firstInputId=\"newProjectEndTimeInput\"\r\n            hError={props.showErrors.endTimeH || props.showErrors.endTime || props.showErrorProp}\r\n            mError={props.showErrors.endTimeM || props.showErrors.endTime || props.showErrorProp}\r\n            showErrors={props.showErrors}\r\n            onEnterPress={props.add}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n    {props.type !== \"break\" && (\r\n      <Grid>\r\n        Color:\r\n        <ColorPicker xl\r\n          value={props.inputValues.color}\r\n          onChange={props.onColorChange}\r\n        />\r\n      </Grid>\r\n    )}\r\n    <Grid className=\"confirmDiv\" container justify=\"center\">\r\n      {props.button}\r\n    </Grid>\r\n  </Grid>\r\n)\r\n\r\nexport default MobileInputFields\r\n","import TimeCalc from './TimeCalc'\r\n\r\nexport function projectValidation(project, dontValidateStartTime = false){\r\n  let error = []\r\n  if(project.name === \"\") error.push(\"name\")\r\n  if(project.duration === \"\" || isNaN(project.duration) || project.duration > 1440) error.push(\"duration\")\r\n  if(!dontValidateStartTime){\r\n    if(project.startTime.h === \"\" || isNaN(project.startTime.h)) error.push(\"startTimeH\")\r\n    if(project.startTime.m === \"\" || isNaN(project.startTime.m)) error.push(\"startTimeM\")\r\n  }\r\n\r\n  if(error.length) return {valid: false, errors: error}\r\n  else return {valid: true}\r\n}\r\n\r\nexport function inputValidation(id, val){\r\n  if(id === \"name\" && val.length > 30) return false\r\n  if(id === \"duration\" && isNaN(val) && val !== \"\") return false\r\n  else return true\r\n}\r\n\r\nexport function breakValidation(breakInfo){\r\n  let error = []\r\n  if(breakInfo.name === \"\") error.push(\"name\")\r\n  if(breakInfo.startTime.h === \"\" || isNaN(breakInfo.startTime.h)) error.push(\"startTimeH\")\r\n  if(breakInfo.startTime.m === \"\" || isNaN(breakInfo.startTime.m)) error.push(\"startTimeM\")\r\n  if(breakInfo.endTime.h === \"\" || isNaN(breakInfo.endTime.h)) error.push(\"endTimeH\")\r\n  if(breakInfo.endTime.m === \"\" || isNaN(breakInfo.endTime.m)) error.push(\"endTimeM\")\r\n  if(TimeCalc.isBiggerThan(breakInfo.startTime, breakInfo.endTime, false, true)) error.push(\"endTime\")\r\n\r\n  if(error.length) return {valid: false, errors: error}\r\n  else return {valid: true}\r\n}\r\n","import React, { Component } from 'react'\r\nimport TimeCalc from '../util/TimeCalc'\r\nimport { inputValidation } from '../util/validation'\r\n\r\nconst withInputFields = WrappedComponent => (\r\n  class withInputFields extends Component{\r\n    constructor(props){\r\n      super(props)\r\n\r\n      // see if the inputValues are already supplied, if not, set them\r\n      let inputValues\r\n      if(this.props.inputValues){\r\n        inputValues = this.props.inputValues\r\n      }\r\n\r\n      else{\r\n        inputValues = {name: \"\"}\r\n\r\n        let { type } = this.props\r\n\r\n        let roundTo = this.props.settings.roundTo || 5\r\n\r\n        if(type !== \"default\"){\r\n          // set a default startTime value\r\n          // first try to set a value based on lastProject\r\n          let startTime\r\n          let lastProject = this.props.lastProject\r\n          if(lastProject && lastProject.plannedTime){\r\n            startTime = TimeCalc.suggestStartTime(\r\n              lastProject.plannedTime.end,\r\n              lastProject.estimatedDuration,\r\n              this.props.settings\r\n            )\r\n          }\r\n          else{\r\n            // then try a value based on currentTime\r\n            if(this.props.currentTime){\r\n              startTime = TimeCalc.round(TimeCalc.add(this.props.currentTime, 15), roundTo)\r\n            }\r\n            else startTime = {h: 12, m: 0, pm: true}\r\n          }\r\n\r\n          inputValues.startTime = startTime\r\n        }\r\n\r\n        if(this.props.type === \"break\"){\r\n          inputValues.endTime = TimeCalc.round(TimeCalc.add(inputValues.startTime, 30), roundTo)\r\n        }\r\n        else{\r\n          inputValues.duration = \"\"\r\n\r\n          let color\r\n          if(typeof this.props.defaultColorIndex !== \"undefined\"){\r\n            color = this.props.settings.defaultColors[this.props.defaultColorIndex]\r\n          }\r\n          else color = \"#000000\"\r\n\r\n          inputValues.color = color\r\n        }\r\n      }\r\n\r\n      this.state = {\r\n        inputValues,\r\n        userHasntChangedStartTime: true,\r\n        defaultColorIndex: this.props.defaultColorIndex,\r\n        showErrors: {}\r\n      }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n      // if the user hasn't changed startTime yet, suggest a new startTime\r\n      // (don't execute if the props haven't loaded yet)\r\n      if(\r\n        this.props.type !== \"default\" &&\r\n        this.state.inputValues.h !== \"\" &&\r\n        this.state.userHasntChangedStartTime &&\r\n        this.props.settings.bufferTimePercentage &&\r\n        this.props.lastProject &&\r\n        !this.props.isDefaultProjects\r\n      ){\r\n        let suggestedStartTime = TimeCalc.suggestStartTime(\r\n          this.props.lastProject.plannedTime.end,\r\n          this.props.lastProject.estimatedDuration,\r\n          this.props.settings\r\n        )\r\n        if(\r\n          this.state.inputValues.startTime.h === \"\" ||\r\n          !TimeCalc.areIdentical(suggestedStartTime, this.state.inputValues.startTime)\r\n        ){\r\n          let inputValues = {...this.state.inputValues, startTime: suggestedStartTime}\r\n          if(this.props.type === \"break\"){\r\n            let suggestedEndTime = TimeCalc.round(TimeCalc.add(suggestedStartTime, 30), this.props.settings.roundTo)\r\n            inputValues.endTime = suggestedEndTime\r\n          }\r\n          this.setState({inputValues})\r\n        }\r\n      }\r\n\r\n      // only used if defaultColorIndex (and startTime) are being initialized with data from the localStorage\r\n      if(\r\n        this.props.type !== \"break\" &&\r\n        !this.props.inputValues &&\r\n        typeof this.state.defaultColorIndex === \"undefined\" &&\r\n        typeof this.props.defaultColorIndex !== \"undefined\" &&\r\n        this.props.settings.defaultColors\r\n      ){\r\n\r\n        let inputValues = this.state.inputValues\r\n\r\n        let defaultColors = this.props.settings.defaultColors\r\n        let defaultColorIndex = this.props.defaultColorIndex\r\n\r\n        // handle the following: defaultColorsIndex is at max and the user deletes the last defaultColor in the settings\r\n        if(defaultColors.length <= defaultColorIndex) defaultColorIndex = 0\r\n\r\n        inputValues.color = defaultColors[defaultColorIndex]\r\n\r\n        // handle undefined\r\n        inputValues.color = inputValues.color ? inputValues.color : \"#000000\"\r\n\r\n        this.setState({inputValues, defaultColorIndex})\r\n      }\r\n    }\r\n\r\n    handleInputChange(id, e){\r\n      let val = e.target.value\r\n      if(!inputValidation(id, val)) return\r\n      this.setState({\r\n        inputValues: {...this.state.inputValues, [id]: val},\r\n        showErrors: {...this.state.showErrors, [id]: false}\r\n      })\r\n    }\r\n\r\n    handleTimeInputChange(inputId, id, val){\r\n      let newState = {inputValues: this.state.inputValues, showErrors: this.state.showErrors}\r\n\r\n      if(id === \"object\") newState.inputValues[inputId] = val\r\n      else newState.inputValues[inputId][id] = val\r\n\r\n      newState.showErrors[inputId + id.toUpperCase()] = false\r\n      newState.userHasntChangedStartTime = false\r\n\r\n      this.setState(newState)\r\n    }\r\n\r\n    handleColorChange = val => {\r\n      this.setState({inputValues: {...this.state.inputValues, color: val}})\r\n    }\r\n\r\n    render = () => (\r\n      <WrappedComponent\r\n        {...this.props}\r\n        inputValues={this.state.inputValues}\r\n        showErrors={this.state.showErrors}\r\n        showErrorProp={this.props.showErrors ? this.props.showErrors.noProjects : false}\r\n        onInputChange={this.handleInputChange.bind(this)}\r\n        onTimeInputChange={this.handleTimeInputChange.bind(this)}\r\n        onColorChange={this.handleColorChange}\r\n        setState={this.setState.bind(this)}\r\n      />\r\n    )\r\n  }\r\n)\r\n\r\nexport default withInputFields\r\n","import React, { Component } from 'react'\r\nimport { projectValidation, breakValidation } from '../util/validation'\r\nimport withInputFields from './withInputFields'\r\n\r\nconst withAdd = WrappedComponent => (\r\n  withInputFields(\r\n    class withAdd extends Component{\r\n      add = callback => {\r\n        let { inputValues, type } = this.props\r\n\r\n        // validation\r\n        let validation\r\n        if(type === \"break\") validation = breakValidation(inputValues)\r\n        else validation = projectValidation(inputValues, type === \"default\")\r\n\r\n        if(!validation.valid){\r\n          let newState = this.props.showErrors\r\n          validation.errors.forEach(error => {\r\n            newState[error] = true\r\n          })\r\n          this.setState(newState)\r\n          return\r\n        }\r\n\r\n        // reset the state\r\n        let newInputValues = {name: \"\"}\r\n        let newDefaultColorIndex\r\n        if(type !== \"default\") newInputValues.startTime = {h: \"\", m: \"\", pm: true}\r\n        if(type === \"break\"){\r\n          newInputValues.endTime = {h: \"\", m: \"\", pm: true}\r\n          this.props.onAddBreak(this.props.inputValues)\r\n        }\r\n        else{\r\n          newInputValues.duration = \"\"\r\n          newInputValues.color = inputValues.color // perserve the color\r\n\r\n          // if the user hasn't changed the color from the default, go to the next defaultColor\r\n          let defaultColors = this.props.settings.defaultColors\r\n          let defaultColorIndex = this.props.defaultColorIndex\r\n\r\n          newDefaultColorIndex = defaultColorIndex >= defaultColors.length - 1 ? 0 : ++defaultColorIndex\r\n\r\n          newInputValues.color = defaultColors[newDefaultColorIndex]\r\n\r\n          // call the props function\r\n          this.props.onAddProject(this.props.inputValues, newDefaultColorIndex)\r\n        }\r\n\r\n        // save to state\r\n        let newState = {inputValues: newInputValues}\r\n        if(type !== \"break\") newState.defaultColorIndex = newDefaultColorIndex\r\n        this.props.setState(newState)\r\n\r\n        if(typeof callback === \"function\") callback()\r\n      }\r\n\r\n      handleKeyPress = e => {if(e.key === \"Enter\") this.add()}\r\n\r\n      render = () => (\r\n        <WrappedComponent\r\n          {...this.props}\r\n          add={this.add}\r\n          onKeyPress={this.handleKeyPress}\r\n        />\r\n      )\r\n    }\r\n  )\r\n)\r\n\r\nexport default withAdd\r\n","import React from 'react'\r\nimport MobileInputFields from './MobileInputFields'\r\nimport Button from '@material-ui/core/Button'\r\nimport withAdd from '../HOCs/withAdd'\r\n\r\nconst AddProjectView = props => (\r\n  <MobileInputFields\r\n    {...props}\r\n    button={\r\n      <Button\r\n        onClick={() => {props.add(props.close)}}\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n      >\r\n        Add\r\n      </Button>\r\n    }\r\n  />\r\n)\r\n\r\nexport default withAdd(AddProjectView)\r\n","import React from 'react'\r\nimport MobileInputFields from './MobileInputFields'\r\nimport Button from '@material-ui/core/Button'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport withEdit from '../HOCs/withEdit'\r\n\r\nconst EditProjectView = props => (\r\n  <MobileInputFields\r\n    {...props}\r\n    button={\r\n      <Button\r\n        onClick={(id, values) => {props.save(id, values); props.close();}}\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n      >\r\n        Save\r\n      </Button>\r\n    }\r\n    buttonTop={\r\n      <IconButton\r\n        onClick={() => {\r\n          if(window.confirm(\"Are you sure you want to delete this?\")){\r\n            props.close(); props.delete();\r\n          }\r\n        }}\r\n      >\r\n        <DeleteIcon />\r\n      </IconButton>\r\n    }\r\n    title={\r\n      props.type && (\r\n        \"Edit the \" +\r\n        (props.type === \"break\" ? \"break\" : (props.type === \"default\" && \"repetitive project\"))\r\n      )\r\n    }\r\n  />\r\n)\r\n\r\nexport default withEdit(EditProjectView)\r\n","import React, { Component } from 'react'\r\nimport { projectValidation, breakValidation } from '../util/validation'\r\nimport withInputFields from './withInputFields'\r\n\r\nconst withEdit = WrappedComponent => (\r\n  withInputFields(\r\n    class withEdit extends Component{\r\n      save = () => {\r\n        let { inputValues, type } = this.props\r\n\r\n        // validation\r\n        let validation\r\n        if(type === \"break\") validation = breakValidation(inputValues)\r\n        else validation = projectValidation(inputValues, type === \"default\")\r\n\r\n        if(!validation.valid){\r\n          let newState = this.props.showErrors\r\n          validation.errors.forEach(error => {\r\n            newState[error] = true\r\n          })\r\n          this.props.setState(newState)\r\n          return\r\n        }\r\n\r\n        // call the props function\r\n        this.props.onDoneEditing(this.props.inputValues)\r\n      }\r\n\r\n      handleKeyPress = e => {if(e.key === \"Enter\") this.save()}\r\n\r\n      render = () => (\r\n        <WrappedComponent\r\n          {...this.props}\r\n          save={this.save}\r\n          onKeyPress={this.handleKeyPress}\r\n        />\r\n      )\r\n    }\r\n  )\r\n)\r\n\r\nexport default withEdit\r\n","import React from 'react'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport './css/AddFab.css'\r\n\r\nconst AddFab = props => (\r\n  <Fab\r\n    onClick={props.onClick}\r\n    color=\"primary\"\r\n    className=\"AddFab\"\r\n    aria-label=\"Add a project\"\r\n  >\r\n    <AddIcon />\r\n  </Fab>\r\n)\r\n\r\nexport default AddFab\r\n","import React from 'react'\r\nimport BackButton from './BackButton'\r\nimport AddFab from '../AddFab'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport TimeCalc from '../util/TimeCalc'\r\nimport { SettingsContext } from '../_Context'\r\nimport '../css/BreaksView.css'\r\n\r\nconst BreaksView = props => (\r\n  <Grid className=\"BreaksView container\">\r\n    <BackButton onClick={props.changeView.bind(this, \"breaks\", false)} />\r\n    <Typography variant=\"h6\" className=\"title\">\r\n      Breaks\r\n    </Typography>\r\n    <Table>\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell>Name</TableCell>\r\n          <TableCell>Time</TableCell>\r\n          <TableCell/>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {props.breaks.length ? (\r\n          props.breaks.map(breakInfo => (\r\n            <TableRow key={breakInfo.id}>\r\n              <TableCell>\r\n                {breakInfo.name}\r\n              </TableCell>\r\n              <TableCell>\r\n                <SettingsContext.Consumer>\r\n                  {settings => (\r\n                    TimeCalc.makeString(\r\n                      breakInfo.startTime,\r\n                      breakInfo.startTime.pm !== breakInfo.endTime.pm,\r\n                      true,\r\n                      settings.timeFormat24H\r\n                    ) + \"-\" + TimeCalc.makeString(\r\n                      breakInfo.endTime,\r\n                      true,\r\n                      true,\r\n                      settings.timeFormat24H\r\n                    )\r\n                  )}\r\n                </SettingsContext.Consumer>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IconButton onClick={props.changeView.bind(this, \"edit\", true, {type: \"break\", id: breakInfo.id})}>\r\n                  <EditIcon />\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))\r\n        ) : (\r\n          <TableRow>\r\n            <TableCell colSpan={4}>You haven't set any breaks</TableCell>\r\n          </TableRow>\r\n        )}\r\n      </TableBody>\r\n    </Table>\r\n    <AddFab onClick={props.changeView.bind(this, \"add\", true, {type: \"break\"})} />\r\n  </Grid>\r\n)\r\n\r\nexport default BreaksView\r\n","import React from 'react';\r\nimport TimeSetter from './TimeSetter'\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nconst SetStartTimeCell = props => (\r\n  <TableCell className=\"setStartTimeCell\">\r\n    <div className=\"setStartTimeLabelDiv\">\r\n      <label htmlFor={props.firstInputId}>\r\n        Start:\r\n      </label>\r\n    </div>\r\n    <TimeSetter\r\n      onChange={props.onChange}\r\n      value={props.value}\r\n      firstInputId={props.firstInputId}\r\n      hError={props.hError}\r\n      mError={props.mError}\r\n      onEnterPress={props.onEnterPress}\r\n    />\r\n  </TableCell>\r\n)\r\n\r\nexport default SetStartTimeCell\r\n","import React, { Component } from 'react';\r\nimport Input from '@material-ui/core/Input';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport TimeCalc from './util/TimeCalc'\r\nimport './css/SetProgressPopoverContent.css'\r\n\r\nexport default class SetProgressPopoverContent extends Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n    let progress = TimeCalc.subtractToMinutes(props.currentTime, props.row.startedWorkingOnIt, true)\r\n    if(props.row.progress) progress = progress + parseInt(props.row.progress)\r\n\r\n    this.state = {progress}\r\n  }\r\n\r\n  handleInputChange = e => {\r\n    let val = e.target.value\r\n\r\n    if(isNaN(val)) return\r\n\r\n    this.setState({progress: val})\r\n  }\r\n\r\n  save = () => {\r\n    this.props.onPause(this.props.row.id, \"paused\", this.state.progress)\r\n  }\r\n\r\n  render = () => (\r\n    <div className=\"SetProgressPopoverContent\">\r\n      <span>I've worked on this for </span>\r\n      <Input\r\n        autoFocus\r\n        aria-label=\"Progress in minutes\"\r\n        value={this.state.progress || \"\"}\r\n        onChange={this.handleInputChange}\r\n        onKeyPress={e => {if(e.key === \"Enter\") this.save()}}\r\n      />\r\n      <span> minutes</span>\r\n      <IconButton\r\n        aria-label=\"Save the progress and pause the project\"\r\n        onClick={this.save}\r\n        color=\"primary\">\r\n        <DoneIcon />\r\n      </IconButton>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport SetProgressPopoverContent from './SetProgressPopoverContent'\r\nimport Popover from '@material-ui/core/Popover';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\n\r\nexport default class SetProgressAndPauseButton extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      anchorEl: null\r\n    }\r\n  }\r\n\r\n  handleClick = e => {\r\n    this.setState({anchorEl: e.currentTarget})\r\n  }\r\n\r\n  close = () => {\r\n    this.setState({anchorEl: null})\r\n  }\r\n\r\n  render(){\r\n    let anchorEl = this.state.anchorEl\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton  aria-label=\"Pause the project\" onClick={this.handleClick}>\r\n          <PauseIcon />\r\n        </IconButton>\r\n\r\n        <Popover\r\n          open={Boolean(anchorEl)}\r\n          anchorEl={anchorEl}\r\n          onClose={this.close}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n          }}\r\n        >\r\n          <SetProgressPopoverContent {...this.props} />\r\n        </Popover>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport SetProgressPopoverContent from './SetProgressPopoverContent'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport './css/ChangeProjectStateDropdown.css'\r\n\r\nexport default class ChangeProjectStateDropdown extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      anchorEl: null,\r\n      showSetProgress: false\r\n    }\r\n  }\r\n\r\n  open = e => {\r\n    this.setState({anchorEl: e.currentTarget})\r\n  }\r\n\r\n  close = () => {\r\n    this.setState({anchorEl: null})\r\n    setTimeout(() => {\r\n      this.setState({showSetProgress: false})\r\n    }, 500)\r\n  }\r\n\r\n  render = () => {\r\n    let {anchorEl} = this.state\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          aria-label=\"Open the project state dropdown\"\r\n          onClick={this.open}\r\n          color=\"primary\">\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Popover\r\n          className=\"ChangeProjectStateDropdownMenu\"\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={this.close}\r\n        >\r\n          {\r\n            this.state.showSetProgress ? (\r\n              <SetProgressPopoverContent\r\n                onPause={this.props.onProjectStateChange}\r\n                row={this.props.row}\r\n                currentTime={this.props.currentTime}\r\n              />\r\n            ) : (\r\n              <List>\r\n                {\r\n                  [\r\n                    {\r\n                      title: \"Pause\",\r\n                      icon: <PauseIcon/>,\r\n                      onClick: this.setState.bind(this, {showSetProgress: true}, null),\r\n                    },\r\n                    {\r\n                      title: \"Done\",\r\n                      icon: <DoneIcon color=\"primary\" />,\r\n                      onClick: this.props.onProjectStateChange.bind(this, this.props.row.id, \"done\"),\r\n                    }\r\n                  ].map(el => (\r\n                    <ListItem key={el.title} button onClick={el.onClick}>\r\n                      {el.icon}\r\n                      {el.title}\r\n                    </ListItem>\r\n                  ))\r\n                }\r\n              </List>\r\n            )\r\n          }\r\n        </Popover>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport SetProgressAndPauseButton from './SetProgressAndPauseButton'\r\nimport ChangeProjectStateDropdown from './ChangeProjectStateDropdown'\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport StartIcon from '@material-ui/icons/PlayArrow';\r\nimport UndoIcon from '@material-ui/icons/Undo';\r\nimport './css/ChangeProjectStateCell.css'\r\n\r\nexport default function ChangeProjectStateCell(props){\r\n  let content = []\r\n  if(props.row.state === \"done\"){\r\n    if(!props.isMobile) content.push(<span key=\"doneSpan\" className=\"done\">DONE</span>)\r\n    content.push(\r\n      <IconButton\r\n        key=\"undo\"\r\n        aria-label=\"Mark project as undone\"\r\n        onClick={props.onProjectStateChange.bind(this, props.row.id, \"paused\")}\r\n      >\r\n        <UndoIcon/>\r\n      </IconButton>\r\n    )\r\n  }\r\n  else{\r\n    if(props.row.state === \"workingOnIt\"){\r\n      if(props.isMobile){\r\n        content.push(\r\n          <ChangeProjectStateDropdown\r\n            key=\"dropdown\"\r\n            row={props.row}\r\n            currentTime={props.currentTime}\r\n            onProjectStateChange={props.onProjectStateChange}\r\n          />\r\n        )\r\n      }\r\n      else{\r\n        content.push(\r\n          <SetProgressAndPauseButton\r\n            key=\"pause\"\r\n            row={props.row}\r\n            currentTime={props.currentTime}\r\n            onPause={props.onProjectStateChange} />\r\n        )\r\n      }\r\n    }\r\n    else{\r\n      content.push(\r\n        <IconButton\r\n          key=\"start\"\r\n          aria-label=\"Start working on the project\"\r\n          onClick={props.onProjectStateChange.bind(this, props.row.id, \"workingOnIt\")}\r\n          color=\"primary\"\r\n        >\r\n          <StartIcon />\r\n        </IconButton>\r\n      )\r\n    }\r\n\r\n    if(!props.isMobile){\r\n      content.push(\r\n        <IconButton\r\n          key=\"done\"\r\n          aria-label=\"Mark the project as done\"\r\n          onClick={props.onProjectStateChange.bind(this, props.row.id, \"done\")}\r\n          color={props.row.state === \"workingOnIt\" ? \"primary\" : undefined}>\r\n          <DoneIcon />\r\n        </IconButton>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TableCell className=\"ChangeProjectStateCell\">\r\n      {content.map(el => el)}\r\n    </TableCell>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from './ColorPicker'\r\nimport SetStartTimeCell from './SetStartTimeCell'\r\nimport ChangeProjectStateCell from './ChangeProjectStateCell'\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport RootRef from '@material-ui/core/RootRef';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport TimeCalc from './util/TimeCalc'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { projectValidation, inputValidation } from './util/validation'\r\nimport { SettingsContext, IsMobileContext } from './_Context'\r\nimport './css/ProjectsTableRow.css'\r\n\r\nexport default class ProjectsTableRow extends Component {\r\n  constructor(props){\r\n    super(props)\r\n\r\n    let defaultState = {\r\n      editing: false,\r\n      values: {\r\n        name: this.props.row.name,\r\n        duration: this.props.row.estimatedDuration\r\n      },\r\n      showErrors: {}\r\n    }\r\n\r\n    if(!this.props.isDefaultProjects) defaultState.values.startTime = this.props.row.plannedTime.start\r\n\r\n    this.state = defaultState\r\n  }\r\n\r\n  startEditing = () =>{\r\n    let newState = {\r\n      values: this.state.values\r\n    }\r\n    newState.editing = true\r\n\r\n    // get the startTime from props again in case it changed via drag n drop\r\n    // (unless we're dealing with defaultProjects)\r\n    if(!this.props.isDefaultProjects){\r\n      newState.values.startTime = Object.assign({}, this.props.row.plannedTime.start)\r\n    }\r\n\r\n    this.setState(newState)\r\n  }\r\n\r\n  handleInputChange(id, e){\r\n    let val = e.target.value\r\n    // validation\r\n    if(!inputValidation(id, val)) return\r\n\r\n    let newState = {values: this.state.values, showErrors: this.state.showErrors}\r\n    newState.values[id] = val\r\n    newState.showErrors[id] = false\r\n    this.setState(newState)\r\n  }\r\n\r\n  handleStartTimeChange = (id, val) => {\r\n    let newState = {values: this.state.values, showErrors: this.state.showErrors}\r\n\r\n    if(id === \"object\") newState.values.startTime = val\r\n    else newState.values.startTime[id] = val\r\n\r\n    newState.showErrors[\"startTime\" + id.toUpperCase()] = false\r\n    this.setState(newState)\r\n  }\r\n\r\n  save = () => {\r\n    // validation\r\n    let validation = projectValidation(this.state.values, this.props.isDefaultProjects)\r\n    if(!validation.valid){\r\n      let newState = this.state.showErrors\r\n      validation.errors.forEach(error => {\r\n        newState[error] = true\r\n      })\r\n      this.setState(newState)\r\n      return\r\n    }\r\n\r\n    this.props.onDoneEditing(this.props.row.id, this.state.values)\r\n    this.setState({editing: false})\r\n  }\r\n\r\n  handleKeyPress = e => {if(e.key === \"Enter\") this.save()}\r\n\r\n  render(){\r\n    let showEditing = this.state.editing && this.props.mode === \"planning\"\r\n\r\n    let progress, stateClass, startIsTooLate, endIsTooLate, timeLeft\r\n    let tableRowStyle = {}\r\n    if(!this.props.isDefaultProjects){\r\n      // calculate progress\r\n      if(this.props.row.progress) progress = parseInt(this.props.row.progress)\r\n      else progress = 0\r\n      if(this.props.row.state === \"workingOnIt\"){\r\n        progress += TimeCalc.subtractToMinutes(this.props.currentTime, this.props.row.startedWorkingOnIt, true)\r\n      }\r\n\r\n      let progressCapped = progress // same as progress except capped at estimatedDuration\r\n      if(progressCapped > this.props.row.estimatedDuration) progressCapped = this.props.row.estimatedDuration\r\n\r\n      timeLeft = parseInt(this.props.row.estimatedDuration) - progressCapped\r\n\r\n      // get the stateClass (too late or done) and tableRowStyle (to display progress)\r\n      startIsTooLate = !TimeCalc.isBiggerThan(\r\n        TimeCalc.add(this.props.row.plannedTime.start, progressCapped),\r\n        this.props.currentTime, true, true)\r\n      endIsTooLate = !TimeCalc.isBiggerThan(this.props.row.plannedTime.end, this.props.currentTime, true, true)\r\n\r\n      let percentageDone\r\n\r\n      if(this.props.row.state === \"done\"){\r\n        percentageDone = 100\r\n        stateClass = \"stateClassDone\"\r\n      }\r\n      else{\r\n        if(startIsTooLate && this.props.row.state !== \"workingOnIt\") stateClass = \"stateClassTooLate\"\r\n        percentageDone = 100 * progressCapped / this.props.row.estimatedDuration\r\n      }\r\n\r\n      tableRowStyle = {\r\n        backgroundImage: `linear-gradient(to right, #00c8002e, #00c8002e ${percentageDone}%, transparent ${percentageDone}%, transparent 100%)`\r\n      }\r\n    }\r\n\r\n    return (\r\n      <IsMobileContext.Consumer>\r\n        {isMobile => (\r\n          <RootRef rootRef={this.props.provided.innerRef}>\r\n            <TableRow\r\n              {...this.props.provided.draggableProps}\r\n              style={/* merging the two style objects */{\r\n                ...this.props.provided.draggableProps.style,\r\n                ...tableRowStyle\r\n              }}\r\n            >\r\n              <TableCell>\r\n                <Icon className=\"dragIcon\" {...this.props.provided.dragHandleProps}>drag_indicator</Icon>\r\n                <ColorPicker value={this.props.row.color} onChange={this.props.onColorChange.bind(this, this.props.row.id)}/>\r\n              </TableCell>\r\n\r\n              <TableCell className={showEditing ? \"setNameCell\" : stateClass}>\r\n                {showEditing ? (\r\n                  <Input\r\n                    value={this.state.values.name}\r\n                    onChange={this.handleInputChange.bind(this, \"name\")}\r\n                    placeholder=\"Name\"\r\n                    aria-label=\"Name\"\r\n                    error={this.state.showErrors.name}\r\n                    onKeyPress={this.handleKeyPress}\r\n                  />\r\n                ) : this.props.row.name}\r\n              </TableCell>\r\n              {(!isMobile || this.props.isDefaultProjects) && (\r\n                <TableCell className={showEditing ? \"setDurationCell\" : null}>\r\n                  {showEditing ? (\r\n                    <Input\r\n                      value={this.state.values.duration}\r\n                      onChange={this.handleInputChange.bind(this, \"duration\")}\r\n                      placeholder=\"Duration\"\r\n                      aria-label=\"Duration\"\r\n                      error={this.state.showErrors.duration}\r\n                      onKeyPress={this.handleKeyPress}\r\n                    />\r\n                  ) : (\r\n                    progress && this.props.row.state !== \"done\" ? (\r\n                      <Tooltip title={progress + \"/\" + this.props.row.estimatedDuration + \" done\"}>\r\n                        <span>\r\n                          {timeLeft} minutes left\r\n                        </span>\r\n                      </Tooltip>\r\n                    ) : (\r\n                      this.props.row.estimatedDuration + \" minutes\"\r\n                    )\r\n                  )}\r\n                </TableCell>\r\n              )}\r\n\r\n              {!this.props.isDefaultProjects && (showEditing ? (\r\n                <SetStartTimeCell\r\n                  value={this.state.values.startTime}\r\n                  onChange={this.handleStartTimeChange}\r\n                  firstInputId={\"changeStartTimeInput\" + this.props.row.id}\r\n                  hError={this.state.showErrors.startTimeH}\r\n                  mError={this.state.showErrors.startTimeM}\r\n                  onEnterPress={this.save}\r\n                />\r\n              ) : (\r\n                <SettingsContext.Consumer>\r\n                  {settings => (\r\n                    <TableCell className={showEditing ? \"setStartTimeCell\" : null}>\r\n                      <span className={startIsTooLate && stateClass === \"stateClassTooLate\"  ? stateClass : null}>\r\n                        {TimeCalc.makeString(this.props.row.plannedTime.start,\r\n                          this.props.row.plannedTime.start.pm !== this.props.row.plannedTime.end.pm,\r\n                          true,\r\n                          settings.timeFormat24H\r\n                        ) /*showPmOrAm only if it's different from the endTime*/}\r\n                      </span>\r\n                      <span className={startIsTooLate && endIsTooLate && stateClass === \"stateClassTooLate\" ? stateClass : null}>\r\n                        -\r\n                      </span>\r\n                      <span className={endIsTooLate && stateClass !== \"stateClassDone\" ? \"stateClassTooLate\" : null}>\r\n                        {TimeCalc.makeString(this.props.row.plannedTime.end, true, false, settings.timeFormat24H)}\r\n                      </span>\r\n                    </TableCell>\r\n                  )}\r\n                </SettingsContext.Consumer>\r\n              ))}\r\n\r\n              {this.props.mode === \"planning\" ? (\r\n                <TableCell>\r\n                  {showEditing ? (\r\n                    <IconButton\r\n                      aria-label=\"Save changes\"\r\n                      onClick={this.save}\r\n                      color=\"primary\">\r\n                      <DoneIcon />\r\n                    </IconButton>\r\n                  ) : (\r\n                    <IconButton\r\n                      aria-label=\"Edit the project\"\r\n                      onClick={isMobile ? this.props.startEditingMobile.bind(this, this.props.row.id) : this.startEditing}>\r\n                      <EditIcon />\r\n                    </IconButton>\r\n                  )}\r\n                  {\r\n                    !isMobile && (\r\n                      <IconButton\r\n                        aria-label=\"Delete the project\"\r\n                        onClick={this.props.onDeleteProject.bind(this, this.props.row.id)}\r\n                        className=\"deleteIconButton\">\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    )\r\n                  }\r\n                </TableCell>\r\n              ) : (\r\n                <ChangeProjectStateCell\r\n                  row={this.props.row}\r\n                  onProjectStateChange={this.props.onProjectStateChange}\r\n                  currentTime={this.props.currentTime}\r\n                  isMobile={isMobile}\r\n                />\r\n              )}\r\n            </TableRow>\r\n          </RootRef>\r\n        )}\r\n      </IsMobileContext.Consumer>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ColorPicker from './ColorPicker'\r\nimport SetStartTimeCell from './SetStartTimeCell'\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Input from '@material-ui/core/Input';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport withAdd from './HOCs/withAdd'\r\nimport './css/AddProjectRow.css'\r\n\r\nconst AddProjectRow = props => (\r\n  <TableRow id=\"addProjectRow\">\r\n    <TableCell>\r\n      <ColorPicker\r\n        value={props.inputValues.color}\r\n        onChange={props.onColorChange} />\r\n    </TableCell>\r\n    <TableCell className=\"setNameCell\">\r\n      <div id=\"addProjectLabelDiv\">\r\n        <label htmlFor=\"addProjectNameInput\">\r\n          Add a project:\r\n        </label>\r\n      </div>\r\n      <Input\r\n        onChange={props.onInputChange.bind(this, \"name\")}\r\n        value={props.inputValues.name}\r\n        placeholder=\"Name\"\r\n        aria-label=\"Name\"\r\n        error={props.showErrors.name || props.showErrorProp}\r\n        onKeyPress={props.onKeyPress}\r\n        id=\"addProjectNameInput\"\r\n        autoFocus\r\n      />\r\n    </TableCell>\r\n    <TableCell className=\"setDurationCell\">\r\n      <Input\r\n        onChange={props.onInputChange.bind(this, \"duration\")}\r\n        value={props.inputValues.duration}\r\n        placeholder=\"Duration\"\r\n        aria-label=\"Duration\"\r\n        error={props.showErrors.duration || props.showErrorProp}\r\n        onKeyPress={props.onKeyPress}\r\n      /> minutes\r\n    </TableCell>\r\n    {!props.isDefaultProjects && (\r\n      <SetStartTimeCell\r\n        onChange={props.onStartTimeChange}\r\n        value={props.inputValues.startTime}\r\n        firstInputId=\"setStartTimeInput\"\r\n        hError={props.showErrors.startTimeH || props.showErrorProp}\r\n        mError={props.showErrors.startTimeM || props.showErrorProp}\r\n        showErrors={props.showErrors}\r\n        onEnterPress={props.add}\r\n      />\r\n    )}\r\n    <TableCell>\r\n      <IconButton color=\"primary\"\r\n        style={{color: props.showErrorProp ? \"red\" : null}}\r\n        aria-label=\"Add the new project\"\r\n        onClick={props.add}>\r\n        <AddIcon />\r\n      </IconButton>\r\n    </TableCell>\r\n  </TableRow>\r\n)\r\n\r\nexport default withAdd(AddProjectRow)\r\n","import React from 'react';\r\nimport ProjectsTableRow from './ProjectsTableRow'\r\nimport AddProjectRow from './AddProjectRow'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport RootRef from '@material-ui/core/RootRef';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport './css/DefaultProjectsDrawer.css'\r\n\r\nconst DefaultProjectsDrawer = props => {\r\n  let header = (\r\n    <React.Fragment>\r\n      <Grid>\r\n        <Typography variant=\"h6\" className=\"drawerTitle\">Repetitive projects:</Typography>\r\n      </Grid>\r\n      <Grid>\r\n        <label>\r\n          Use repetitive projects\r\n          <Switch\r\n            color=\"primary\"\r\n            checked={props.useDefaultProjects && props.useDefaultProjects !== \"false\" /*handle string input*/}\r\n            onChange={props.onUseDefaultProjectsChange}\r\n            aria-label=\"Use default projects\"\r\n          />\r\n        </label>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.mobile ? header : <Grid container justify=\"space-between\">{header}</Grid>}\r\n      <Table className=\"projectsTable\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell/>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Duration</TableCell>\r\n            <TableCell/>\r\n          </TableRow>\r\n        </TableHead>\r\n        <DragDropContext onDragEnd={props.onDragEnd}>\r\n          <Droppable droppableId=\"0\">\r\n            {provided =>(\r\n              <RootRef rootRef={provided.innerRef}>\r\n                <TableBody {...provided.droppableProps}>\r\n                  {!props.projects.length && (\r\n                    <TableRow>\r\n                      <TableCell/>\r\n                      <TableCell colSpan={2}>\r\n                        You haven't set any repetitive projects yet\r\n                      </TableCell>\r\n                      <TableCell/>\r\n                    </TableRow>\r\n                  )}\r\n                  {props.projects.map((project, i) => (\r\n                    <Draggable key={project.id} draggableId={project.id.toString()} index={i}>\r\n                      {provided2 => (\r\n                        <ProjectsTableRow\r\n                          mode=\"planning\"\r\n                          row={project}\r\n                          currentTime={props.currentTime}\r\n                          provided={provided2}\r\n                          onColorChange={props.onColorChange}\r\n                          onDoneEditing={props.onDoneEditing}\r\n                          onProjectStateChange={props.onProjectStateChange}\r\n                          onDeleteProject={props.onDeleteProject}\r\n                          isDefaultProjects={true}\r\n                          startEditingMobile={props.startEditingMobile}\r\n                        />\r\n                      )}\r\n                    </Draggable>\r\n                    ))}\r\n                  {provided.placeholder}\r\n                  {\r\n                    !props.mobile && (\r\n                      <AddProjectRow\r\n                        settings={props.settings}\r\n                        defaultColorIndex={props.defaultColorIndex}\r\n                        showErrors={{}}\r\n                        lastProject={props.projects[props.projects.length - 1]}\r\n                        onAddProject={props.onAddProject}\r\n                        isDefaultProjects={true}\r\n                      />\r\n                    )\r\n                  }\r\n                </TableBody>\r\n              </RootRef>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      </Table>\r\n      {\r\n        !props.mobile && (\r\n          <Grid container justify=\"center\">\r\n            <Button\r\n              onClick={props.onClose}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{margin: \".5rem\"}}>\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n        )\r\n      }\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default DefaultProjectsDrawer\r\n","import React from 'react'\r\nimport BackButton from './BackButton'\r\nimport DefaultProjectsDrawer from '../DefaultProjectsDrawer'\r\nimport AddFab from '../AddFab'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst DefaultProjectsView = props => {\r\n  let { changeView, ...passThoughProps } = props\r\n\r\n  return (\r\n    <Grid className=\"DefaultProjectsView container\">\r\n      <BackButton onClick={changeView.bind(this, \"defaultProjects\", false)} />\r\n      <DefaultProjectsDrawer {...passThoughProps} mobile />\r\n      <AddFab onClick={changeView.bind(this, \"add\", true, {type: \"default\"})} />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default DefaultProjectsView\r\n","import React from 'react';\r\nimport Fab from '@material-ui/core/Fab'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport './css/ModeSwitch.css'\r\n\r\nexport default function ModeSwitch(props) {\r\n  let buttonsArray = [{label: \"Plan\", val: \"planning\"}, {label: \"Work\", val: \"working\"}]\r\n  let buttons = buttonsArray.map(el => (\r\n    <Grid key={el.val}>\r\n      <Fab\r\n        onClick={props.onModeChange.bind(this, el.val)}\r\n        color={el.val === props.mode ? 'primary' : null}>\r\n        {el.label}\r\n      </Fab>\r\n    </Grid>\r\n  ))\r\n\r\n  return (\r\n    <Grid\r\n      className=\"ModeSwitch\"\r\n      container\r\n      alignItems='baseline'\r\n      justify=\"space-between\">\r\n      {buttons[0]}\r\n      {props.children}\r\n      {buttons[1]}\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ProjectsTableRow from './ProjectsTableRow'\r\nimport AddProjectRow from './AddProjectRow'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport RootRef from '@material-ui/core/RootRef';\r\nimport { IsMobileContext } from './_Context'\r\nimport './css/ProjectsTable.css'\r\n\r\nconst ProjectsTable = props => (\r\n  <IsMobileContext.Consumer>\r\n    {isMobile => (\r\n      <Table id=\"ProjectsTable\"  className=\"projectsTable\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell/>\r\n            <TableCell>Name</TableCell>\r\n            {!isMobile && <TableCell>Duration estimate</TableCell>}\r\n            <TableCell>{isMobile ? \"Time\" : \"Planned time\"}</TableCell>\r\n            <TableCell/>\r\n          </TableRow>\r\n        </TableHead>\r\n        <DragDropContext onDragEnd={props.onDragEnd}>\r\n          <Droppable droppableId=\"0\">\r\n            {provided => (\r\n              <RootRef rootRef={provided.innerRef}>\r\n                <TableBody {...provided.droppableProps}>\r\n                  {!props.projects.length && (\r\n                    <TableRow>\r\n                      <TableCell/>\r\n                      <TableCell\r\n                        colSpan={isMobile ? 2 : 3}\r\n                        style={props.showErrors.noProjects ? {\r\n                          color: \"red\",\r\n                          fontWeight: 500\r\n                        } : null}\r\n                      >\r\n                        You haven't set any projects yet\r\n                      </TableCell>\r\n                      <TableCell/>\r\n                    </TableRow>\r\n                  )}\r\n                  {props.projects.map((row, i) => (\r\n                    <Draggable key={row.id} draggableId={row.id.toString()} index={i}>\r\n                      {provided => (\r\n                        <ProjectsTableRow\r\n                          mode={props.mode}\r\n                          row={row}\r\n                          currentTime={props.currentTime}\r\n                          provided={provided}\r\n                          onColorChange={props.onColorChange}\r\n                          onDoneEditing={props.onDoneEditing}\r\n                          onProjectStateChange={props.onProjectStateChange}\r\n                          onDeleteProject={props.onDeleteProject}\r\n                          startEditingMobile={props.startEditingMobile}\r\n                        />\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                  {\r\n                    // if in planning mode..\r\n                    props.mode === \"planning\" && !isMobile && (\r\n                      <AddProjectRow\r\n                        settings={props.settings}\r\n                        defaultColorIndex={props.defaultColorIndex}\r\n                        showErrors={props.showErrors}\r\n                        lastProject={props.projects[props.projects.length - 1]}\r\n                        onAddProject={props.onAddProject}\r\n                      />\r\n                    )\r\n                  }\r\n                </TableBody>\r\n              </RootRef>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      </Table>\r\n    )}\r\n  </IsMobileContext.Consumer>\r\n)\r\n\r\nexport default ProjectsTable\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport TimeCalc from './util/TimeCalc'\r\nimport './css/TimeStatsModal.css'\r\n\r\nfunction addToDoughnutData(doughnutData, project, progress){\r\n  doughnutData.datasets[0].backgroundColor.push(project.color)\r\n  doughnutData.datasets[0].data.push(progress)\r\n  doughnutData.labels.push(project.name)\r\n\r\n  if(project.estimatedDuration){\r\n    doughnutData.datasets[1].backgroundColor.push(project.color)\r\n    doughnutData.datasets[1].data.push(project.estimatedDuration)\r\n  }\r\n}\r\n\r\nconst TimeStatsModal = props => {\r\n  let { timeFormat24H, roundTo, bufferTimePercentage } = props.settings\r\n\r\n  let predictedEndTime = TimeCalc.round(TimeCalc.add(props.currentTime, props.stats.timeNeeded), roundTo)\r\n  let plannedMinusPredictedEndTimePositive = TimeCalc.isBiggerThan(props.endTime, predictedEndTime, false, true)\r\n  // make sure the input to makeString is positive\r\n  let plannedMinusPredictedEndTime\r\n  if(plannedMinusPredictedEndTimePositive){\r\n    plannedMinusPredictedEndTime = TimeCalc.round(TimeCalc.subtract(props.endTime, predictedEndTime, true), roundTo)\r\n  }\r\n  else{\r\n    plannedMinusPredictedEndTime = TimeCalc.round(TimeCalc.subtract(predictedEndTime, props.endTime, true), roundTo)\r\n  }\r\n\r\n  let totalDoneTimeSoFar = 0, totalTimeToBeDone = 0, predictedUnproductiveTime = 0\r\n  let doughnutData = {\r\n    datasets: [\r\n      {\r\n        label: \"Actual\",\r\n        backgroundColor: [],\r\n        data: []\r\n      },\r\n      {\r\n        label: \"Planned\",\r\n        backgroundColor: [],\r\n        data: []\r\n      }\r\n    ],\r\n    labels: []\r\n  }\r\n  props.projects.forEach(project => {\r\n    let duration = parseInt(project.estimatedDuration)\r\n    if(project.state === \"done\"){\r\n      totalDoneTimeSoFar += duration\r\n      addToDoughnutData(doughnutData, project, duration)\r\n    }\r\n    else{\r\n      let progress = 0\r\n      if(project.progress) progress += parseInt(project.progress)\r\n      if(project.state === \"workingOnIt\" && project.startedWorkingOnIt){\r\n        progress += TimeCalc.subtractToMinutes(props.currentTime, project.startedWorkingOnIt, true)\r\n      }\r\n\r\n      if(progress > duration) progress = duration\r\n\r\n      totalDoneTimeSoFar += progress\r\n      totalTimeToBeDone += (duration - progress)\r\n      addToDoughnutData(doughnutData, project, progress)\r\n    }\r\n\r\n    predictedUnproductiveTime += Math.round(duration * bufferTimePercentage)\r\n  })\r\n  let totalTimePassed = TimeCalc.subtractToMinutes(props.currentTime, props.startTime, true)\r\n  let timeUntilPredictedEndTime = TimeCalc.subtractToMinutes(predictedEndTime, props.currentTime, true)\r\n  let productivityPercentageSoFar = Math.round(100 * totalDoneTimeSoFar / totalTimePassed)\r\n  let predictedProductivityPercentage = Math.round(100 * (totalDoneTimeSoFar + totalTimeToBeDone) / (totalTimePassed + timeUntilPredictedEndTime))\r\n\r\n  // push the unproductive time so far to the doughnutData\r\n  let unproductiveTime = totalTimePassed - totalDoneTimeSoFar\r\n  addToDoughnutData(doughnutData, {name: \"Unproductive time\", color: \"#aaa\"}, unproductiveTime)\r\n\r\n  // finish calculating the predictedUnproductiveTime\r\n  for(let el of props.breaks){\r\n    predictedUnproductiveTime += TimeCalc.subtractToMinutes(el.endTime, el.startTime, true)\r\n  }\r\n\r\n  doughnutData.datasets[1].backgroundColor.push(\"#aaa\")\r\n  doughnutData.datasets[1].data.push(predictedUnproductiveTime)\r\n\r\n  return (\r\n    <div className=\"TimeStatsModal\">\r\n      <Typography variant=\"h6\">\r\n        You need {TimeCalc.makeFullLengthDurationString(props.stats.timeNeeded)}\r\n      </Typography>\r\n      <b>{TimeCalc.makeString(props.stats.totalProjectTime, false, false, timeFormat24H)}</b> for projects\r\n      <br/>\r\n      {TimeCalc.makeString(props.stats.totalBufferTime, false, false, timeFormat24H)} for buffers\r\n      <br/>\r\n      {TimeCalc.makeString(props.stats.totalBreakTime, false, false, timeFormat24H)} for breaks\r\n      <div className=\"section\">\r\n        At the current pace, you'll be done at <b>{TimeCalc.makeString(predictedEndTime, true, false, timeFormat24H)}</b>\r\n        <br/>\r\n        That's\r\n        <b>\r\n          <span> </span>\r\n          {TimeCalc.makeFullLengthDurationString(plannedMinusPredictedEndTime)}\r\n          <span> </span>\r\n          {plannedMinusPredictedEndTimePositive ? \"earlier\" : \"later\"}\r\n        </b>\r\n        <span> </span>\r\n        than what you planned\r\n      </div>\r\n      <div className=\"section\">\r\n        You've been productive <b>{productivityPercentageSoFar}%</b> of the time so far\r\n        <br/>\r\n        Assuming you're done at {TimeCalc.makeString(predictedEndTime, true, false, timeFormat24H)},\r\n        <br/>\r\n        your productivity percentage will be\r\n        <span> </span>\r\n        {predictedProductivityPercentage < productivityPercentageSoFar ? (\r\n          <Tooltip disableFocusListener disableTouchListener\r\n            title={\r\n              `Your predicted productivity percentage is lower then your current one because of buffer times.\r\n              You can learn more about buffer times in the about section.`\r\n            }\r\n          >\r\n            <b>\r\n              {predictedProductivityPercentage}%\r\n            </b>\r\n          </Tooltip>\r\n        ) : (\r\n          <b>\r\n            {predictedProductivityPercentage}%\r\n          </b>\r\n        )}\r\n      </div>\r\n      <div className=\"section\">\r\n        <Typography variant=\"h6\">\r\n          Your day so far:\r\n          <Tooltip disableFocusListener disableTouchListener\r\n            title={\r\n              `The inner circle represents your day as you planned it,\r\n              the outer one represents your day so far\r\n              (starting at ${TimeCalc.makeString(props.startTime, true, false, timeFormat24H)})`\r\n            }\r\n          >\r\n            <HelpIcon className=\"helperIcon\" />\r\n          </Tooltip>\r\n        </Typography>\r\n        <div>\r\n          <Doughnut\r\n            data={doughnutData}\r\n            width={250}\r\n            height={250}\r\n            options={{maintainAspectRatio: false, legend: {position: \"bottom\"}}}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimeStatsModal\r\n","import React, { Component } from 'react';\r\nimport TimeStatsModal from './TimeStatsModal'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TimeCalc from './util/TimeCalc'\r\nimport './css/TimeStats.css'\r\n\r\nexport default class TimeStats extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      currentTimeAvailable: false, // stores whether the currentTime has been set (to prevent unnecessary and useless calculation on load)\r\n      modalOpen: false\r\n    }\r\n\r\n    this.currentTimeUpdateInterval = setInterval(this.updateCurrentTime, 1000)\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.updateCurrentTime()\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    clearInterval(this.currentTimeUpdateInterval)\r\n  }\r\n\r\n  updateCurrentTime = () => {\r\n    let currentTime = new Date()\r\n    let m = currentTime.getMinutes()\r\n\r\n    this.setState({currentTimeAvailable: true})\r\n\r\n    // if it's still the same minute, there's no need to update the clock\r\n    // (and if this isn't the initial time setting)\r\n    if(m === this.props.currentTime.m && this.props.currentTime.h !== 0) return\r\n\r\n    // format the time\r\n    let h = currentTime.getHours()\r\n    let pm = h >= 12\r\n    h = h % 12\r\n    h = h === 0 ? 12 : h\r\n\r\n    // update the state\r\n    this.props.onCurrentTimeChange({h, m, pm})\r\n  }\r\n\r\n  openModal = () => {\r\n    this.setState({modalOpen: true})\r\n  }\r\n\r\n  render(){\r\n    // calculate the stats\r\n    // (if currentTime and settings are available)\r\n    let totalProjectTime, totalBufferTime, totalBreakTime, timeNeeded, timeRemaining, timeNeededWarning, timeRemainingNegative, timeRemainingWarning\r\n\r\n    if(this.state.currentTimeAvailable && this.props.settings.bufferTimePercentage){\r\n      totalProjectTime = totalBufferTime = 0\r\n      this.props.projects.forEach((project, i) => {\r\n        if(project.state !== \"done\"){\r\n          let durationLeft = parseInt(project.estimatedDuration)\r\n\r\n          let progress = parseInt(project.progress)\r\n          if(project.state === \"workingOnIt\" && project.startedWorkingOnIt){\r\n            progress += TimeCalc.subtractToMinutes(this.props.currentTime, project.startedWorkingOnIt, true)\r\n          }\r\n\r\n          if(progress){\r\n            if(progress > durationLeft) durationLeft = 0\r\n            else durationLeft -= progress\r\n          }\r\n\r\n          totalProjectTime += durationLeft\r\n\r\n          // if this isn't the last project, add a buffer time to the sum\r\n          if(i !== this.props.projects.length - 1){\r\n            totalBufferTime += Math.round(durationLeft * this.props.settings.bufferTimePercentage)\r\n          }\r\n        }\r\n      })\r\n      // round according to settings\r\n      totalProjectTime = Math.round(totalProjectTime / this.props.settings.roundTo) * this.props.settings.roundTo\r\n      totalBufferTime = Math.round(totalBufferTime / this.props.settings.roundTo) * this.props.settings.roundTo\r\n\r\n      totalBreakTime = 0\r\n      for(let el of this.props.breaks){\r\n        let endTime = TimeCalc.toMinutesSinceMidnight(el.endTime, true)\r\n        let currentTime = TimeCalc.toMinutesSinceMidnight(this.props.currentTime, true)\r\n\r\n        // if the break has already passed, don't count it in\r\n        if(TimeCalc.isBiggerThan(currentTime, endTime, false)) continue\r\n\r\n        let startTime = TimeCalc.toMinutesSinceMidnight(el.startTime, true)\r\n\r\n        // if the break hasn't started yet\r\n        if(TimeCalc.isBiggerThan(startTime, currentTime, true)){\r\n          totalBreakTime += TimeCalc.subtractToMinutes(endTime, startTime, true)\r\n        }\r\n        // if the break has started and is currently going on\r\n        else totalBreakTime += TimeCalc.subtractToMinutes(endTime, currentTime, true)\r\n      }\r\n      // round totalBreakTime according to settings\r\n      totalBreakTime = Math.round(totalBreakTime / this.props.settings.roundTo) * this.props.settings.roundTo\r\n\r\n      timeNeeded = TimeCalc.toTimeObject(TimeCalc.addToMinutes(totalProjectTime, totalBufferTime, totalBreakTime), false)\r\n      timeRemaining = TimeCalc.subtract(this.props.endTime, this.props.currentTime, true)\r\n\r\n      // figure out which warnings to show\r\n      timeNeededWarning = TimeCalc.isBiggerThan(timeNeeded, timeRemaining, false, false)\r\n      timeRemainingNegative = !TimeCalc.isBiggerThan(timeRemaining, 0)\r\n      timeRemainingWarning = timeRemainingNegative && this.props.endTime.h !== \"\" && this.props.endTime.m !== \"\"\r\n    }\r\n    else{\r\n      // used if the currentTime or settings aren't available yet -> faster load time\r\n      totalProjectTime = totalBufferTime = totalBreakTime = 0\r\n      timeNeeded = timeRemaining = {h: 0, m: 0, pm: false}\r\n      timeNeededWarning = timeRemainingNegative = timeRemainingWarning = false\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Grid item className={\"timeStatsSideGridItem\" + (timeNeededWarning ? \" timeStatsWarning\" : \"\")}>\r\n          <Tooltip title={\r\n            \"Projects: \" + TimeCalc.makeString(totalProjectTime, false) +\r\n            \",\\nBuffers: \" + TimeCalc.makeString(totalBufferTime, false) +\r\n            \",\\nBreaks: \" + TimeCalc.makeString(totalBreakTime, false) + \" (click for more)\"\r\n          }>\r\n            <div onClick={this.openModal}>\r\n              <div className=\"timeStatsLabelDiv\">\r\n                <label>\r\n                  {this.props.shortLabels ? \"N\" : \"Time n\"}eeded:\r\n                </label>\r\n              </div>\r\n              {TimeCalc.makeString(timeNeeded, false)}\r\n            </div>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid item>\r\n          <h4>\r\n            {TimeCalc.makeString(this.props.currentTime, true, false, this.props.settings.timeFormat24H)}\r\n          </h4>\r\n        </Grid>\r\n        <Grid item className={\"timeStatsSideGridItem\" + (timeRemainingWarning ? \" timeStatsWarning\" : \"\")}>\r\n          <div onClick={this.openModal}>\r\n            <div className=\"timeStatsLabelDiv\">\r\n              <label>\r\n                {this.props.shortLabels ? \"R\" : \"Time r\"}emaining:\r\n              </label>\r\n            </div>\r\n            {timeRemainingNegative ? \"0:00\" : TimeCalc.makeString(timeRemaining, false)}\r\n          </div>\r\n        </Grid>\r\n        <Dialog\r\n          open={this.state.modalOpen}\r\n          onClose={() => {this.setState({modalOpen: false})}}\r\n          aria-label=\"Time Stats Modal\"\r\n        >\r\n          <TimeStatsModal\r\n            stats={{timeNeeded, totalProjectTime, totalBufferTime, totalBreakTime}}\r\n            {...this.props}\r\n          />\r\n        </Dialog>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","// objects is an array of projects or breaks, key is either \"projecs\" or \"breaks\"\r\nexport default function makeNewId(objects, key){\r\n  // make a new unique ID\r\n  let newId\r\n  let haveFoundUniqueId = false\r\n  while(!haveFoundUniqueId){\r\n    newId = Math.floor(Math.random() * 10**8)\r\n    haveFoundUniqueId = true\r\n\r\n    // make sure the ID is unique\r\n    for(let i = 0; i < objects.length; i++){\r\n      if(objects[i].id === newId){\r\n        haveFoundUniqueId = false\r\n        break\r\n      }\r\n    }\r\n    // make sure there aren't any lastModified fields in the localStorage either\r\n    if(haveFoundUniqueId){\r\n      let localStorageKey = [\"lastModified\", key, newId, \"id\"].join(\"_\")\r\n      if(!isNaN(localStorage[localStorageKey])) haveFoundUniqueId = false\r\n    }\r\n  }\r\n\r\n  return newId\r\n}\r\n","import React, { Component } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TimeSetter from './TimeSetter'\r\nimport TimeCalc from './util/TimeCalc'\r\nimport makeNewId from './util/makeNewId'\r\nimport './css/BreaksDrawer.css'\r\n\r\nexport default class BreaksDrawer extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    let breaks = JSON.parse(JSON.stringify(props.breaks))\r\n    let newBreak = {}\r\n\r\n    // if there are any breaks...\r\n    if(breaks.length){\r\n      // set the default value of newBreak\r\n      newBreak.startTime = TimeCalc.add(breaks[breaks.length - 1].endTime, 90)\r\n      newBreak.endTime = TimeCalc.add(newBreak.startTime, 60)\r\n    }\r\n\r\n    // if there aren't any, set the default value\r\n    else{\r\n      newBreak.startTime = TimeCalc.round(TimeCalc.add(props.currentTime, 90), 15)\r\n      newBreak.endTime = TimeCalc.add(newBreak.startTime, 60)\r\n    }\r\n\r\n    newBreak.name = \"\"\r\n\r\n    // store the length of breaks\r\n    let breakDurations = {\r\n      new: 30\r\n    }\r\n    for(let i = 0; i < breaks.length; i++){\r\n      let breakId = breaks[i].id\r\n      breakDurations[breakId] = TimeCalc.subtractToMinutes(breaks[i].endTime, breaks[i].startTime, true)\r\n    }\r\n\r\n    this.state = {\r\n      breaks,\r\n      newBreak,\r\n      breakDurations,\r\n      errors: {},\r\n      showEndTimeErrors: {},\r\n      temp: {\r\n        showEndTimeErrors: {}\r\n      }\r\n    }\r\n  }\r\n\r\n  handleInputChange(breakId, propertyId, e){\r\n    let val = e.target.value\r\n\r\n    if(breakId === \"new\"){\r\n      let newBreak = this.state.newBreak\r\n      newBreak[propertyId] = val\r\n      this.setState({newBreak})\r\n    }\r\n    else{\r\n      let breaks = this.state.breaks\r\n      let index = breaks.findIndex(el => el.id === breakId)\r\n      breaks[index][propertyId] = val\r\n\r\n      this.setState({breaks})\r\n      this.props.onSave(breaks, {breaks: breakId})\r\n    }\r\n  }\r\n\r\n  validateEndTime = (breakId, startTime, endTime) => {\r\n    let temp = this.state.temp\r\n    let showEndTimeErrors = this.state.showEndTimeErrors\r\n\r\n    let success\r\n\r\n    if(!TimeCalc.isBiggerThan(endTime, startTime, false, true)){\r\n      success = false\r\n\r\n      temp.showEndTimeErrors[breakId] = setTimeout(() => {\r\n        this.setState({\r\n          showEndTimeErrors: {\r\n            ...this.state.showEndTimeErrors,\r\n            [breakId]: true\r\n          }\r\n        })\r\n      }, 500)\r\n    }\r\n    else{\r\n      success = true\r\n\r\n      showEndTimeErrors[breakId] = false\r\n      clearTimeout(temp.showEndTimeErrors[breakId])\r\n    }\r\n\r\n    this.setState({temp, showEndTimeErrors})\r\n    return success\r\n  }\r\n\r\n  handleTimeInputChange(breakId, propertyId, inputId, val){\r\n    if(breakId === \"new\"){\r\n      let newBreak = this.state.newBreak\r\n      let breakDurations = this.state.breakDurations\r\n\r\n      if(inputId === \"object\") newBreak[propertyId] = val\r\n      else newBreak[propertyId][inputId] = val\r\n\r\n      if(val !== \"\"){\r\n        if(propertyId === \"startTime\"){\r\n          newBreak.endTime = TimeCalc.add(newBreak.startTime, breakDurations.new)\r\n        }\r\n\r\n        if(propertyId === \"endTime\"){\r\n          this.validateEndTime(breakId, newBreak.startTime, newBreak.endTime)\r\n\r\n          breakDurations.new = TimeCalc.subtractToMinutes(newBreak.endTime, newBreak.startTime, true)\r\n        }\r\n      }\r\n\r\n      this.setState({newBreak, breakDurations})\r\n    }\r\n\r\n    else{\r\n      let breaks = this.state.breaks\r\n      let breakDurations = this.state.breakDurations\r\n      let index = breaks.findIndex(el => el.id === breakId)\r\n\r\n      if(inputId === \"object\") breaks[index][propertyId] = val\r\n      else breaks[index][propertyId][inputId] = val\r\n\r\n      let success = true\r\n\r\n      if(val === \"\") success = false\r\n      else {\r\n        if(propertyId === \"startTime\"){\r\n          breaks[index].endTime = TimeCalc.add(breaks[index].startTime, breakDurations[breakId])\r\n        }\r\n\r\n        if(propertyId === \"endTime\"){\r\n          success = this.validateEndTime(breakId, breaks[index].startTime, breaks[index].endTime)\r\n\r\n          breakDurations[index] = TimeCalc.subtractToMinutes(breaks[index].endTime, breaks[index].startTime, true)\r\n          this.setState({breakDurations})\r\n        }\r\n      }\r\n\r\n      let errors = this.state.errors\r\n      errors[breakId] = !success\r\n      let canClose = Object.values(errors).every(x => !x)\r\n\r\n      this.setState({breaks, errors})\r\n      this.props.onSave(breaks, canClose, {breaks: breakId})\r\n    }\r\n  }\r\n\r\n  addBreak = () => {\r\n    if(this.state.showEndTimeErrors.new) return\r\n\r\n    let breaks = this.state.breaks\r\n    let newBreak = this.state.newBreak\r\n\r\n    // make a new unique ID\r\n    let newId = makeNewId(breaks, \"breaks\")\r\n\r\n    newBreak.id = newId\r\n\r\n    breaks.push(newBreak)\r\n\r\n    this.setState({breaks})\r\n    this.props.onSave(breaks, {breaks: newId})\r\n\r\n    let breakDurations = this.state.breakDurations\r\n    breakDurations.new = 30\r\n    breakDurations[newId] = TimeCalc.subtractToMinutes(newBreak.endTime, newBreak.startTime, true)\r\n\r\n    this.setState({\r\n      newBreak: {\r\n        startTime: TimeCalc.add(newBreak.endTime, 90),\r\n        endTime: TimeCalc.add(newBreak.endTime, 120),\r\n        name: \"\"\r\n      },\r\n      breakDurations\r\n    })\r\n  }\r\n\r\n  deleteBreak(id){\r\n    let breaks = this.state.breaks\r\n    let index = breaks.findIndex(el => el.id === id)\r\n    breaks.splice(index, 1)\r\n\r\n    let errors = this.state.errors\r\n    delete errors[id]\r\n    let canClose = Object.values(errors).every(x => !x)\r\n\r\n    this.setState({breaks, errors})\r\n    this.props.onSave(breaks, canClose, {breaks: id})\r\n  }\r\n\r\n  handleSave = () => {\r\n    this.props.onClose()\r\n  }\r\n\r\n  handleEnterPress = e => {\r\n    if(e.key === \"Enter\") this.addBreak()\r\n  }\r\n\r\n  handleEnterPressNew = e => {\r\n    if(e.key === \"Enter\") this.addBreak()\r\n  }\r\n\r\n\r\n  render = () => (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" className=\"drawerTitle\">\r\n        Breaks:\r\n      </Typography>\r\n      <Table className=\"BreaksDrawer\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Name (optional)</TableCell>\r\n            <TableCell>Start</TableCell>\r\n            <TableCell>End</TableCell>\r\n            <TableCell/>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {this.state.breaks.length ? (\r\n            this.state.breaks.map((breakInfo, i) => (\r\n              <TableRow key={breakInfo.id}>\r\n                <TableCell>\r\n                  <Input\r\n                    value={breakInfo.name}\r\n                    onChange={this.handleInputChange.bind(this, breakInfo.id, \"name\")}\r\n                    onKeyPress={this.handleEnterPress}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TimeSetter\r\n                    value={breakInfo.startTime}\r\n                    onChange={this.handleTimeInputChange.bind(this, breakInfo.id, \"startTime\")}\r\n                    onEnterPress={this.handleSave}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TimeSetter\r\n                    value={breakInfo.endTime}\r\n                    onChange={this.handleTimeInputChange.bind(this, breakInfo.id, \"endTime\")}\r\n                    onEnterPress={this.handleSave}\r\n                    showError={this.state.showEndTimeErrors[breakInfo.id]}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IconButton onClick={this.deleteBreak.bind(this, breakInfo.id)}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))\r\n          ) : (\r\n            <TableRow>\r\n              <TableCell colSpan={4}>You haven't set any breaks</TableCell>\r\n            </TableRow>\r\n          )}\r\n          <TableRow>\r\n            <TableCell>\r\n              <Input\r\n                value={this.state.newBreak.name}\r\n                onChange={this.handleInputChange.bind(this, \"new\", \"name\")}\r\n                onKeyPress={this.handleEnterPressNew}\r\n              />\r\n            </TableCell>\r\n            <TableCell>\r\n              <TimeSetter\r\n                value={this.state.newBreak.startTime}\r\n                onChange={this.handleTimeInputChange.bind(this, \"new\", \"startTime\")}\r\n                onEnterPress={this.addBreak}\r\n              />\r\n            </TableCell>\r\n            <TableCell>\r\n              <TimeSetter\r\n                value={this.state.newBreak.endTime}\r\n                onChange={this.handleTimeInputChange.bind(this, \"new\", \"endTime\")}\r\n                onEnterPress={this.addBreak}\r\n                showError={this.state.showEndTimeErrors.new}\r\n              />\r\n            </TableCell>\r\n            <TableCell>\r\n              <IconButton color=\"primary\" onClick={this.addBreak}>\r\n                <AddIcon />\r\n              </IconButton>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n      <Grid container justify=\"center\">\r\n        <Button\r\n          onClick={this.handleSave.bind(this)}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{margin: \".5rem\"}}>\r\n          Save\r\n        </Button>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nexport default class GoogleSignIn extends Component {\r\n  responseGoogle = res => {\r\n    if(res.error){\r\n      console.log(res);\r\n      return\r\n    }\r\n\r\n    this.props.connect(res.tokenId)\r\n  }\r\n\r\n  render = () => (\r\n    <GoogleLogin\r\n      clientId=\"1070394852834-4nunul2jqv2pqn9du9ralgd61220d3c1.apps.googleusercontent.com\"\r\n      buttonText=\"Sign In\"\r\n      onSuccess={this.responseGoogle}\r\n      onFailure={this.responseGoogle}\r\n      render={this.props.render}\r\n    />\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport GoogleSignIn from './signIn/GoogleSignIn';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport './css/SignInPanel.css'\r\n\r\nexport default class SignInPanel extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {anchorEl: null}\r\n  }\r\n\r\n  handleDismiss = e => {\r\n    // if this is the first time the user is dismissing the panel, only dismiss it\r\n    if(!this.props.showDontRemindMeAgain) this.props.dismiss()\r\n    // if the user has dismissed it before, let them chose if they want to do it permanently this time\r\n    else this.setState({anchorEl: e.currentTarget})\r\n  }\r\n\r\n  closeDismissMenu = () => {\r\n    this.setState({anchorEl: null})\r\n  }\r\n\r\n  render(){\r\n    let anchorEl = this.state.anchorEl\r\n\r\n    return (\r\n      <div className=\"signInPanel\">\r\n        <Grid\r\n          className=\"signInPanelContainer\"\r\n          container\r\n          alignItems='center'\r\n          justify=\"space-evenly\"\r\n        >\r\n          <Grid>\r\n            Sign in to sync your data between all your devices:\r\n          </Grid>\r\n          <Grid>\r\n            <GoogleSignIn connect={this.props.connect}/>\r\n          </Grid>\r\n        </Grid>\r\n        <IconButton\r\n          className=\"dismissButton\"\r\n          onClick={this.handleDismiss}\r\n          aria-owns={anchorEl ? 'signInPanelDismissMenu' : undefined}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n        {this.props.showDontRemindMeAgain && ( //saves performance\r\n          <Menu\r\n            id=\"signInPanelDismissMenu\"\r\n            anchorEl={anchorEl}\r\n            open={Boolean(anchorEl)}\r\n            onClose={this.closeDismissMenu}\r\n          >\r\n            <MenuItem onClick={() => {this.closeDismissMenu(); this.props.dismiss()}}>\r\n              Remind me later\r\n            </MenuItem>\r\n            <MenuItem onClick={() => {this.closeDismissMenu(); this.props.dontRemindMeAgain()}}>\r\n              Don't remind me again\r\n            </MenuItem>\r\n          </Menu>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst GoogleIcon = props => (\r\n  <svg width=\"23px\" height=\"23px\" viewBox=\"11.5 11.5 23 23\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <title>btn_google_light_normal_ios</title>\r\n      <desc>Created with Sketch.</desc>\r\n      <defs>\r\n          <filter x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\" filterUnits=\"objectBoundingBox\" id=\"filter-1\">\r\n              <feOffset dx=\"0\" dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\"></feOffset>\r\n              <feGaussianBlur stdDeviation=\"0.5\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\"></feGaussianBlur>\r\n              <feColorMatrix values=\"0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.168 0\" in=\"shadowBlurOuter1\" type=\"matrix\" result=\"shadowMatrixOuter1\"></feColorMatrix>\r\n              <feOffset dx=\"0\" dy=\"0\" in=\"SourceAlpha\" result=\"shadowOffsetOuter2\"></feOffset>\r\n              <feGaussianBlur stdDeviation=\"0.5\" in=\"shadowOffsetOuter2\" result=\"shadowBlurOuter2\"></feGaussianBlur>\r\n              <feColorMatrix values=\"0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.084 0\" in=\"shadowBlurOuter2\" type=\"matrix\" result=\"shadowMatrixOuter2\"></feColorMatrix>\r\n              <feMerge>\r\n                  <feMergeNode in=\"shadowMatrixOuter1\"></feMergeNode>\r\n                  <feMergeNode in=\"shadowMatrixOuter2\"></feMergeNode>\r\n                  <feMergeNode in=\"SourceGraphic\"></feMergeNode>\r\n              </feMerge>\r\n          </filter>\r\n          <rect id=\"path-2\" x=\"0\" y=\"0\" width=\"40\" height=\"40\" rx=\"2\"></rect>\r\n      </defs>\r\n      <g id=\"Google-Button\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n          <g id=\"9-PATCH\" transform=\"translate(-608.000000, -160.000000)\"></g>\r\n          <g id=\"btn_google_light_normal\" transform=\"translate(-1.000000, -1.000000)\">\r\n              <g id=\"button\" transform=\"translate(4.000000, 4.000000)\" filter=\"url(#filter-1)\">\r\n                  <g id=\"button-bg\">\r\n                      <use fill=\"#FFFFFF\" fillRule=\"evenodd\"></use>\r\n                      <use fill=\"none\"></use>\r\n                      <use fill=\"none\"></use>\r\n                      <use fill=\"none\"></use>\r\n                  </g>\r\n              </g>\r\n              <g id=\"logo_googleg_48dp\" transform=\"translate(15.000000, 15.000000)\">\r\n                  <path d=\"M17.64,9.20454545 C17.64,8.56636364 17.5827273,7.95272727 17.4763636,7.36363636 L9,7.36363636 L9,10.845 L13.8436364,10.845 C13.635,11.97 13.0009091,12.9231818 12.0477273,13.5613636 L12.0477273,15.8195455 L14.9563636,15.8195455 C16.6581818,14.2527273 17.64,11.9454545 17.64,9.20454545 L17.64,9.20454545 Z\" id=\"Shape\" fill=\"#4285F4\"></path>\r\n                  <path d=\"M9,18 C11.43,18 13.4672727,17.1940909 14.9563636,15.8195455 L12.0477273,13.5613636 C11.2418182,14.1013636 10.2109091,14.4204545 9,14.4204545 C6.65590909,14.4204545 4.67181818,12.8372727 3.96409091,10.71 L0.957272727,10.71 L0.957272727,13.0418182 C2.43818182,15.9831818 5.48181818,18 9,18 L9,18 Z\" id=\"Shape\" fill=\"#34A853\"></path>\r\n                  <path d=\"M3.96409091,10.71 C3.78409091,10.17 3.68181818,9.59318182 3.68181818,9 C3.68181818,8.40681818 3.78409091,7.83 3.96409091,7.29 L3.96409091,4.95818182 L0.957272727,4.95818182 C0.347727273,6.17318182 0,7.54772727 0,9 C0,10.4522727 0.347727273,11.8268182 0.957272727,13.0418182 L3.96409091,10.71 L3.96409091,10.71 Z\" id=\"Shape\" fill=\"#FBBC05\"></path>\r\n                  <path d=\"M9,3.57954545 C10.3213636,3.57954545 11.5077273,4.03363636 12.4404545,4.92545455 L15.0218182,2.34409091 C13.4631818,0.891818182 11.4259091,0 9,0 C5.48181818,0 2.43818182,2.01681818 0.957272727,4.95818182 L3.96409091,7.29 C4.67181818,5.16272727 6.65590909,3.57954545 9,3.57954545 L9,3.57954545 Z\" id=\"Shape\" fill=\"#EA4335\"></path>\r\n                  <path d=\"M0,0 L18,0 L18,18 L0,18 L0,0 Z\" id=\"Shape\"></path>\r\n              </g>\r\n              <g id=\"handles_square\"></g>\r\n          </g>\r\n      </g>\r\n  </svg>\r\n)\r\n\r\nexport default GoogleIcon\r\n","import React, { Component } from 'react';\r\nimport GoogleSignIn from './signIn/GoogleSignIn';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport GoogleIcon from './signIn/GoogleIcon'\r\nimport './css/DropdownMenu.css'\r\n\r\nexport default class DropdownMenu extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {anchorEl: null}\r\n  }\r\n\r\n  close = () => {\r\n    this.setState({anchorEl: null});\r\n  }\r\n\r\n  about = () => {\r\n    this.close()\r\n    this.props.history.push(\"/about\")\r\n  }\r\n\r\n  signIn = tokenId => {\r\n    this.close()\r\n    this.props.connect(tokenId)\r\n  }\r\n\r\n  signOut = () => {\r\n    this.close()\r\n    this.props.disconnect();\r\n  }\r\n\r\n  render(){\r\n    let anchorEl = this.state.anchorEl\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          id=\"dropdownMenuButton\"\r\n          aria-owns={anchorEl ? 'dropdownMenu' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={e => {this.setState({anchorEl: e.currentTarget})}}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"dropdownMenu\"\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={this.close}\r\n        >\r\n          <MenuItem onClick={this.about}>\r\n            <HelpIcon />\r\n            About\r\n          </MenuItem>\r\n          {\r\n            this.props.loggedIn ? (\r\n              <MenuItem onClick={this.signOut}>\r\n                <CloseIcon />\r\n                Sign Out\r\n              </MenuItem>\r\n            ) : (\r\n              <GoogleSignIn connect={this.signIn} render={renderProps => (\r\n                <MenuItem onClick={renderProps.onClick}>\r\n                  <GoogleIcon />\r\n                  Sign In\r\n                </MenuItem>\r\n              )} />\r\n            )\r\n          }\r\n        </Menu>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","export default function getGetParams(locationSearch){\r\n  let getParamsString = locationSearch.substr(1).split(\"&\")\r\n  let getParams = {}\r\n  for(let param of getParamsString){\r\n    let paramArr = param.split(\"=\")\r\n    getParams[paramArr[0]] = paramArr[1]\r\n  }\r\n\r\n  return getParams\r\n}\r\n","import React, { Component } from 'react';\r\nimport AddProjectView from \"./MobileViews/AddProjectView\"\r\nimport EditProjectView from \"./MobileViews/EditProjectView\"\r\nimport BreaksView from \"./MobileViews/BreaksView\"\r\nimport DefaultProjectsView from \"./MobileViews/DefaultProjectsView\"\r\nimport ModeSwitch from './ModeSwitch'\r\nimport ProjectsTable from './ProjectsTable'\r\nimport TimeSetter from './TimeSetter'\r\nimport TimeStats from './TimeStats'\r\nimport BreaksDrawer from './BreaksDrawer'\r\nimport DefaultProjectsDrawer from './DefaultProjectsDrawer'\r\nimport SignInPanel from './SignInPanel'\r\nimport DropdownMenu from './DropdownMenu'\r\nimport AddFab from './AddFab'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Link } from \"react-router-dom\";\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport StartIcon from '@material-ui/icons/PlayArrow';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport TimeCalc, { setTimesForProjects } from './util/TimeCalc'\r\nimport makeNewId from './util/makeNewId'\r\nimport getGetParams from './util/getGetParams'\r\nimport { SettingsContext, IsMobileContext } from './_Context'\r\nimport './css/App.css'\r\n\r\nexport default class App extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      showErrors: {},\r\n      showResetButton: false,\r\n      temp: {\r\n        dontShowSignInYet: true\r\n      }\r\n    }\r\n\r\n    // only show the sign in panel after a little while\r\n    this.showSignInPanelAfterLoadTimeout = setTimeout(() => {\r\n      this.setState({temp: {...this.state.temp, dontShowSignInYet: false}})\r\n    }, 5000)\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if(!Object.keys(prevProps.data.settings).length && Object.keys(this.props.data.settings).length){\r\n      this.setShowResetButton()\r\n    }\r\n\r\n    // check if all projects are done\r\n    let allProjectsDone = false\r\n    let productivityPercentage, totalTimeWorkedString\r\n\r\n    if(this.props.data.projects.length){\r\n      allProjectsDone = true\r\n      for(let i = 0; i < this.props.data.projects.length; i++){\r\n        if(this.props.data.projects[i].state !== \"done\"){\r\n          allProjectsDone = false\r\n          break\r\n        }\r\n      }\r\n\r\n      if(allProjectsDone){\r\n        let totalTimeWorked = 0\r\n\r\n        for(let i = 0; i < this.props.data.projects.length; i++) totalTimeWorked += parseInt(this.props.data.projects[i].estimatedDuration)\r\n\r\n        if(totalTimeWorked >= 60) totalTimeWorkedString = TimeCalc.makeString(TimeCalc.toTimeObject(totalTimeWorked, false), false)\r\n        else totalTimeWorkedString += \" minutes\"\r\n\r\n        // if the productivityPercentage was already stored, use it\r\n        if(this.props.data.productivityPercentage){\r\n          productivityPercentage = this.props.data.productivityPercentage\r\n        }\r\n        // else calculate and store it\r\n        else{\r\n          let totalTimePassed = TimeCalc.subtractToMinutes(this.props.currentTime, this.props.data.startTime, true)\r\n          productivityPercentage = Math.round(100 * totalTimeWorked / totalTimePassed)\r\n        }\r\n      }\r\n    }\r\n    else allProjectsDone = false\r\n\r\n    if(allProjectsDone !== this.state.allProjectsDone) this.setState({allProjectsDone})\r\n    if(totalTimeWorkedString !== this.state.totalTimeWorkedString) this.setState({totalTimeWorkedString})\r\n    if(\r\n      productivityPercentage !== this.props.data.productivityPercentage &&\r\n      !(isNaN(productivityPercentage) && typeof productivityPercentage === \"number\") // handle NaN\r\n    ) this.props.update({productivityPercentage})\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    clearTimeout(this.showSignInAgainTimeout)\r\n    clearTimeout(this.showSignInPanelAfterLoadTimeout)\r\n  }\r\n\r\n  // internal method, used in componentDidMount and componentDidUpdate\r\n  setShowResetButton = () => {\r\n    let condition1, condition2\r\n\r\n    // show the reset button if 5AM is between lastReset and currentTime\r\n    let lastResetInMs = new Date(localStorage.lastReset).getTime() // ms since 1970\r\n    lastResetInMs = lastResetInMs % (24*60*60*1000)\r\n    let lastResetInMinutes = lastResetInMs / 1000 / 60\r\n    condition1 = TimeCalc.isBiggerThan(lastResetInMinutes, this.props.currentTime, false, true)\r\n\r\n    // only check for condition2 if condition1 doesn't check out\r\n    if(!condition1){\r\n      // show the reset button if lastReset + showResetButtonAfter > currentTime\r\n      let lastReset = new Date(localStorage.lastReset)\r\n      let settings = this.props.data.settings.showResetButtonAfter ? this.props.data.settings : this.props.data.settings\r\n      let showResetButtonAfter = settings.showResetButtonAfter\r\n      lastReset.setTime(lastReset.getTime() + (showResetButtonAfter * 60 * 60 * 1000))\r\n      condition2 = lastReset < new Date()\r\n    }\r\n\r\n    // only one of the two needs to be true to show the reset button\r\n    let showResetButton = (condition1 || condition2) && this.props.data.projects.length\r\n    this.setState({showResetButton})\r\n  }\r\n\r\n  // internal method, used when auto detecting breaks\r\n  addBreak = (startTime, endTime) => {\r\n    let breaks = this.props.data.breaks.slice()\r\n\r\n    for(let i = 0; i < breaks.length; i++){\r\n      // check if the break overlaps with any preexisting breaks\r\n      if(\r\n        (\r\n          TimeCalc.isBiggerThan(endTime, breaks[i].startTime, false, true) &&\r\n          TimeCalc.isBiggerThan(breaks[i].startTime, startTime, true, true)\r\n        ) || (\r\n          TimeCalc.isBiggerThan(endTime, breaks[i].endTime, false, true) &&\r\n          TimeCalc.isBiggerThan(breaks[i].endTime, startTime, true, true)\r\n        )\r\n      ){\r\n\r\n        // if the overlapping break was also autodetected, merge the two\r\n        if(breaks[i].autodetected){\r\n\r\n          // if the other break's startTime is earlier than the new break's start time...\r\n          if(TimeCalc.isBiggerThan(startTime, breaks[i].startTime, false, true)){\r\n            // set the startTime to be equal to the previous startTime\r\n            startTime = breaks[i].startTime\r\n          }\r\n\r\n          // if the other break's endTime is later that the current one...\r\n          if(TimeCalc.isBiggerThan(breaks[i].endTime, endTime, true, true)){\r\n            endTime = breaks[i].endTime\r\n          }\r\n\r\n          // finally, remove the other break as it's no longer needed (it'll be merged into the new one)\r\n          breaks.splice(i, 1)\r\n        }\r\n\r\n        // if the break was manually inserted, move the startTime after the other break\r\n        else {\r\n          startTime = breaks[i].endTime\r\n        }\r\n      }\r\n    }\r\n\r\n    let newId = makeNewId(breaks, \"breaks\")\r\n\r\n    breaks.push({\r\n      id: newId,\r\n      name: \"Auto \" + (breaks.length + 1),\r\n      autodetected: true,\r\n      startTime, endTime\r\n    })\r\n\r\n    this.props.update({breaks}, {breaks: newId})\r\n    return breaks\r\n  }\r\n\r\n  handleEndTimeChange = (id, val) => {\r\n    let endTime = Object.assign({}, this.props.data.endTime)\r\n    let newState = {\r\n      showErrors: this.state.showErrors,\r\n      temp: this.state.temp\r\n    }\r\n\r\n    if(id === \"object\") endTime = val\r\n    else endTime[id] = val\r\n\r\n    // show/hide error\r\n    if(endTime.h === \"\"\r\n      || endTime.m === \"\"\r\n      || TimeCalc.isBiggerThan(this.props.currentTime, endTime, true, true)\r\n    ){\r\n      newState.temp.endTimeErrorTimeout = setTimeout(() => {\r\n        this.props.changeRouterShowErrors(\"endTime\", true)\r\n      }, 250)\r\n    }\r\n    else{\r\n      clearTimeout(newState.temp.endTimeErrorTimeout)\r\n      this.props.changeRouterShowErrors(\"endTime\", false)\r\n    }\r\n\r\n    newState.endTime = endTime\r\n\r\n    this.setState(newState)\r\n    this.props.update({endTime})\r\n  }\r\n\r\n  addProject(arrayId, project, newDefaultColorIndex){\r\n    // hide the noProjects error, hide the temp var\r\n    this.props.changeRouterShowErrors(\"noProjects\", false)\r\n\r\n    // copy the state\r\n    let projects = this.props.data[arrayId].slice()\r\n    let settings = this.props.data.settings\r\n\r\n    // make a new unique ID\r\n    let newId = makeNewId(projects, \"projects\")\r\n\r\n    // convert\r\n    let newProject = {\r\n      id: newId,\r\n      name: project.name,\r\n      color: project.color,\r\n      estimatedDuration: project.duration,\r\n      state:'notStarted'\r\n    }\r\n    if(arrayId !== \"defaultProjects\"){ // don't add the plannedTime property if we're editting the defaultProjects\r\n      newProject.plannedTime = {\r\n        start: project.startTime,\r\n        end: TimeCalc.add(project.startTime, project.duration)\r\n      }\r\n    }\r\n\r\n    // if the startTime is larger that the suggested time, add a new break\r\n    // (don't execute if there are no previous projects or if it's defaultProjects)\r\n    if(projects.length && arrayId !== \"defaultProjects\"){\r\n      let currentLastProject = projects[projects.length - 1]\r\n      if(\r\n        settings.detectBreaksAutomatically &&\r\n        TimeCalc.isBiggerThan(project.startTime,\r\n          TimeCalc.suggestStartTime(currentLastProject.plannedTime.end, currentLastProject.estimatedDuration, settings),\r\n          false, true\r\n        )\r\n      ){\r\n        this.addBreak(currentLastProject.plannedTime.end, project.startTime)\r\n      }\r\n    }\r\n\r\n    // create the newState object , handle undefined for newDefaultColorIndex\r\n    projects.push(newProject)\r\n    let newState = {[arrayId]: projects}\r\n    if(typeof newDefaultColorIndex !== \"undefined\"){\r\n      let defaultColorIndexKey = arrayId === \"projects\" ? \"defaultColorIndex\" : \"defaultColorIndexDefaultProjects\"\r\n      newState[defaultColorIndexKey] = newDefaultColorIndex\r\n    }\r\n\r\n    // if it's the first project being added, save the startTime as well\r\n    if(projects.length === 1 && arrayId !== \"defaultProjects\") newState.startTime = projects[0].plannedTime.start\r\n\r\n    // save to state\r\n    this.props.update(newState, {[arrayId]: newId})\r\n  }\r\n\r\n  deleteProject(arrayId, id){\r\n    let projects = this.props.data[arrayId].slice()\r\n    let settings = this.props.data.settings\r\n\r\n    let index = projects.findIndex(project => project.id === parseInt(id))\r\n\r\n    // if we are updating the timing and if the deleted project is the first one, adjust the next startTime\r\n    if(settings.updateTimesAfterDelete && index === 0 && projects[1] && arrayId !== \"defaultProjects\"){\r\n      projects[1].plannedTime.start = projects[0].plannedTime.start\r\n    }\r\n\r\n    projects.splice(index, 1)\r\n\r\n    if(settings.updateTimesAfterDelete && arrayId !== \"defaultProjects\"){\r\n      projects = setTimesForProjects(projects, settings, this.props.data.breaks, this.props.data.startTime)\r\n    }\r\n\r\n    let newState = {[arrayId]: projects}\r\n\r\n    // if the user just deleted the last remaining project, reset breaks as well\r\n    if(!projects.length && arrayId !== \"defaultProjects\") newState.breaks = []\r\n\r\n    this.props.update(newState, {[arrayId]: id})\r\n  }\r\n\r\n  // switch mode on Tab press\r\n  handleRootKeyDown = e => {\r\n    if(this.props.data.settings.changeModeOnTab && e.key === \"Tab\" && !this.state.temp.openBreaksDrawer){\r\n      e.preventDefault()\r\n\r\n      this.props.changeMode(this.props.data.mode === \"planning\" ? \"working\" : \"planning\")\r\n    }\r\n  }\r\n\r\n  handleColorChange(arrayId, id, val){\r\n    let projects = this.props.data[arrayId].slice()\r\n\r\n    let index = projects.findIndex(project => project.id === parseInt(id))\r\n\r\n    // break the reference\r\n    let changedProject = Object.assign({}, projects[index])\r\n    projects.splice(index, 1)\r\n\r\n    changedProject.color = val\r\n\r\n    projects.splice(index, 0, changedProject)\r\n\r\n    this.props.update({[arrayId]: projects}, {projects: id})\r\n  }\r\n\r\n  handleDragEnd(arrayId, result){\r\n    this.setState({temp: {...this.state.temp, dragging: false}})\r\n\r\n    // handle the draggable being drop outside the droppable\r\n    if(!result.destination) return\r\n\r\n    let id = result.draggableId\r\n    let index = result.destination.index\r\n    let projects = []\r\n    this.props.data[arrayId].forEach(project => {\r\n      let copy = Object.assign({}, project)\r\n      if(arrayId !== \"defaultProjects\"){\r\n        copy.plannedTime = JSON.parse(JSON.stringify(project.plannedTime))\r\n      }\r\n      projects.push(copy)\r\n    })\r\n\r\n    let movedProjectIndex = projects.findIndex(el => el.id === parseInt(id))\r\n    let movedProject = projects[movedProjectIndex]\r\n\r\n    // if the project was dropped at the same spot it was picked up from, stop executing\r\n    if(index === movedProjectIndex) return\r\n\r\n    // store the startTime of the project that is currently first\r\n    // (for the setTimesForProjects function to work properly)\r\n    let firstStartTime\r\n    if(arrayId !== \"defaultProjects\") firstStartTime = projects[0].plannedTime.start\r\n\r\n    // remove from the current position\r\n    projects.splice(movedProjectIndex, 1)\r\n\r\n    // add to the new position\r\n    projects.splice(index, 0, movedProject)\r\n\r\n    if(this.props.data.settings.updateTimesAfterDrag && arrayId !== \"defaultProjects\"){\r\n      projects[0].plannedTime.start = firstStartTime\r\n\r\n      projects = setTimesForProjects(projects, this.props.data.settings, this.props.data.breaks, this.props.data.startTime)\r\n    }\r\n\r\n    // save\r\n    this.props.update({[arrayId]: projects})\r\n  }\r\n\r\n  handleDoneEditingProject(arrayId, id, values){\r\n    let projects = this.props.data[arrayId].slice()\r\n    let breaks = this.props.data.breaks\r\n    let settings = this.props.data.settings\r\n\r\n    let index = projects.findIndex(project => project.id === parseInt(id))\r\n\r\n    // undefined handling\r\n    if(index < 0) return\r\n\r\n    // break the reference (keep the reference for plannedTime if it hasn't changed)\r\n    let changedProject = {}\r\n    Object.keys(projects[index]).forEach(key => {\r\n      changedProject[key] = projects[index][key]\r\n    })\r\n\r\n    // if we're changing something about the timing, break the reference to plannedTime too\r\n    if(\r\n      arrayId !== \"defaultProjects\" && (\r\n        changedProject.estimatedDuration !== values.duration ||\r\n        !TimeCalc.areIdentical(changedProject.plannedTime.start, values.startTime)\r\n      )\r\n    ){\r\n      changedProject.plannedTime = Object.assign({}, changedProject.plannedTime)\r\n    }\r\n\r\n    projects.splice(index, 1) // breaking the reference pt. 2\r\n\r\n    // if the user increased the startTime, save a new break\r\n    if(\r\n      settings.detectBreaksAutomatically &&\r\n      index !== 0 &&\r\n      arrayId !== \"defaultProjects\" &&\r\n      TimeCalc.isBiggerThan(values.startTime, changedProject.plannedTime.start, false, true)\r\n    ){\r\n      breaks = this.addBreak(\r\n        TimeCalc.suggestStartTime(projects[index - 1].plannedTime.end, projects[index - 1].estimatedDuration, settings),\r\n        values.startTime\r\n      )\r\n    }\r\n\r\n    // if the user decreased the startTime, check to see if any breaks need to adjusted\r\n    if(\r\n      settings.detectBreaksAutomatically &&\r\n      index !== 0 &&\r\n      arrayId !== \"defaultProjects\" &&\r\n      TimeCalc.isBiggerThan(changedProject.plannedTime.start, values.startTime, false, true)\r\n    ){\r\n      for(let i = 0; i < breaks.length; i++){\r\n        // if an autodetected break was previously right before the project being editted, adjust it\r\n        if(\r\n          breaks[i].autodetected &&\r\n          TimeCalc.areIdentical(changedProject.plannedTime.start, breaks[i].endTime)\r\n        ){\r\n          breaks[i].endTime = values.startTime\r\n        }\r\n      }\r\n    }\r\n\r\n    // check if any time values were changed (so that we don't unnecessarily recalculate project times)\r\n    let durationChanged, startTimeChanged\r\n    if(arrayId !== \"defaultProjects\"){\r\n      durationChanged = parseInt(changedProject.estimatedDuration) !== parseInt(values.duration)\r\n      startTimeChanged = !TimeCalc.areIdentical(changedProject.plannedTime.start, values.startTime)\r\n    }\r\n\r\n    // change the values\r\n    changedProject.name = values.name\r\n    changedProject.estimatedDuration = values.duration\r\n    if(arrayId !== \"defaultProjects\") changedProject.plannedTime.start = values.startTime\r\n\r\n    // insert the changedProject back into the array\r\n    projects.splice(index, 0, changedProject)\r\n\r\n    let changes // what was modified\r\n\r\n    // if the user wants to update all times, do so\r\n    if(this.props.data.settings.updateTimesAfterEdit && (durationChanged || startTimeChanged)){\r\n      // break the references of all projects after the one that was changed (their times will be changed)\r\n      for(let i = index + 1; i < projects.length; i++){\r\n        projects[i] = Object.assign({}, projects[i])\r\n        projects[i].plannedTime = Object.assign({}, projects[i].plannedTime)\r\n      }\r\n\r\n      let startTime = index === 0 ? values.startTime : Object.assign({}, this.props.data.startTime)\r\n      projects = setTimesForProjects(projects, settings, breaks, startTime)\r\n    }\r\n\r\n    // else simply adjust the endTime\r\n    else{\r\n      changes = {[arrayId]: id}\r\n      if(arrayId !== \"defaultProjects\"){\r\n        projects[index].plannedTime.end = TimeCalc.add(projects[index].plannedTime.start, projects[index].estimatedDuration)\r\n      }\r\n    }\r\n\r\n    // create the newState object\r\n    let newState = {[arrayId]: projects}\r\n\r\n    // if the startTime of the first project was changed, adjust this.props.data.startTime accordingly\r\n    if(\r\n      index === 0 &&\r\n      arrayId !== \"defaultProjects\" &&\r\n      !TimeCalc.areIdentical(this.props.data.startTime, changedProject.plannedTime.start)\r\n    ){\r\n      newState.startTime = changedProject.plannedTime.start\r\n    }\r\n\r\n    // save to state\r\n    this.props.update(newState, changes)\r\n  }\r\n\r\n  handleProjectStateChange(id, val, progress){\r\n    let projects = this.props.data.projects.slice()\r\n\r\n    let index = projects.findIndex(project => project.id === parseInt(id))\r\n\r\n    // break the reference\r\n    let changedProject = Object.assign({}, projects[index])\r\n    projects.splice(index, 1)\r\n\r\n    // set the state of the changed project\r\n    changedProject.state = val\r\n\r\n    // if it's being paused, set progress\r\n    if(val === \"paused\" && !isNaN(parseInt(progress))) changedProject.progress = progress\r\n\r\n    // if it's being changed to workingOnIt, save current time\r\n    if(val === \"workingOnIt\") changedProject.startedWorkingOnIt = Object.assign({}, this.props.currentTime)\r\n\r\n    let changes = {projects: [id]}\r\n\r\n    // loop through the other projects\r\n    // if the project's state is being changed to workingOnIt, pause any other projects with the same state\r\n    projects.map((project, i) => {\r\n      if(val === \"workingOnIt\" && project.state === \"workingOnIt\" && project.id !== id){\r\n        projects[i] = {...project, state: \"paused\"} // break the reference\r\n        changes.projects.push(project.id)\r\n        return projects[i]\r\n      }\r\n\r\n      return project\r\n    })\r\n\r\n    projects.splice(index, 0, changedProject)\r\n\r\n    this.props.update({projects}, changes)\r\n  }\r\n\r\n  handleCurrentTimeChange = time => {\r\n    this.props.onCurrentTimeChange(time)\r\n    setTimeout(this.setShowResetButton)\r\n  }\r\n\r\n  resetState = () => {\r\n    if(window.confirm(\"Are you sure you want to delete all your projects?\")){\r\n      this.props.update({\r\n        projects: [],\r\n        breaks: [],\r\n        mode: \"planning\",\r\n        productivityPercentage: undefined\r\n      })\r\n      this.setState({showResetButton: false})\r\n    }\r\n  }\r\n\r\n  closeDrawer = (drawerName, dataLabel) => {\r\n    if(typeof this.state.temp[\"canClose\" + drawerName] === \"undefined\" ||\r\n      this.state.temp[\"canClose\" + drawerName] ||\r\n      window.confirm(`Some of the ${dataLabel} weren't editted properly. If you close this now, those changes will be lost`)\r\n    ){\r\n      let newTemp = this.state.temp\r\n      newTemp[\"open\" + drawerName] = false\r\n      newTemp[\"canClose\" + drawerName] = undefined\r\n      if(drawerName === \"DefaultProjectsDrawer\") newTemp.defaultProjectsDrawerRemoveTransform = false\r\n      this.setState(newTemp)\r\n    }\r\n  }\r\n\r\n  saveBreaks = (breaks, canClose, changes) => {\r\n    if(typeof canClose === \"undefined\" || canClose){\r\n      let projects = this.props.data.projects.slice()\r\n      if(this.props.data.projects.length){\r\n        projects = setTimesForProjects(projects, this.props.data.settings, breaks, this.props.data.startTime)\r\n      }\r\n\r\n      let temp = this.state.temp\r\n      if(typeof canClose !== \"undefined\") temp.canCloseBreaksDrawer = canClose\r\n\r\n      this.setState({temp})\r\n      this.props.update({projects, breaks: JSON.parse(JSON.stringify(breaks))}, changes)\r\n    }\r\n    else this.setState({temp: {...this.state.temp, canCloseBreaksDrawer: false}})\r\n  }\r\n\r\n  handleSignInDismiss = () => {\r\n    this.setState({temp: {...this.state.temp, signInDissmissed: true}})\r\n    localStorage.userHasDismissedSignInBefore = true\r\n\r\n    // show the panel again in 30 minutes\r\n    this.showSignInAgainTimeout = setTimeout(() => {\r\n      this.setState({temp: {...this.state.temp, signInDissmissed: null}})\r\n    }, 30*60*1000)\r\n  }\r\n\r\n  handleSignInDontRemindMeAgain = () => {\r\n    this.setState({temp: {...this.state.temp, signInDissmissed: null}})\r\n    localStorage.removeItem(\"userHasDismissedSignInBefore\")\r\n    localStorage.dontShowSignInPanelAgain = true\r\n  }\r\n\r\n  openDefaultProjectsDrawer = () => {\r\n    this.setState({temp: {...this.state.temp, openDefaultProjectsDrawer: true}})\r\n    setTimeout(() => {\r\n      this.setState({temp: {...this.state.temp, defaultProjectsDrawerRemoveTransform: true}})\r\n    }, 400)\r\n  }\r\n\r\n  changeView(view, change, additionalProps){\r\n    // if the change is positive (we're moving into 'view')\r\n    if(change){\r\n      let newPath = \"/\" + view\r\n      if(additionalProps && typeof additionalProps.stopPropagation !== \"function\"){\r\n        newPath += \"?\"\r\n\r\n        let isFirst = true\r\n        for(let [key, value] of Object.entries(additionalProps)){\r\n\r\n          // add \"&\" (unless it would be before the first param)\r\n          if(isFirst) isFirst = false\r\n          else newPath += \"&\"\r\n\r\n          newPath += key + \"=\" + value\r\n        }\r\n      }\r\n      this.props.history.push(newPath)\r\n    }\r\n    // if the change is negative (we're returning from 'view')\r\n    else{\r\n      let pathArr = this.props.history.location.pathname.split(\"/\")\r\n      pathArr.splice(-1, 1)\r\n      this.props.history.push(pathArr.join(\"/\"))\r\n    }\r\n  }\r\n\r\n  addBreak = newBreak => {\r\n    let { breaks } = this.props.data\r\n\r\n    let newId = makeNewId(breaks, \"breaks\")\r\n\r\n    breaks.push({\r\n      id: newId,\r\n      ...newBreak\r\n    })\r\n\r\n    this.props.update({breaks}, {breaks: newId})\r\n  }\r\n\r\n  handleDoneEditingBreak(id, inputValues){\r\n    let breaks = this.props.data.breaks.slice()\r\n\r\n    let index = breaks.findIndex(obj => obj.id === parseInt(id))\r\n\r\n    if(index < 0) return\r\n\r\n    let obj = JSON.parse(JSON.stringify(breaks[index]))\r\n\r\n    obj.name = inputValues.name\r\n    obj.startTime = inputValues.startTime\r\n    obj.endTime = inputValues.endTime\r\n\r\n    breaks.splice(index, 1, obj)\r\n\r\n    this.props.update({breaks}, {breaks: id})\r\n  }\r\n\r\n  deleteBreak(id){\r\n    let breaks = this.props.data.breaks\r\n\r\n    let index = breaks.findIndex(obj => obj.id === parseInt(id))\r\n\r\n    breaks.splice(index, 1)\r\n\r\n    this.props.update({breaks}, {breaks: id})\r\n  }\r\n\r\n  render() {\r\n    if(this.props.history.location.pathname === \"/add\"){\r\n      let getParams = getGetParams(this.props.location.search)\r\n\r\n      let title, arrayId, closeFunc, defaultColorIndex\r\n      switch(getParams.type){\r\n        case \"default\":\r\n          arrayId = \"defaultProjects\"\r\n          title = \"Add a repetitive project\"\r\n          closeFunc = this.changeView.bind(this, \"defaultProjects\", true)\r\n          defaultColorIndex = this.props.data.defaultColorIndexDefaultProjects\r\n          break\r\n        case \"break\":\r\n          arrayId = \"breaks\"\r\n          title = \"Add a break\"\r\n          closeFunc = this.changeView.bind(this, \"breaks\", true)\r\n          break\r\n        default:\r\n          arrayId = \"projects\"\r\n          closeFunc = this.changeView.bind(this, \"add\", false)\r\n          defaultColorIndex = this.props.data.defaultColorIndex\r\n      }\r\n\r\n      return (\r\n        <AddProjectView\r\n          settings={this.props.data.settings}\r\n          defaultColorIndex={defaultColorIndex}\r\n          showErrors={this.state.showErrors}\r\n          currentTime={this.props.currentTime}\r\n          lastProject={this.props.data.projects[this.props.data.projects.length - 1]}\r\n          onAddProject={this.addProject.bind(this, arrayId)}\r\n          onAddBreak={this.addBreak}\r\n          type={getParams.type}\r\n          close={closeFunc}\r\n          title={title}\r\n        />\r\n      )\r\n    }\r\n\r\n    if(\r\n      this.props.history.location.pathname === \"/edit\" &&\r\n      this.props.data.breaks // only open after the data is loaded to prevent errors\r\n    ){\r\n      // parse GET params\r\n      let getParams = getGetParams(this.props.location.search)\r\n\r\n      let { type } = getParams\r\n\r\n      let arrayId, close\r\n      switch(type){\r\n        case \"default\":\r\n          arrayId = \"defaultProjects\"\r\n          close = this.changeView.bind(this, \"defaultProjects\", true)\r\n          break\r\n        case \"break\":\r\n          arrayId = \"breaks\"\r\n          close = this.changeView.bind(this, \"breaks\", true)\r\n          break\r\n        default:\r\n          arrayId = \"projects\"\r\n          close = this.changeView.bind(this, \"edit\", false)\r\n      }\r\n\r\n      let id = getParams.id\r\n\r\n      let array = this.props.data[arrayId]\r\n\r\n      let index = array.findIndex(obj => obj.id.toString() === id)\r\n\r\n      let obj = array[index]\r\n      if(obj){ // handle undefined\r\n        let inputValues = {name: obj.name}\r\n        if(type !== \"default\") inputValues.startTime = obj.plannedTime ? obj.plannedTime.start : obj.startTime\r\n        if(type === \"break\"){\r\n          inputValues.endTime = obj.endTime\r\n        }\r\n        else{\r\n          inputValues.duration = obj.estimatedDuration\r\n          inputValues.color = obj.color\r\n        }\r\n\r\n        let deleteFunc, doneEditingFunc\r\n        if(type === \"break\"){\r\n          deleteFunc = this.deleteBreak.bind(this, id)\r\n          doneEditingFunc = this.handleDoneEditingBreak.bind(this, id)\r\n        }\r\n        else{\r\n          deleteFunc = this.deleteProject.bind(this, arrayId, id)\r\n          doneEditingFunc = this.handleDoneEditingProject.bind(this, arrayId, id)\r\n        }\r\n\r\n        return (\r\n          <EditProjectView\r\n            settings={this.props.data.settings}\r\n            inputValues={inputValues}\r\n            delete={deleteFunc}\r\n            onDoneEditing={doneEditingFunc}\r\n            close={close}\r\n            type={type}\r\n          />\r\n        )\r\n      }\r\n    }\r\n\r\n    if(\r\n      this.props.history.location.pathname === \"/breaks\"&&\r\n      this.props.data.breaks\r\n    ){\r\n      return (\r\n        <BreaksView\r\n          breaks={this.props.data.breaks}\r\n          changeView={this.changeView.bind(this)}\r\n        />\r\n      )\r\n    }\r\n\r\n    if(\r\n      this.props.history.location.pathname === \"/defaultProjects\" &&\r\n      this.props.data.defaultProjects\r\n    ){\r\n      return (\r\n        <DefaultProjectsView\r\n          projects={this.props.data.defaultProjects}\r\n          settings={this.props.data.settings}\r\n          defaultColorIndex={this.props.data.defaultColorIndexDefaultProjects}\r\n          useDefaultProjects={this.props.data.useDefaultProjects}\r\n          onColorChange={this.handleColorChange.bind(this, \"defaultProjects\")}\r\n          onDoneEditing={this.handleDoneEditingProject.bind(this, \"defaultProjects\")}\r\n          onAddProject={this.addProject.bind(this, \"defaultProjects\")}\r\n          onDeleteProject={this.deleteProject.bind(this, \"defaultProjects\")}\r\n          onDragEnd={this.handleDragEnd.bind(this, \"defaultProjects\")}\r\n          onUseDefaultProjectsChange={e => {this.props.update({useDefaultProjects: e.target.checked})}}\r\n          startEditingMobile={id => {\r\n            this.changeView(\"edit\", true, {type: \"default\", id})\r\n          }}\r\n          changeView={this.changeView.bind(this)}\r\n        />\r\n      )\r\n    }\r\n\r\n    let {allProjectsDone, totalTimeWorkedString} = this.state\r\n    let productivityPercentage = this.props.data.productivityPercentage\r\n\r\n    // merge showErrors from App and Router\r\n    let showErrors = {\r\n      ...this.props.showErrors,\r\n      ...this.state.showErrors\r\n    }\r\n\r\n    return (\r\n      <IsMobileContext.Consumer>\r\n        {isMobile => (\r\n          <Grid\r\n            className=\"container\"\r\n            onKeyDown={this.handleRootKeyDown}\r\n            tabIndex=\"0\"\r\n          >\r\n            {!isMobile && (\r\n              <ModeSwitch\r\n                mode={this.props.data.mode}\r\n                onModeChange={this.props.changeMode}>\r\n                <TimeStats\r\n                  currentTime={this.props.currentTime}\r\n                  onCurrentTimeChange={this.handleCurrentTimeChange}\r\n                  endTime={this.props.data.endTime}\r\n                  projects={this.props.data.projects}\r\n                  breaks={this.props.data.breaks}\r\n                  settings={this.props.data.settings}\r\n                  startTime={this.props.data.startTime}\r\n                />\r\n              </ModeSwitch>\r\n            )}\r\n            <Grid container>\r\n              <SettingsContext.Provider value={this.props.data.settings}>\r\n                <ProjectsTable\r\n                  mode={this.props.data.mode}\r\n                  projects={this.props.data.projects}\r\n                  settings={this.props.data.settings}\r\n                  currentTime={this.props.currentTime}\r\n                  defaultColorIndex={this.props.data.defaultColorIndex}\r\n                  showErrors={showErrors}\r\n                  onColorChange={this.handleColorChange.bind(this, \"projects\")}\r\n                  onDoneEditing={this.handleDoneEditingProject.bind(this, \"projects\")}\r\n                  onAddProject={this.addProject.bind(this, \"projects\")}\r\n                  onProjectStateChange={this.handleProjectStateChange.bind(this)}\r\n                  onDeleteProject={this.deleteProject.bind(this, \"projects\")}\r\n                  onDragEnd={this.handleDragEnd.bind(this, \"projects\")}\r\n                  startEditingMobile={id => {\r\n                    this.changeView(\"edit\", true, {id})\r\n                  }}\r\n                />\r\n                {\r\n                  this.props.data.mode === \"planning\" ?\r\n                  // planning mode\r\n                  (\r\n                    <React.Fragment>\r\n                      <div id=\"setEndTime\">\r\n                        <label htmlFor=\"endTimeHoursInput\">\r\n                          {isMobile ? \"End time\" : \"Time when you want to stop working\"}:\r\n                        </label>\r\n                        <TimeSetter\r\n                          onChange={this.handleEndTimeChange}\r\n                          value={this.props.data.endTime}\r\n                          firstInputId=\"endTimeHoursInput\"\r\n                          showError={showErrors.endTime}\r\n                        />\r\n                      </div>\r\n                      <Grid container justify=\"space-around\">\r\n                        {\r\n                          !isMobile && (\r\n                            <Grid>\r\n                              <Button\r\n                                className=\"planningSecondaryButton\"\r\n                                onClick={() => {\r\n                                  this.setState({temp: {...this.state.temp, openBreaksDrawer: true}})\r\n                                }}\r\n                                style={{marginBottom: \"1rem\"}}>\r\n                                <PauseIcon color=\"primary\" />\r\n                                Edit breaks\r\n                              </Button>\r\n                            </Grid>\r\n                          )\r\n                        }\r\n                        <Grid>\r\n                          <Button\r\n                            onClick={() => {this.props.changeMode(\"working\")}}\r\n                            variant=\"contained\"\r\n                            color=\"primary\">\r\n                            <StartIcon />\r\n                            Let's get to work!\r\n                          </Button>\r\n                        </Grid>\r\n                        {\r\n                          !isMobile && (\r\n                            <Grid>\r\n                              <Button\r\n                                className=\"planningSecondaryButton\"\r\n                                onClick={this.openDefaultProjectsDrawer}\r\n                                style={{marginBottom: \"1rem\"}}>\r\n                                <AutorenewIcon color=\"primary\" />\r\n                                Repetitive projects\r\n                              </Button>\r\n                            </Grid>\r\n                          )\r\n                        }\r\n                      </Grid>\r\n                      <Drawer\r\n                        id=\"BreaksDrawer\"\r\n                        anchor=\"bottom\"\r\n                        open={this.state.temp.openBreaksDrawer && !isMobile}\r\n                        onClose={() => {this.closeDrawer(\"BreaksDrawer\", \"breaks\")}}\r\n                      >\r\n                        <BreaksDrawer\r\n                          breaks={this.props.data.breaks}\r\n                          currentTime={this.props.currentTime}\r\n                          onSave={this.saveBreaks}\r\n                          onClose={() => {this.closeDrawer(\"BreaksDrawer\", \"breaks\")}}\r\n                        />\r\n                      </Drawer>\r\n                      <Drawer\r\n                        className={\r\n                          this.state.temp.defaultProjectsDrawerRemoveTransform ?\r\n                          \"defaultProjectsDrawerRemoveTransform\" : null\r\n                        }\r\n                        anchor=\"bottom\"\r\n                        open={this.state.temp.openDefaultProjectsDrawer && !isMobile}\r\n                        onClose={() => {this.closeDrawer(\"DefaultProjectsDrawer\", \"projects\")}}\r\n                      >\r\n                        <DefaultProjectsDrawer\r\n                          projects={this.props.data.defaultProjects}\r\n                          settings={this.props.data.settings}\r\n                          defaultColorIndex={this.props.data.defaultColorIndexDefaultProjects}\r\n                          useDefaultProjects={this.props.data.useDefaultProjects}\r\n                          onClose={() => {this.closeDrawer(\"DefaultProjectsDrawer\", \"projects\")}}\r\n                          onColorChange={this.handleColorChange.bind(this, \"defaultProjects\")}\r\n                          onDoneEditing={this.handleDoneEditingProject.bind(this, \"defaultProjects\")}\r\n                          onAddProject={this.addProject.bind(this, \"defaultProjects\")}\r\n                          onDeleteProject={this.deleteProject.bind(this, \"defaultProjects\")}\r\n                          onDragEnd={this.handleDragEnd.bind(this, \"defaultProjects\")}\r\n                          onUseDefaultProjectsChange={e => {this.props.update({useDefaultProjects: e.target.checked})}}\r\n                          startEditingMobile={id => {\r\n                            this.changeView(\"edit\", true, {id})\r\n                          }}\r\n                        />\r\n                      </Drawer>\r\n                    </React.Fragment>\r\n                  )\r\n                  :\r\n                  // working mode\r\n                  (\r\n                    allProjectsDone && (\r\n                      <div id=\"congratsDiv\">\r\n                        <span id=\"congrats\">\r\n                          CONGRATULATIONS!\r\n                        </span>\r\n                        <br/>\r\n                        You got {totalTimeWorkedString} worth of work done\r\n                        <br/>\r\n                        {\r\n                          productivityPercentage >= 0 && productivityPercentage <= 100 &&(\r\n                            <span>\r\n                              You were productive {productivityPercentage}% of the time\r\n                            </span>\r\n                          )\r\n                        }\r\n                      </div>\r\n                    )\r\n                  )\r\n                }\r\n                {this.state.showResetButton && (\r\n                  <Grid container justify=\"flex-end\" alignItems=\"flex-end\" style={{marginTop: \"2rem\"}}>\r\n                    <Button\r\n                      id=\"resetButton\"\r\n                      onClick={this.resetState}\r\n                      variant=\"contained\">\r\n                      Reset\r\n                    </Button>\r\n                  </Grid>\r\n                )}\r\n              </SettingsContext.Provider>\r\n            </Grid>\r\n            {!isMobile && (\r\n              <React.Fragment>\r\n                <Link id=\"linkToSettings\" to=\"/settings\" aria-label=\"Settings\" title=\"Settings\">\r\n                  <SettingsIcon />\r\n                </Link>\r\n                <DropdownMenu\r\n                  connect={this.props.connect}\r\n                  disconnect={this.props.disconnect}\r\n                  history={this.props.history}\r\n                  loggedIn={this.props.loggedIn}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            <Slide\r\n              direction=\"right\"\r\n              in={\r\n                !this.props.loggedIn &&\r\n                !this.state.temp.dontShowSignInYet &&\r\n                !this.state.temp.signInDissmissed &&\r\n                !localStorage.dontShowSignInPanelAgain &&\r\n                !this.props.disconnected\r\n              }\r\n              mountOnEnter unmountOnExit\r\n            >\r\n              <SignInPanel\r\n                connect={this.props.connect}\r\n                dismiss={this.handleSignInDismiss}\r\n                showDontRemindMeAgain={localStorage.userHasDismissedSignInBefore}\r\n                dontRemindMeAgain={this.handleSignInDontRemindMeAgain}\r\n              />\r\n            </Slide>\r\n            {isMobile && this.props.data.mode === \"planning\" && (\r\n              <AddFab\r\n                onClick={this.changeView.bind(this, \"add\", true)}\r\n              />\r\n            )}\r\n          </Grid>\r\n        )}\r\n      </IsMobileContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nconst withDefaultColorsEditing = WrappedComponent => (\r\n  class withDefaultColorsEditing extends Component{\r\n    constructor(props){\r\n      super(props)\r\n      this.state = {}\r\n    }\r\n\r\n    componentDidUpdate(){\r\n      // only execute if it's the init with data from localStorage\r\n      if(\r\n        typeof this.state.defaultColors === \"undefined\" &&\r\n        this.props.settings\r\n      ){\r\n        this.setState({defaultColors: this.props.settings.defaultColors})\r\n      }\r\n    }\r\n\r\n    handleDefaultColorChange(i, val){\r\n      let defaultColors = this.state.defaultColors\r\n      defaultColors[i] = val\r\n      this.setState({defaultColors})\r\n    }\r\n\r\n    addDefaultColor = () => {\r\n      let defaultColors = this.state.defaultColors\r\n      // generate a random new color\r\n      let newColor = \"#\" + (Math.random() * 16777216).toString(16).substr(0, 6)\r\n      defaultColors.push(newColor)\r\n      this.setState({defaultColors})\r\n    }\r\n\r\n    removeDefaultColor(i){\r\n      let defaultColors = this.state.defaultColors\r\n      defaultColors.splice(i, 1)\r\n      this.setState({defaultColors})\r\n    }\r\n\r\n    save = () => {\r\n      if(typeof this.props.save === \"function\") this.props.save(this.state.defaultColors)\r\n    }\r\n\r\n    render = () => (\r\n      <WrappedComponent\r\n        {...this.props}\r\n        onDefaultColorChange={this.handleDefaultColorChange.bind(this)}\r\n        addDefaultColor={this.addDefaultColor}\r\n        removeDefaultColor={this.removeDefaultColor.bind(this)}\r\n        save={this.save}\r\n      />\r\n    )\r\n  }\r\n)\r\n\r\nexport default withDefaultColorsEditing\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from './ColorPicker'\r\nimport Input from '@material-ui/core/Input';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Icon from '@material-ui/core/Icon'\r\nimport { Link } from \"react-router-dom\";\r\nimport { IsMobileContext } from './_Context'\r\nimport withDefaultColorsEditing from './HOCs/withDefaultColorsEditing'\r\nimport './css/Settings.css'\r\n\r\nconst sectionInfo = {\r\n  general: {\r\n    order: 0,\r\n    label: \"General settings\",\r\n    icon: \"settings\"\r\n  },\r\n  detection: {\r\n    order: 1,\r\n    label: \"Automatic detection\",\r\n    icon: \"search\"\r\n  },\r\n  misc: {\r\n    order: 2,\r\n    label: \"Miscellaneous\",\r\n    icon: \"menu\"\r\n  },\r\n}\r\n\r\nconst inputInfo = {\r\n  timeFormat24H: {\r\n    label: \"Use the 24-hour time format\",\r\n    type: \"boolean\",\r\n    section: \"general\",\r\n    order: 0,\r\n    icon: \"timer\"\r\n  },\r\n  bufferTimePercentage: {\r\n    label: \"Bufffer time percentage\",\r\n    type: \"percentage\",\r\n    max: 1,\r\n    tooltip: \"Buffer times are short breaks inserted after each project. Their length depends on the length of the project before them. This field determines what percentage of the previous project's duration the buffer will be.\",\r\n    section: \"general\",\r\n    order: 1,\r\n    icon: \"view_week\"\r\n  },\r\n  showResetButtonAfter: {\r\n    label: \"Show reset button after (hours)\",\r\n    type: \"int\",\r\n    section: \"misc\",\r\n    order: 3,\r\n    icon: \"restore\"\r\n  },\r\n  defaultColors: {\r\n    label: \"Default colors:\",\r\n    type: \"colors\",\r\n    section: \"misc\",\r\n    order: 0,\r\n    icon: \"invert_colors\"\r\n  },\r\n  updateTimesAfterDrag: {\r\n    label: \"Adjust planned times after changing the order of projects\",\r\n    type: \"boolean\",\r\n    section: \"detection\",\r\n    order: 0,\r\n    icon: \"swap_vert\"\r\n  },\r\n  updateTimesAfterEdit: {\r\n    label: \"Adjust planned times after editing a project\",\r\n    type: \"boolean\",\r\n    section: \"detection\",\r\n    order: 1,\r\n    icon: \"edit\"\r\n  },\r\n  updateTimesAfterDelete: {\r\n    label: \"Adjust planned times after deleting a project\",\r\n    type: \"boolean\",\r\n    section: \"detection\",\r\n    order: 2,\r\n    icon: \"delete\"\r\n  },\r\n  roundTo: {\r\n    label: \"Round to (minutes)\",\r\n    type: \"int\",\r\n    section: \"misc\",\r\n    order: 2,\r\n    icon: \"access_time\"\r\n  },\r\n  changeModeOnTab: {\r\n    label: \"Change mode when the Tab key is pressed\",\r\n    type: \"boolean\",\r\n    section: \"misc\",\r\n    order: 1,\r\n    icon: \"redo\"\r\n  },\r\n  detectBreaksAutomatically: {\r\n    label: \"Detect breaks automatically\",\r\n    type: \"boolean\",\r\n    section: \"detection\",\r\n    order: 3,\r\n    icon: \"pause\"\r\n  }\r\n}\r\n\r\nclass Settings extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      inputs: this.props.settings,\r\n      showErrors: {}\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    // only update if it's the init with data from localStorage\r\n    if(!Object.keys(this.state.inputs).length && this.props.settings){\r\n      this.setState({inputs: this.props.settings})\r\n    }\r\n  }\r\n\r\n  handleInputChange(id, e){\r\n    let val = inputInfo[id].type === \"boolean\" ? e.target.checked : e.target.value\r\n\r\n    // validation\r\n    switch (inputInfo[id].type) {\r\n      case \"int\":\r\n        if(isNaN(val) && val !== \"\") return\r\n        break;\r\n      case \"percentage\":\r\n        let percentage = val.split(\"%\")[0]\r\n        if(percentage !== \"\") val = percentage / 100\r\n        if(isNaN(val) && val !== \"%\") return // if NaN, empty or last character is . (eg. 0.)\r\n        break;\r\n      default:\r\n    }\r\n    if(typeof inputInfo[id].max !== \"undefined\" && val > inputInfo[id].max) return\r\n\r\n    let newState = {inputs: this.state.inputs, showErrors: this.state.showErrors}\r\n    newState.inputs[id] = val\r\n    newState.showErrors[id] = false\r\n    this.setState({newState})\r\n  }\r\n\r\n  save = () => {\r\n    // validation (for empty percentage)\r\n    let inputs = this.state.inputs\r\n    let keys = Object.keys(inputs)\r\n    for(let i = 0; i < keys.length; i++){\r\n      if(inputInfo[keys[i]] && inputInfo[keys[i]].type === \"percentage\" && inputs[keys[i]] === \"%\"){\r\n        let showErrors = this.state.showErrors\r\n        showErrors[keys[i]] = true\r\n        this.setState({showErrors})\r\n        return\r\n      }\r\n    }\r\n\r\n    this.props.update({settings: inputs})\r\n    this.props.history.push(\"/\")\r\n  }\r\n\r\n  resetToDefault = () => {\r\n    if(window.confirm(\"Are you sure you want to reset your settings back to default?\")){\r\n      this.setState({inputs: this.props.defaultSettings})\r\n      this.props.update({settings: this.props.defaultSettings})\r\n    }\r\n  }\r\n\r\n  render(){\r\n    let inputKeysSorted = Object.keys(this.state.inputs).sort((a, b) => {\r\n      let sectionA = inputInfo[a].section\r\n      let sectionB = inputInfo[b].section\r\n      let sectionAOrder = sectionInfo[sectionA].order\r\n      let sectionBOrder = sectionInfo[sectionB].order\r\n\r\n      // if each is in a different section, sort by that\r\n      if(sectionAOrder !== sectionBOrder) return sectionAOrder > sectionBOrder ? 1 : -1\r\n      // if they're both in the same section, sort by their own order\r\n      else return inputInfo[a].order > inputInfo[b].order ? 1 : -1\r\n    })\r\n\r\n    let inputs = inputKeysSorted.map((el, i) => {\r\n      let tableRow\r\n\r\n      if(el === \"defaultColors\") tableRow = (\r\n        <TableRow key={i}>\r\n          <TableCell className=\"iconCell\">\r\n            <Icon>{inputInfo[el].icon}</Icon>\r\n          </TableCell>\r\n          <TableCell>\r\n            Default colors:\r\n          </TableCell>\r\n          <IsMobileContext.Consumer>\r\n            {isMobile => (\r\n              isMobile ? (\r\n                <TableCell className=\"value\">\r\n                  <Link to=\"/settings/defaultColors\" aria-label=\"Set default colors\">\r\n                    <Button variant=\"outlined\">\r\n                      Set\r\n                    </Button>\r\n                  </Link>\r\n                </TableCell>\r\n              ) : (\r\n                <TableCell id=\"defaultColorsCell\" className=\"value\">\r\n                  {\r\n                    this.state.inputs.defaultColors.map((color, i) => (\r\n                      <div key={i}>\r\n                        <ColorPicker\r\n                          value={color}\r\n                          onChange={this.props.onDefaultColorChange.bind(this, i)}\r\n                        />\r\n                        <div className=\"removeDefaultColorDiv\">\r\n                          <IconButton\r\n                            aria-label=\"Remove the color\"\r\n                            className=\"removeDefaultColor\"\r\n                            disableRipple={true}\r\n                            onClick={this.props.removeDefaultColor.bind(this, i)}>\r\n                            <Icon>remove</Icon>\r\n                          </IconButton>\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                  }\r\n                  <IconButton\r\n                    id=\"addDefaultColor\"\r\n                    aria-label=\"Add a new default color\"\r\n                    onClick={this.props.addDefaultColor}>\r\n                    <Icon>add</Icon>\r\n                  </IconButton>\r\n                </TableCell>\r\n              )\r\n            )}\r\n          </IsMobileContext.Consumer>\r\n          <TableCell className=\"rightCell\" />\r\n        </TableRow>\r\n      )\r\n      else{\r\n        // handle undefined inputInfo\r\n        if(!inputInfo[el]){\r\n          console.warn(el + \"is not a property of inputInfo\");\r\n          return <div />\r\n        }\r\n        tableRow =  (\r\n          <TableRow key={i}>\r\n            <TableCell className=\"iconCell\">\r\n              <Icon>{inputInfo[el].icon}</Icon>\r\n            </TableCell>\r\n            <TableCell>\r\n              {inputInfo[el].label}\r\n              {inputInfo[el].tooltip && (\r\n                <Tooltip title={inputInfo[el].tooltip} disableFocusListener disableTouchListener>\r\n                  <Icon className=\"tooltipIcon\">help</Icon>\r\n                </Tooltip>\r\n              )}\r\n              :\r\n            </TableCell>\r\n            <TableCell className=\"value\">\r\n              {\r\n                inputInfo[el].type === \"boolean\" ? (\r\n                  <Switch\r\n                    color=\"primary\"\r\n                    checked={this.state.inputs[el]}\r\n                    onChange={this.handleInputChange.bind(this, el)}\r\n                    aria-label={inputInfo[el].label}\r\n                  />\r\n                ) : (\r\n                  <Input\r\n                    value={\r\n                      (inputInfo[el].type === \"percentage\" && this.state.inputs[el] !== \"%\") ? (\r\n                        this.state.inputs[el] * 100 + \"%\"\r\n                      ) : (this.state.inputs[el])\r\n                    }\r\n                    onChange={this.handleInputChange.bind(this, el)}\r\n                    error={this.state.showErrors[el]}\r\n                    aria-label={inputInfo[el].label}\r\n                  />\r\n                )\r\n              }\r\n            </TableCell>\r\n            <TableCell className=\"rightCell\" />\r\n          </TableRow>\r\n        )\r\n      }\r\n\r\n      // if this and the previous element are in the same section, return\r\n      if(i && inputInfo[el].section === inputInfo[inputKeysSorted[i-1]].section) return tableRow\r\n      // if they're each in a different section\r\n      else return (\r\n        <React.Fragment key={i}>\r\n          <TableRow>\r\n            <TableCell className=\"sectionIconCell\">\r\n              <Icon>{sectionInfo[inputInfo[el].section].icon}</Icon>\r\n            </TableCell>\r\n            <TableCell colSpan={3}>\r\n              <Typography variant=\"h5\" style={{paddingTop: \"2.5rem\"}}>\r\n                {sectionInfo[inputInfo[el].section].label}:\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n          {tableRow}\r\n        </React.Fragment>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <div className=\"Settings container\">\r\n        <Table>\r\n          <TableBody>\r\n            {inputs.map(input => input)}\r\n            <TableRow>\r\n              <TableCell colSpan={4}>\r\n                <Grid\r\n                  container\r\n                  alignItems='baseline'\r\n                  justify=\"space-around\"\r\n                >\r\n                  <Grid>\r\n                    <Button\r\n                      onClick={this.save}\r\n                      variant=\"contained\"\r\n                      color=\"primary\">\r\n                      Save\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid>\r\n                    <Button\r\n                      onClick={this.resetToDefault}\r\n                      variant=\"contained\">\r\n                      Reset to default\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withDefaultColorsEditing(Settings)\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './css/About.css'\r\n\r\nconst About = props => (\r\n  <div className=\"container\">\r\n    <Typography variant=\"h4\" className=\"h-1\">\r\n      Welcome to Mind Your Time\r\n    </Typography>\r\n    <p className=\"summary\">\r\n      Mind Your Time is a platform that aims to tackle a complex issue in a simplistic way\r\n    </p>\r\n    <p>\r\n      Do you ever have trouble realistically planning out your day and then actually executing the plan?\r\n      <br/>\r\n      Mind Your Time is here to help.\r\n    </p><p>\r\n      The idea here is simple. Plan your day and then check if you're still on schedule.\r\n      Write down when you're gonna do what and how long it's gonna take.\r\n      Then periodically check if you're making the progress you should be making.\r\n    </p><p>\r\n      Like I said, the idea is simple but if you truly follow it, I promise your productivity will skyrocket.\r\n      Starting right now.\r\n    </p><p>\r\n      It seems easy but if you've ever really tried doing it, you probably know it isn't.\r\n      There are a ton of distractions. All the time. That is why we're introducing buffer times.\r\n    </p>\r\n    <div id=\"#bufferTimes\">\r\n      <Typography variant=\"h5\" className=\"h-2\">\r\n        Buffer Times\r\n      </Typography>\r\n      <p className=\"summary\">\r\n        Buffer times are essential to making a realistic plan\r\n      </p><p>\r\n        You may have noticed that whenever you set out to do something, something else always comes up and requires your full attention.\r\n        Like your cat walking over your keyboard. Or your coffee mug spilling.\r\n        Or a billion other things that you simply cannot foresee.\r\n        By the time you come back, your entire day's plan is thrown into disarray.\r\n      </p><p>\r\n        In order to be truly productive, you need to expect the unexpected.\r\n        We take care of that for you.\r\n      </p><p>\r\n        Buffer times are the solution. They are short breaks that we automatically insert after each planned project.\r\n        Their length is proportional to the length of the previous project - about 20% of the project's length by default.\r\n        (Note that this can be changed in the settings)\r\n        These little breaks in your schedule aren't primarily meant as breaks though.\r\n        Instead, their job is to compansate for the distractions that happen while you're working on the previous project.\r\n        Ideally when you actually execute your plan, these little breaks should disappear.\r\n        However, if they don't feel free to rest for a little while - whatever works for you.\r\n      </p><p>\r\n        Of course if you feel like you need more breaks in your schedule, you can insert them in using our breaks editor.\r\n        You could also increase the buffer time percentage in the settings\r\n        but note that this comes at a price - a slight but measurable decrease in productivity.\r\n        On the other hand, if you want to aim for even higher productivity, you can decrease the percentage\r\n        but then you run the risk of your plan being too ideallistic and falling apart.\r\n      </p><p>\r\n        At the end of the day, your buffer times need to be balanced and that balance can only be accomplished by trial and error.\r\n        So feel free to experiment with the percentage if you feel it can make the app work better for you.\r\n      </p>\r\n    </div>\r\n    <div id=\"#aboutMe\">\r\n      <Typography variant=\"h5\" className=\"h-2\">\r\n        About me\r\n      </Typography>\r\n      <p>\r\n        I've experimented with a lot of different productivity/time-management systems over the years.\r\n        At the end I developed a fairly simple system - writing down what I want to do today and when exactly I wanna do it.\r\n        Sounds simple, I know, but it truly improved my productivity by a lot.\r\n        The problem was that I couldn't find an app to use for this so I just had write it down on my whiteboard.\r\n        (Yes, I actually have a whiteboard in my bedroom. Go ahead, judge me.)\r\n      </p><p>\r\n        This was pretty annoying so of course: I'm the kind of guy that needs everything on a screen so I didn't do it every day.\r\n        And so a while later, I decided to create Mind Your Time.\r\n        At first, it was just as a way off to show my skills to employers and organize my own time,\r\n        only later did I realize that it could actually be really useful to other people as well.\r\n      </p><p>\r\n        I really hope you find this app useful and that it helps you with whatever you set out to do.\r\n        If you find any problems, get an idea for a new feature you'd like to see or just want to send me anything at all, here's my contact info:\r\n      </p>\r\n      <div id=\"#contact\">\r\n        <Typography variant=\"h6\">\r\n          Contact\r\n        </Typography>\r\n        <a href=\"https://goo.gl/forms/jdesExEMegbkLPjp2\" target=\"_blank\" rel=\"noopener noreferrer\">Feedback form</a> (you can submit feedback here or via email, whichever you prefer)\r\n        <br/>\r\n        Email: <a href=\"mailto:michaelfarnik@gmail.com\">michaelfarnik@gmail.com</a>\r\n        <br/>\r\n        GitHub: <a href=\"https://github.com/michaloslav\">Michael Farník</a>\r\n        <br/>\r\n        LinkedIn: <a href=\"https://www.linkedin.com/in/michael-farn%C3%ADk-13002b168/\">Michael Farník</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport ColorPicker from '../ColorPicker'\r\nimport BackButton from './BackButton'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport withDefaultColorsEditing from '../HOCs/withDefaultColorsEditing'\r\n\r\nconst SettingsDefaultColors = props => (\r\n  <div className=\"SettingsDefaultColors container\">\r\n    <BackButton onClick={() => {props.history.push(\"/settings/\")}} />\r\n    <Table>\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell colSpan={2}>\r\n            <Typography variant=\"h6\">\r\n              Default colors:\r\n            </Typography>\r\n          </TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {props.settings.defaultColors && props.settings.defaultColors.map((color, i) => (\r\n          <TableRow key={i}>\r\n            <TableCell>\r\n              <ColorPicker\r\n                value={color}\r\n                onChange={props.onDefaultColorChange.bind(this, i)}\r\n                xl\r\n              />\r\n            </TableCell>\r\n            <TableCell>\r\n              <Button\r\n                aria-label=\"Remove the color\"\r\n                className=\"removeDefaultColor\"\r\n                disableRipple={true}\r\n                onClick={props.removeDefaultColor.bind(this, i)}>\r\n                <RemoveIcon />\r\n                Remove\r\n              </Button>\r\n            </TableCell>\r\n          </TableRow>\r\n        ))}\r\n        <TableRow>\r\n          <TableCell colSpan={2}>\r\n            <Grid container justify=\"space-around\">\r\n              <Button\r\n                onClick={props.addDefaultColor}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n              >\r\n                <AddIcon />\r\n                Add\r\n              </Button>\r\n              <Button\r\n                onClick={() => {props.save(); props.history.push(\"/settings/\")}}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n              >\r\n                Save\r\n              </Button>\r\n            </Grid>\r\n          </TableCell>\r\n        </TableRow>\r\n      </TableBody>\r\n    </Table>\r\n  </div>\r\n)\r\n\r\nexport default withDefaultColorsEditing(SettingsDefaultColors)\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst LinkToRoot = props => (\r\n  <Link className=\"LinkToRoot\" to=\"/\" aria-label=\"Back\">\r\n    <ArrowBackIcon />\r\n  </Link>\r\n)\r\n\r\nexport default LinkToRoot\r\n","import React, { Component } from 'react'\r\nimport GoogleSignIn from './signIn/GoogleSignIn';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport GoogleIcon from './signIn/GoogleIcon'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { withRouter } from \"react-router\";\r\nimport getGetParams from './util/getGetParams'\r\nimport './css/DrawerMenu.css'\r\n\r\nclass DrawerMenu extends Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n    let state = this.checkActive(true)\r\n\r\n    this.state = {\r\n      planningCollapseOpen: false,\r\n      ...state\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    // set the timeout only if it isn't set already\r\n    if(!this.state.checkActiveTimeout){\r\n      this.setState({\r\n        checkActiveTimeout: setTimeout(() => {\r\n          this.checkActive()\r\n          this.setState({checkActiveTimeout: null})\r\n        }, 500)\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    let { checkActiveTimeout } = this.state\r\n    clearTimeout(checkActiveTimeout)\r\n    this.setState({checkActiveTimeout})\r\n  }\r\n\r\n  signIn = tokenId => {\r\n    this.props.close()\r\n    this.props.connect(tokenId)\r\n  }\r\n\r\n  signOut = () => {\r\n    this.props.close()\r\n    this.props.disconnect();\r\n  }\r\n\r\n  navigate(to){\r\n    this.props.history.push(\"/\" + to)\r\n    this.props.close()\r\n  }\r\n\r\n  modeSwitch(mode){\r\n    this.props.changeMode(mode)\r\n    if(this.props.location.pathname !== \"/\") this.props.history.push(\"/\")\r\n    this.props.close()\r\n  }\r\n\r\n  togglePlanningCollapse = e => {\r\n    e.stopPropagation()\r\n    this.setState({planningCollapseOpen: !this.state.planningCollapseOpen})\r\n    this.props.setNavbarState({planningCollapseOpenExplicit: true})\r\n  }\r\n\r\n  checkActive = (returnDontUpdate = false) => {\r\n    let active\r\n    let pathname = this.props.location.pathname\r\n    if(pathname === \"/\") active = this.props.mode\r\n    else{\r\n      let pathname0 = this.props.location.pathname.split(\"/\")[1]\r\n      if(pathname0 === \"add\" || pathname0 === \"edit\"){\r\n        let { type } = getGetParams(this.props.location.search)\r\n        switch(type){\r\n          case \"default\":\r\n            active = \"defaultProjects\"\r\n            break\r\n          case \"break\":\r\n            active = \"breaks\"\r\n            break\r\n          default:\r\n            active = \"planning\"\r\n        }\r\n      }\r\n      else active = pathname0\r\n    }\r\n\r\n    let planningCollapseOpen = (active === \"planning\" || active === \"breaks\" || active === \"defaultProjects\")\r\n\r\n    if(returnDontUpdate) return {active, planningCollapseOpen}\r\n\r\n    // check if there's anything to be updated\r\n    let newState = {}\r\n    if(active !== this.state.active) newState.active = active\r\n    if(\r\n      planningCollapseOpen !== this.state.planningCollapseOpen &&\r\n      !this.props.planningCollapseOpenExplicit\r\n    ){\r\n      newState.planningCollapseOpen = planningCollapseOpen\r\n    }\r\n    if(Object.keys(newState).length) this.setState(newState)\r\n  }\r\n\r\n  render = () => (\r\n    <List>\r\n      <ListItem button onClick={this.modeSwitch.bind(this, \"planning\")}>\r\n        <ListItemIcon>\r\n          <TodayIcon color={this.state.active === \"planning\" ? \"primary\" : undefined} />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Planning\" />\r\n        <IconButton\r\n          onClick={this.togglePlanningCollapse}\r\n          style={{padding: 0}}\r\n        >\r\n          {this.state.planningCollapseOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n        </IconButton>\r\n      </ListItem>\r\n      <Collapse in={this.state.planningCollapseOpen} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          {[\r\n            {\r\n              title: \"Breaks\",\r\n              icon: <PauseIcon color={this.state.active === \"breaks\" ? \"primary\" : undefined} />,\r\n              onClick: this.navigate.bind(this, \"breaks\")\r\n            },\r\n            {\r\n              title: \"Repetitive projects\",\r\n              icon: <AutorenewIcon color={this.state.active === \"defaultProjects\" ? \"primary\" : undefined} />,\r\n              onClick: this.navigate.bind(this, \"defaultProjects\")\r\n            }\r\n          ].map(el => (\r\n            <ListItem key={el.title} button onClick={el.onClick} style={{paddingLeft: \"2rem\"}}>\r\n              <ListItemIcon children={el.icon} />\r\n              <ListItemText inset primary={el.title} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Collapse>\r\n      {\r\n        [\r\n          {\r\n            title: \"Working\",\r\n            icon: <WorkIcon color={this.state.active === \"working\" ? \"primary\" : undefined} />,\r\n            onClick: this.modeSwitch.bind(this, \"working\")\r\n          },\r\n          {\r\n            title: \"Settings\",\r\n            icon: <SettingsIcon color={this.state.active === \"settings\" ? \"primary\" : undefined} />,\r\n            onClick: this.navigate.bind(this, \"settings\")\r\n          },\r\n          {\r\n            title: \"About\",\r\n            icon: <HelpIcon color={this.state.active === \"about\" ? \"primary\" : undefined} />,\r\n            onClick: this.navigate.bind(this, \"about\")\r\n          }\r\n        ].map(el => (\r\n          <ListItem key={el.title} button onClick={el.onClick}>\r\n            <ListItemIcon children={el.icon} />\r\n            <ListItemText primary={el.title} />\r\n          </ListItem>\r\n        ))\r\n      }\r\n      {\r\n        this.props.loggedIn ? (\r\n          <ListItem button onClick={this.signOut}>\r\n            <ListItemIcon>\r\n              <CloseIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Sign Out\" />\r\n          </ListItem>\r\n        ) : (\r\n          <GoogleSignIn connect={this.signIn} render={renderProps => (\r\n            <ListItem button onClick={renderProps.onClick}>\r\n              <ListItemIcon>\r\n                <GoogleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Sign In\" />\r\n            </ListItem>\r\n          )} />\r\n        )\r\n      }\r\n    </List>\r\n  )\r\n}\r\n\r\nexport default withRouter(DrawerMenu)\r\n","import React, { Component } from 'react';\r\nimport DrawerMenu from './DrawerMenu'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport TimeStats from './TimeStats'\r\nimport './css/Navbar.css'\r\n\r\nexport default class Navbar extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      drawerOpen: false,\r\n      planningCollapseOpenExplicit: false\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    setTimeout(this.checkActive, 500)\r\n  }\r\n\r\n  open = () => {\r\n    this.setState({drawerOpen: true})\r\n  }\r\n\r\n  close = () => {\r\n    this.setState({\r\n      drawerOpen: false,\r\n      planningCollapseOpenExplicit: false\r\n    })\r\n  }\r\n\r\n  render = () => (\r\n    <React.Fragment>\r\n      <AppBar id=\"Navbar\">\r\n        <Toolbar>\r\n            <IconButton\r\n              id=\"openDrawerMenuButton\"\r\n              aria-label=\"Menu\"\r\n              onClick={this.state.drawerOpen ? this.close : this.open}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Grid\r\n              id=\"TimeStatsContainer\"\r\n              container\r\n              alignItems='baseline'\r\n              justify=\"space-between\">\r\n            <TimeStats\r\n              currentTime={this.props.currentTime}\r\n              onCurrentTimeChange={this.props.onCurrentTimeChange}\r\n              endTime={this.props.data.endTime}\r\n              projects={this.props.data.projects}\r\n              breaks={this.props.data.breaks}\r\n              settings={this.props.data.settings}\r\n              startTime={this.props.data.startTime}\r\n              shortLabels\r\n            />\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <SwipeableDrawer\r\n        id=\"DrawerMenu\"\r\n        open={this.state.drawerOpen}\r\n        onOpen={this.open}\r\n        onClose={this.close}\r\n      >\r\n        <DrawerMenu\r\n          connect={this.props.connect}\r\n          disconnect={this.props.disconnect}\r\n          loggedIn={this.props.loggedIn}\r\n          mode={this.props.data.mode}\r\n          changeMode={this.props.changeMode}\r\n          setNavbarState={this.setState.bind(this)}\r\n          close={this.close}\r\n          planningCollapseOpenExplicit={this.state.planningCollapseOpenExplicit}\r\n        />\r\n      </SwipeableDrawer>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { HashLink } from 'react-router-hash-link';\r\n\r\nconst Footer = props => (\r\n  <footer>\r\n    Created by <a href=\"https://github.com/michaloslav\">Michael Farník</a>\r\n    <span> | </span>\r\n    <a href=\"https://goo.gl/forms/jdesExEMegbkLPjp2\" target=\"_blank\" rel=\"noopener noreferrer\">Feedback</a>\r\n    <span> | </span>\r\n    <HashLink to=\"/about#contact\">Contact</HashLink>\r\n    <div>\r\n      Icon made by <a href=\"https://www.flaticon.com/authors/kiranshastry\" title=\"Kiranshastry\" target=\"_blank\" rel=\"noopener noreferrer\">Kiranshastry</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\" target=\"_blank\" rel=\"noopener noreferrer\">www.flaticon.com</a> is licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\" title=\"Creative Commons BY 3.0\" target=\"_blank\" rel=\"noopener noreferrer\">CC 3.0 BY</a>\r\n    </div>\r\n  </footer>\r\n)\r\n\r\nexport default Footer\r\n","export const defaultSettings = {\r\n  timeFormat24H: false,\r\n  bufferTimePercentage: .2,\r\n  showResetButtonAfter: 16, // in hours\r\n  defaultColors: [\r\n    \"#4BFFD1\",\r\n    \"#39FF00\",\r\n    \"#E8A60C\",\r\n    \"#FF4848\",\r\n    \"#290CE8\",\r\n  ],\r\n  updateTimesAfterDrag: true,\r\n  updateTimesAfterEdit: true,\r\n  updateTimesAfterDelete: true,\r\n  roundTo: 5,\r\n  changeModeOnTab: false,\r\n  detectBreaksAutomatically: true\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport App from \"./App\"\r\nimport Settings from \"./Settings\"\r\nimport About from \"./About\"\r\nimport SettingsDefaultColors from \"./MobileViews/SettingsDefaultColors\"\r\nimport LinkToRoot from './LinkToRoot'\r\nimport Navbar from \"./Navbar\"\r\nimport Footer from \"./Footer\"\r\nimport { defaultSettings } from './util/_defaultSettings'\r\nimport { IsMobileContext } from './_Context'\r\n\r\nexport default class AppRouter extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      width: window.innerWidth,\r\n      currentTime: {\r\n        h: 0,\r\n        m: 0,\r\n        pm: true,\r\n        defaultVal: true\r\n      },\r\n      showErrors: {}\r\n    }\r\n  }\r\n  componentWillMount(){\r\n    window.addEventListener(\"resize\", () => {\r\n      this.setState({width: window.innerWidth})\r\n    })\r\n  }\r\n\r\n  AppWithProps = props => (\r\n    <App\r\n      data={this.props.data}\r\n      connect={this.props.connect}\r\n      changeMode={this.changeMode}\r\n      update={this.props.update}\r\n      disconnect={this.props.disconnect}\r\n      loggedIn={this.props.loggedIn}\r\n      disconnected={this.props.disconnected}\r\n      currentTime={this.state.currentTime}\r\n      showErrors={this.state.showErrors}\r\n      changeRouterShowErrors={this.changeShowErrors}\r\n      onCurrentTimeChange={currentTime => {this.setState({currentTime})}}\r\n      {...props}\r\n    />\r\n  )\r\n\r\n  SettingsWithProps = props => (\r\n    <Settings\r\n      settings={Object.assign({}, this.props.data.settings)}\r\n      defaultSettings={defaultSettings}\r\n      update={this.props.update}\r\n      {...props}\r\n    />\r\n  )\r\n\r\n  SettingsDefaultColorsWithProps = props => (\r\n    <SettingsDefaultColors\r\n      settings={Object.assign({}, this.props.data.settings)}\r\n      save={defaultColors => {\r\n        this.props.update({settings: {...this.props.data.settings, defaultColors}})\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n\r\n  changeMode = val => {\r\n    // don't let the user go into work mode if there isn't an endTime or if projects are empty  (+ show an error)\r\n    if(val === \"working\"){\r\n      if(this.props.data.endTime.h === \"\" || this.props.data.endTime.m === \"\"){\r\n        this.changeShowErrors(\"endTime\", true)\r\n        return\r\n      }\r\n      if(!this.props.data.projects.length){\r\n        this.changeShowErrors(\"noProjects\", true)\r\n        return\r\n      }\r\n    }\r\n\r\n    this.props.update({mode: val})\r\n  }\r\n\r\n  changeShowErrors = (id, val) => {\r\n    this.setState({showErrors: {...this.state.showErrors, [id]: val}})\r\n  }\r\n\r\n  render(){\r\n    let isMobile = this.state.width < 660\r\n\r\n    return (\r\n      <Router>\r\n        <div>\r\n          {\r\n            isMobile ? (\r\n                <Navbar\r\n                  data={this.props.data}\r\n                  connect={this.props.connect}\r\n                  changeMode={this.changeMode}\r\n                  disconnect={this.props.disconnect}\r\n                  loggedIn={this.props.loggedIn}\r\n                  currentTime={this.state.currentTime}\r\n                  onCurrentTimeChange={currentTime => {this.setState({currentTime})}}\r\n                />\r\n              ) : (\r\n                <Switch>\r\n                  <Route path=\"/(|add|edit|breaks|defaultProjects)\" exact />\r\n                  <Route component={LinkToRoot} />\r\n                </Switch>\r\n            )\r\n          }\r\n          <IsMobileContext.Provider value={isMobile}>\r\n            <Switch>\r\n              <Route path=\"/settings/defaultColors/\" render={this.SettingsDefaultColorsWithProps}/>\r\n              <Route path=\"/settings/\" render={this.SettingsWithProps}/>\r\n              <Route path=\"/about/\" component={About}/>\r\n              <Route path=\"/robots.txt\" target=\"_self\" />\r\n              <Route path=\"/(|add|edit|breaks|defaultProjects)\" exact render={this.AppWithProps}/>\r\n              <Route render={() => <Redirect to=\"/\" />} />\r\n            </Switch>\r\n          </IsMobileContext.Provider>\r\n          {\r\n            isMobile ? (\r\n              <Route path=\"/about/\" component={Footer} />\r\n            ) : (\r\n              <Footer />\r\n            )\r\n          }\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Router from './Router'\r\nimport TimeCalc, { setTimesForProjects } from './util/TimeCalc'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport * as SocketIOClient from 'socket.io-client'\r\nimport Cookies from 'universal-cookie';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport green from '@material-ui/core/colors/green';\r\nimport { defaultSettings } from './util/_defaultSettings'\r\nimport makeNewId from './util/makeNewId'\r\n\r\nconst cookies = new Cookies()\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#039be5',\r\n    },\r\n    secondary: green\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  }\r\n})\r\n\r\nexport default class DataSync extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      projects: [],\r\n      settings: {},\r\n      lastModified: {},\r\n      temp: {}\r\n    }\r\n\r\n    this.io = SocketIOClient.connect('https://mind-your-time-server.herokuapp.com')\r\n\r\n    setTimeout(() => {\r\n      // check if the user is offline\r\n      if(this.io.disconnected){\r\n        console.warn(\"Can't connect to server\");\r\n\r\n        let temp = this.state.temp\r\n        temp.disconnected = true\r\n        // only show the error if the user is logged in\r\n        if(this.state.accessToken) temp.showDisconnectedError = true\r\n        this.setState({temp})\r\n      }\r\n    }, 100)\r\n\r\n    this.io.on(\"connect\", data => {\r\n      // if the user was previously disconnected and they're logged in, connect them\r\n      if(!this.state.temp.successfulConnectInit && this.state.temp.disconnected && this.state.accessToken){\r\n        let localData\r\n        if(!this.state.temp.successfulConnectInit || this.state.temp.updatedWhileDisconnected){\r\n          localData = this.getData()\r\n        }\r\n        else localData = {}\r\n        this.io.emit(\"connectInit\", {\r\n          type: \"accessToken\", accessToken: this.state.accessToken, localData\r\n        })\r\n      }\r\n\r\n      let temp = this.state.temp\r\n      temp.disconnected = false\r\n      temp.showDisconnectedError = false\r\n      clearTimeout(temp.showDisconnectedErrorTimeout)\r\n\r\n      this.setState({temp})\r\n    })\r\n\r\n    this.io.on(\"disconnect\", data => {\r\n      let temp = this.state.temp\r\n      temp.disconnected = true\r\n      // only show the error if the user is logged in\r\n      if(this.state.accessToken) temp.showDisconnectedErrorTimeout = setTimeout(() => {\r\n        this.setState({temp: {...this.state.temp, showDisconnectedError: true}})\r\n      }, 1500)\r\n      this.setState({temp})\r\n    })\r\n\r\n    this.io.on(\"success\", data => {\r\n      // login\r\n      if(data.type === \"connectInsert\" || data.type === \"connectUpdate\"){\r\n        cookies.set(\"accessToken\", data.accessToken, {path: \"/\"})\r\n\r\n        this.setState({\r\n          accessToken: data.accessToken,\r\n          temp: {...this.state.temp, successfulConnectInit: true}\r\n        })\r\n      }\r\n\r\n      // logout\r\n      if(data.type === \"disconnect\"){\r\n        cookies.remove(\"accessToken\")\r\n        this.setState({accessToken: undefined})\r\n      }\r\n    })\r\n\r\n    this.io.on(\"errorU\", data => {\r\n      console.warn(\"error\", data);\r\n\r\n      if(data.type === \"invalidAccessToken\"){\r\n        cookies.remove(\"accessToken\")\r\n        this.setState({accessToken: undefined})\r\n      }\r\n    })\r\n\r\n    this.io.on('connectUpdate', this.handleUpdateFromServer)\r\n\r\n    this.io.on('update', this.handleUpdateFromServer)\r\n  }\r\n\r\n  componentDidMount(){\r\n    let objectsToLoad = [\"projects\", \"breaks\", \"defaultProjects\", \"settings\", \"startTime\", \"endTime\"]\r\n    let propertiesToLoad = [\"mode\", \"defaultColorIndex\", \"defaultColorIndexDefaultProjects\", \"productivityPercentage\", \"useDefaultProjects\"]\r\n\r\n    let defaultValues = {\r\n      projects: [],\r\n      breaks: [],\r\n      defaultProjects: [],\r\n      settings: defaultSettings,\r\n      startTime: {h: 2, m: \"00\", pm: true},\r\n      endTime: {h: 9, m: \"00\", pm: true},\r\n      mode: \"planning\",\r\n      defaultColorIndex: 0,\r\n      defaultColorIndexDefaultProjects: 0,\r\n      productivityPercentage: undefined,\r\n      useDefaultProjects: true\r\n    }\r\n\r\n\r\n    let data = {}\r\n\r\n    objectsToLoad.forEach(el => {\r\n      try{\r\n        data[el] = JSON.parse(localStorage[el])\r\n      }\r\n      catch(e){\r\n        // set default (if data from localStorage can't be used)\r\n        data[el] = defaultValues[el]\r\n      }\r\n    })\r\n\r\n    propertiesToLoad.forEach(el => {\r\n      data[el] = localStorage[el] ? localStorage[el] : defaultValues[el]\r\n    })\r\n\r\n    // load lastModified\r\n    for(let localStorageKey of Object.keys(localStorage)){\r\n      if(localStorageKey.startsWith(\"lastModified_\")){\r\n        // set the value for an arbitrarily long path\r\n        let pathArray = localStorageKey.split(\"_\")\r\n        let pathLength = pathArray.length\r\n        let lastModifiedObj = data\r\n        for(let i = 0; i < pathLength - 1; i++){\r\n          if(!(pathArray[i] in lastModifiedObj)) lastModifiedObj[pathArray[i]] = {}\r\n          lastModifiedObj = lastModifiedObj[pathArray[i]]\r\n        }\r\n        lastModifiedObj[pathArray[pathLength - 1]] = new Date(localStorage[localStorageKey])\r\n      }\r\n    }\r\n\r\n    this.setState(data);\r\n\r\n    // if the user's logged in, connect to the server\r\n    (data => {\r\n      setTimeout(() => {\r\n        let accessToken = cookies.get(\"accessToken\")\r\n        if(accessToken){\r\n          if(this.io.disconnected) this.setState({accessToken})\r\n          else this.io.emit(\"connectInit\", {type: \"accessToken\", accessToken, localData: data})\r\n        }\r\n      }, 5)\r\n    }).call(this, data)\r\n  }\r\n\r\n  connect = idToken => {\r\n    // if the user is offline or the server is down...\r\n    if(this.io.disconnected){\r\n      this.setState({temp: {...this.state.temp, showDisconnectedError: true}})\r\n      return\r\n    }\r\n\r\n    let {\r\n      projects,\r\n      breaks,\r\n      defaultProjects,\r\n      settings,\r\n      startTime,\r\n      endTime,\r\n      mode,\r\n      defaultColorIndex,\r\n      defaultColorIndexDefaultProjects,\r\n      lastReset,\r\n      useDefaultProjects,\r\n      lastModified\r\n    } = this.state\r\n\r\n    let localData = {\r\n      projects,\r\n      breaks,\r\n      defaultProjects,\r\n      settings,\r\n      startTime,\r\n      endTime,\r\n      mode,\r\n      defaultColorIndex,\r\n      defaultColorIndexDefaultProjects,\r\n      lastReset,\r\n      useDefaultProjects,\r\n      lastModified\r\n    }\r\n\r\n    if(this.state.productivityPercentage) localData.productivityPercentage = this.state.productivityPercentage\r\n\r\n    this.idToken = idToken\r\n\r\n    this.io.emit(\"connectInit\", {type: \"OAuth\", idToken, localData})\r\n  }\r\n\r\n  disconnect = () => {\r\n    if(window.confirm(\"Are you sure you want to sign out?\")){\r\n      // if the user is offline or the server is down...\r\n      if(this.io.disconnected){\r\n        this.setState({temp: {...this.state.temp, showDisconnectedError: true}})\r\n        return\r\n      }\r\n\r\n      this.io.emit(\"disconnectU\", {accessToken: cookies.get(\"accessToken\")})\r\n    }\r\n  }\r\n\r\n  update = (data, changes) => {\r\n    // handle reset\r\n    if(data.projects && !data.projects.length && this.state.projects.length){\r\n      if(data.useDefaultProjects || this.state.useDefaultProjects){\r\n        data.projects = this.state.defaultProjects\r\n\r\n        // suggest a new startTime and set the project times\r\n        let settings = data.settings || this.state.settings\r\n        let startTime = TimeCalc.add(new Date().getHours() * 60 + new Date().getMinutes(), 10)\r\n        startTime = TimeCalc.round(startTime, settings.roundTo)\r\n        data.projects = setTimesForProjects(data.projects, settings, [], startTime)\r\n\r\n        // generate a new unique ID for each project\r\n        data.projects.forEach(project => {\r\n          project.id = makeNewId(data.projects, \"projects\")\r\n        })\r\n\r\n        // set the startTime\r\n        data.startTime = startTime\r\n      }\r\n      else data.projects = []\r\n\r\n      data.breaks = []\r\n      data.lastReset = new Date()\r\n      data.productivityPercentage = undefined\r\n\r\n      // delete the project/break lastModified fields in localStorage and state\r\n      this.setState({lastModified: {...this.state.lastModified, projects: {}, breaks: {}}})\r\n      this.deleteObjectsLocalStorage(\"lastModified_projects_\")\r\n      this.deleteObjectsLocalStorage(\"lastModified_breaks_\")\r\n    }\r\n\r\n    // assign order to projects\r\n    for(let arrId of [\"projects\", \"defaultProjects\"]){\r\n      if(data[arrId]){\r\n        data[arrId].forEach((project, i) => {\r\n          project.order = i\r\n        })\r\n      }\r\n    }\r\n\r\n    // last modified\r\n    let lastModified = {}\r\n    Object.keys(data).forEach(el => {\r\n      switch (el) {\r\n        case \"projects\":\r\n          lastModified.projects = this.setMultipleLastModified(\r\n            data.projects,\r\n            changes ? changes.projects : undefined,\r\n            \"projects\"\r\n          )\r\n          break;\r\n        case \"breaks\":\r\n          lastModified.breaks = this.setMultipleLastModified(\r\n            data.breaks,\r\n            changes ? changes.breaks : undefined,\r\n            \"breaks\"\r\n          )\r\n          break;\r\n        case \"defaultProjects\":\r\n          lastModified.defaultProjects = this.setMultipleLastModified(\r\n            data.defaultProjects,\r\n            changes ? changes.defaultProjects : undefined,\r\n            \"defaultProjects\"\r\n          )\r\n          break;\r\n        case \"settings\":\r\n          lastModified.settings = this.state.lastModified && this.state.lastModified.settings ? this.state.lastModified.settings : {}\r\n          Object.keys(data.settings).forEach(el => {\r\n            if(data.settings[el] !== this.state.settings[el]){\r\n              lastModified.settings[el] = new Date()\r\n              localStorage[\"lastModified_settings_\" + el] = lastModified.settings[el]\r\n            }\r\n          })\r\n          break;\r\n        default:\r\n          lastModified[el] = new Date()\r\n          localStorage[\"lastModified_\" + el] = lastModified[el]\r\n      }\r\n    })\r\n    data.lastModified = {lastReset: this.state.lastModified.lastReset, ...lastModified}\r\n\r\n    this.setState(data)\r\n\r\n    // save to localStorage\r\n    for(let el of Object.keys(data)){\r\n      if(el === \"lastModified\") continue // lastModified was already saved to localStorage above\r\n\r\n      if(typeof data[el] === \"object\" && el !== \"lastReset\") localStorage[el] = JSON.stringify(data[el])\r\n      else localStorage[el] = data[el]\r\n    }\r\n\r\n    // send an update to the server\r\n    if(this.state.accessToken){\r\n      if(!this.io.disconnected){\r\n        this.io.emit(\"update\", {accessToken: this.state.accessToken, data})\r\n      }\r\n      else{\r\n        this.setState({temp: {...this.state.temp, updatedWhileDisconnected: true}})\r\n      }\r\n    }\r\n  }\r\n\r\n  closeSnackbar = () => {\r\n    this.setState({\r\n      temp: {...this.state.temp, showDisconnectedError: false}\r\n    })\r\n  }\r\n\r\n  // get only relevant data from the state\r\n  getData(){\r\n    let data = {}\r\n    Object.keys(this.state).forEach(el => {\r\n      if(el !== \"accessToken\" && el !== \"temp\" && el !== \"lastModified\"){\r\n        data[el] = this.state[el]\r\n      }\r\n    })\r\n    return data\r\n  }\r\n\r\n  // determine which properties of a project or a break were modified, save lastModified to localStorage and return it too\r\n  /*\r\n    object = project or break\r\n    key = \"projects\" or \"breaks\"\r\n    lastModified is only the project's/break's last modified (from the state)\r\n  */\r\n  setLastModified = (object, objectId, key, lastModified) => {\r\n    // if the user deleted the object\r\n    if(!object){\r\n      lastModified = {id: new Date()}\r\n      let localStorageKey = [\"lastModified\", key, objectId, \"id\"].join(\"_\")\r\n      localStorage[localStorageKey] = lastModified.id\r\n\r\n      this.deleteObjectsLocalStorage([\"lastModified\", key, objectId, \"\"].join(\"_\"), localStorageKey)\r\n\r\n      return lastModified\r\n    }\r\n\r\n    // handle undefined\r\n    if(!lastModified) lastModified = {}\r\n\r\n    // find the object in the state\r\n    let stateObjectIndex = this.state[key].findIndex(el => el.id === objectId)\r\n\r\n    // loop through the properties we want to keep track of\r\n    Object.keys(object).forEach(property => {\r\n      // if it was changed...\r\n      let propertyChanged\r\n      // (if the user created a new project/break, it won't be in the state yet)\r\n      if(this.state[key][stateObjectIndex]){\r\n        if(typeof object[property] === \"object\"){\r\n          propertyChanged = !this.areIdenticalObjects(\r\n            object[property],\r\n            this.state[key][stateObjectIndex][property]\r\n          )\r\n        }\r\n        else propertyChanged = object[property] !== this.state[key][stateObjectIndex][property]\r\n      }\r\n      else propertyChanged = true\r\n\r\n      if(propertyChanged){\r\n        lastModified[property] = new Date()\r\n\r\n        let localStorageKey = [\"lastModified\", key, objectId, property].join(\"_\")\r\n        localStorage[localStorageKey] = lastModified[property]\r\n      }\r\n    })\r\n\r\n    return lastModified\r\n  }\r\n\r\n  // determine which projects/breaks were modified, call setLastModified on them\r\n  /*\r\n    array = array of projects or breaks from the update method's args\r\n    lastModified is only lastModified.projects or .breaks\r\n    changedIds can be undefined\r\n    key = \"projects\" or \"breaks\"\r\n  */\r\n  setMultipleLastModified = (array, changedIds, key) => {\r\n    let lastModified = this.state.lastModified[key] // init\r\n    if(!lastModified) lastModified = {} // handle undefined\r\n\r\n    // if only a specific project/break was modified, check its fields\r\n    if(changedIds){\r\n      // handle an input with just 1 id\r\n      if(typeof changedIds !== \"object\") changedIds = [changedIds]\r\n\r\n      changedIds.forEach(changedId => {\r\n        let index = array.findIndex(object => object.id === parseInt(changedId))\r\n        let changedObject = array[index]\r\n\r\n        lastModified[changedId] = this.setLastModified(\r\n          changedObject,\r\n          changedId,\r\n          key,\r\n          lastModified[changedId]\r\n        )\r\n      })\r\n    }\r\n    // else check all projects\r\n    else{\r\n      array.forEach((object, i) => {\r\n        let objectId = object.id\r\n\r\n        lastModified[objectId] = this.setLastModified(\r\n          object,\r\n          objectId,\r\n          key,\r\n          lastModified[objectId]\r\n        )\r\n      })\r\n    }\r\n\r\n    return lastModified\r\n  }\r\n\r\n  deleteObjectsLocalStorage = (startsWithString, except = \"\") => {\r\n    let localStorageKeys = Object.keys(localStorage)\r\n    let relevantKeys = []\r\n    localStorageKeys.forEach(key => {\r\n      if(key.startsWith(startsWithString) && key !== except) relevantKeys.push(key)\r\n    })\r\n    relevantKeys.forEach(key => {\r\n      localStorage.removeItem(key)\r\n    })\r\n  }\r\n\r\n  handleUpdateFromServer = data => {\r\n    // merge lastModified when saving to state\r\n    this.setState({\r\n      ...data,\r\n      lastModified: {\r\n        ...this.state.lastModified,\r\n        ...data.lastModified\r\n      }\r\n    })\r\n\r\n    // save to localStorage\r\n    Object.keys(data).forEach(key => {\r\n      if(key === \"lastModified\"){\r\n        Object.keys(data.lastModified).forEach(lastModifiedKey => {\r\n          if(\r\n            lastModifiedKey === \"projects\" ||\r\n            lastModifiedKey === \"breaks\" ||\r\n            lastModifiedKey ===\"defaultProjects\"\r\n          ){\r\n            Object.keys(data.lastModified[lastModifiedKey]).forEach(objectIdKey => {\r\n              Object.keys(data.lastModified[lastModifiedKey][objectIdKey]).forEach(propertyKey => {\r\n                let localStorageKey = [\"lastModified\", lastModifiedKey, objectIdKey, propertyKey].join(\"_\")\r\n                localStorage[localStorageKey] = data.lastModified[lastModifiedKey][objectIdKey][propertyKey]\r\n              })\r\n            })\r\n          }\r\n          else localStorage[\"lastModified_\" + lastModifiedKey] = data.lastModified[lastModifiedKey]\r\n        })\r\n      }\r\n      else{\r\n        if(typeof data[key] === \"object\") localStorage[key] = JSON.stringify(data[key])\r\n        else localStorage[key] = data[key]\r\n      }\r\n    })\r\n  }\r\n\r\n  areIdenticalObjects = (obj1, obj2) => {\r\n    if(!obj2) return false\r\n\r\n    let keys\r\n    if(Array.isArray(obj1)) keys = Array.keys(obj1)\r\n    else keys = Object.keys(obj1)\r\n\r\n    for(let key of keys){\r\n      if(typeof obj1[key] === \"object\"){\r\n        if(!this.areIdenticalObjects(obj1[key], obj2[key])) return false\r\n      }\r\n      else if(obj1[key] !== obj2[key]) return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  render(){\r\n    let data = this.getData()\r\n\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <Router\r\n          data={data}\r\n          connect={this.connect}\r\n          update={this.update}\r\n          disconnect={this.disconnect}\r\n          loggedIn={Boolean(this.state.accessToken)}\r\n          disconnected={this.state.temp.disconnected}\r\n        />\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={this.state.temp.showDisconnectedError}\r\n          autoHideDuration={6000}\r\n          onClose={this.closeSnackbar}\r\n        >\r\n          <SnackbarContent\r\n            style={{backgroundColor: \"#d32f2f\"}}\r\n            aria-describedby=\"disconnectedErrorSnackbar\"\r\n            message={<span id=\"disconnectedErrorSnackbar\">We're having trouble reaching our server</span>}\r\n            action={[\r\n              <IconButton\r\n                key=\"close\"\r\n                aria-label=\"Close\"\r\n                color=\"inherit\"\r\n                styles={{padding: \".5rem\"}}\r\n                onClick={this.closeSnackbar}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            ]}\r\n          />\r\n        </Snackbar>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport DataSync from './DataSync';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<DataSync />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}
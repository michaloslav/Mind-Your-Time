{"version":3,"sources":["ModeSwitch.js","../node_modules/@material-ui/core/Fab/index.js","../node_modules/@material-ui/core/Fab/Fab.js"],"names":["__webpack_require__","r","__webpack_exports__","d","ModeSwitch","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_Fab__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Fab__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_2___default","props","_this","this","buttons","label","val","map","el","a","createElement","key","onClick","onModeChange","bind","color","mode","className","container","alignItems","justify","children","_interopRequireDefault","Object","defineProperty","exports","value","enumerable","get","_Fab","default","styles","_defineProperty2","_objectWithoutProperties2","_extends2","_react","_classnames","_withStyles","_ButtonBase","_helpers","theme","root","typography","button","boxSizing","minHeight","transition","transitions","create","duration","short","borderRadius","padding","minWidth","width","height","boxShadow","shadows","&:active","palette","getContrastText","grey","backgroundColor","&$focusVisible","&:hover","A100","@media (hover: none)","&$disabled","action","disabledBackground","textDecoration","disabled","display","justifyContent","primary","contrastText","main","dark","secondary","extended","&$sizeSmall","&$sizeMedium","focusVisible","colorInherit","sizeSmall","sizeMedium","Fab","_classNames","classes","disableFocusRipple","focusVisibleClassName","size","variant","other","concat","capitalize","focusRipple","defaultProps","component","type","_default","name"],"mappings":"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","file":"static/js/19.aa70b0ca.chunk.js","sourcesContent":["import React from 'react';\r\nimport Fab from '@material-ui/core/Fab'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport './css/ModeSwitch.css'\r\n\r\n// UI for switching between planning and working\r\nexport default function ModeSwitch(props) {\r\n  let buttonsArray = [{label: \"Plan\", val: \"planning\"}, {label: \"Work\", val: \"working\"}]\r\n  let buttons = buttonsArray.map(el => (\r\n    <Grid key={el.val}>\r\n      <Fab\r\n        onClick={props.onModeChange.bind(this, el.val)}\r\n        color={el.val === props.mode ? 'primary' : null}>\r\n        {el.label}\r\n      </Fab>\r\n    </Grid>\r\n  ))\r\n\r\n  return (\r\n    <Grid\r\n      className=\"ModeSwitch\"\r\n      container\r\n      alignItems='baseline'\r\n      justify=\"space-between\">\r\n      {buttons[0]}\r\n      {props.children}\r\n      {buttons[1]}\r\n    </Grid>\r\n  );\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _Fab.default;\n  }\n});\n\nvar _Fab = _interopRequireDefault(require(\"./Fab\"));","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _utils = require(\"@material-ui/utils\");\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _ButtonBase = _interopRequireDefault(require(\"../ButtonBase\"));\n\nvar _helpers = require(\"../utils/helpers\"); // @inheritedComponent ButtonBase\n\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: (0, _extends2.default)({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minHeight: 36,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      borderRadius: '50%',\n      padding: 0,\n      minWidth: 0,\n      width: 56,\n      height: 56,\n      boxShadow: theme.shadows[6],\n      '&:active': {\n        boxShadow: theme.shadows[12]\n      },\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        },\n        textDecoration: 'none'\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // assure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    primary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    secondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"extended\"`. */\n    extended: {\n      borderRadius: 48 / 2,\n      padding: '0 16px',\n      width: 'auto',\n      minHeight: 'auto',\n      minWidth: 48,\n      height: 48,\n      '&$sizeSmall': {\n        width: 'auto',\n        padding: '0 8px',\n        borderRadius: 34 / 2,\n        minWidth: 34,\n        height: 34\n      },\n      '&$sizeMedium': {\n        width: 'auto',\n        padding: '0 16px',\n        borderRadius: 40 / 2,\n        minWidth: 40,\n        height: 40\n      }\n    },\n\n    /* Styles applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"``. */\n    sizeSmall: {\n      width: 40,\n      height: 40\n    },\n\n    /* Styles applied to the root element if `size=\"medium\"``. */\n    sizeMedium: {\n      width: 48,\n      height: 48\n    }\n  };\n};\n\nexports.styles = styles;\n\nfunction Fab(props) {\n  var _classNames;\n\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      color = props.color,\n      disabled = props.disabled,\n      disableFocusRipple = props.disableFocusRipple,\n      focusVisibleClassName = props.focusVisibleClassName,\n      size = props.size,\n      variant = props.variant,\n      other = (0, _objectWithoutProperties2.default)(props, [\"children\", \"classes\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"size\", \"variant\"]);\n  return _react.default.createElement(_ButtonBase.default, (0, _extends2.default)({\n    className: (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.extended, variant === 'extended'), (0, _defineProperty2.default)(_classNames, classes.primary, color === 'primary'), (0, _defineProperty2.default)(_classNames, classes.secondary, color === 'secondary'), (0, _defineProperty2.default)(_classNames, classes[\"size\".concat((0, _helpers.capitalize)(size))], size !== 'large'), (0, _defineProperty2.default)(_classNames, classes.disabled, disabled), (0, _defineProperty2.default)(_classNames, classes.colorInherit, color === 'inherit'), _classNames), className),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: (0, _classnames.default)(classes.focusVisible, focusVisibleClassName)\n  }, other), _react.default.createElement(\"span\", {\n    className: classes.label\n  }, children));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Fab.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: _propTypes.default.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: _propTypes.default.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: _utils.componentPropType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: _propTypes.default.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: _propTypes.default.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: _propTypes.default.string,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: _propTypes.default.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: _propTypes.default.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * @ignore\n   */\n  type: _propTypes.default.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: _propTypes.default.oneOf(['round', 'extended'])\n} : void 0;\nFab.defaultProps = {\n  color: 'default',\n  component: 'button',\n  disabled: false,\n  disableFocusRipple: false,\n  size: 'large',\n  type: 'button',\n  variant: 'round'\n};\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiFab'\n})(Fab);\n\nexports.default = _default;"],"sourceRoot":""}
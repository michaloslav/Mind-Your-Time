{"version":3,"sources":["../node_modules/@material-ui/icons/Undo.js","SetProgressPopoverContent.js","SetProgressAndPauseButton.js","ChangeProjectStateDropdown.js","ChangeProjectStateCell.js","ProjectsTableTimeCell.js","ProjectsTableRowDisplay.js","util/makeDaysString.js","../node_modules/@material-ui/icons/Done.js","../node_modules/@material-ui/icons/Edit.js"],"names":["_interopRequireDefault","__webpack_require__","Object","defineProperty","exports","value","default","_react","_default","createElement","Fragment","fill","d","SetProgressPopoverContent","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","e","val","target","isNaN","setState","progress","save","onPause","row","id","state","render","react_default","a","_Context","Consumer","_ref","darkTheme","className","style","color","Input_default","autoFocus","aria-label","onChange","onKeyPress","key","IconButton_default","onClick","Done_default","TimeCalc","subtractToMinutes","objectSpread","currentTime","s","Date","getSeconds","startedWorkingOnIt","parseInt","Component","SetProgressAndPauseButton","handleClick","anchorEl","currentTarget","close","Pause_default","Popover_default","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","SetProgressPopoverContent_SetProgressPopoverContent","ChangeProjectStateDropdown","setTimeout","showSetProgress","suggestDone","progressCapped","estimatedDuration","onProjectStateChange","List_default","title","icon","undefined","bind","assertThisInitialized","map","el","ListItem_default","button","ChangeProjectStateCell","content","isMobile","push","Undo_default","ChangeProjectStateDropdown_ChangeProjectStateDropdown","SetProgressAndPauseButton_SetProgressAndPauseButton","PlayArrow_default","TableCell_default","ProjectsTableTimeCell","cellContent","startIsTooLate","stateClass","makeString","plannedTime","start","pm","end","timeFormat24H","endIsTooLate","showEditing","Tooltip_default","disableFocusListener","disableTouchListener","children","ProjectsTableRowDisplay","timeLeft","isDefaultProjects","isBiggerThan","add","endTimeInMinutes","toMinutesSinceMidnight","bufferLength","settings","bufferTimePercentage","name","src_ProjectsTableTimeCell","makeDaysString","days","window","innerWidth","mode","startEditingMobile","startEditing","Edit_default","onDeleteProject","Delete_default","ChangeProjectStateCell_ChangeProjectStateCell","__webpack_exports__","dayNames","shortDayNames","joinNames","names","result","length","forEach","i","shortVersion","arguments","positiveCount","filter","namesArr","negativeDayNames","positiveDayNames"],"mappings":"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","file":"static/js/26.bc73df78.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z\"\n})), 'Undo');\n\nexports.default = _default;","import React, { Component } from 'react';\r\nimport Input from '@material-ui/core/Input';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport { SettingsContext } from './_Context'\r\nimport TimeCalc from './util/TimeCalc'\r\nimport './css/SetProgressPopoverContent.css'\r\n\r\n// the content of the pausing progress popover, this lets you set custom progress\r\nexport default class SetProgressPopoverContent extends Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n    // determine the progress that should be set (but still let the user decide otherwise)\r\n    let progress = TimeCalc.subtractToMinutes(\r\n      {...props.currentTime, s: new Date().getSeconds()},\r\n      props.row.startedWorkingOnIt,\r\n      true\r\n    )\r\n    if(props.row.progress) progress = progress + parseInt(props.row.progress)\r\n\r\n    this.state = {progress}\r\n  }\r\n\r\n  handleInputChange = e => {\r\n    let val = e.target.value\r\n\r\n    if(isNaN(val)) return // super simple validation (+ input type number, should be enough)\r\n\r\n    this.setState({progress: val})\r\n  }\r\n\r\n  save = () => {\r\n    this.props.onPause(this.props.row.id, \"paused\", this.state.progress)\r\n  }\r\n\r\n  render = () => (\r\n    <SettingsContext.Consumer>\r\n      {({darkTheme}) => (\r\n        <div className=\"SetProgressPopoverContent\" style={{color: darkTheme ? \"white\" : \"black\"}}>\r\n          <span>I've worked on this for </span>\r\n          <Input\r\n            autoFocus\r\n            aria-label=\"Progress in minutes\"\r\n            value={this.state.progress || \"\"}\r\n            onChange={this.handleInputChange}\r\n            onKeyPress={e => {if(e.key === \"Enter\") this.save()}}\r\n          />\r\n          <span> minutes</span>\r\n          <IconButton\r\n            aria-label=\"Save the progress and pause the project\"\r\n            onClick={this.save}\r\n            color=\"primary\">\r\n            <DoneIcon />\r\n          </IconButton>\r\n        </div>\r\n      )}\r\n    </SettingsContext.Consumer>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport SetProgressPopoverContent from './SetProgressPopoverContent'\r\nimport Popover from '@material-ui/core/Popover';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\n\r\n// the button responsible for pausing the project and the Popover associated with it\r\n// (the Popover lets you set progress)\r\nexport default class SetProgressAndPauseButton extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      anchorEl: null\r\n    }\r\n  }\r\n\r\n  handleClick = e => {\r\n    this.setState({anchorEl: e.currentTarget})\r\n  }\r\n\r\n  close = () => {\r\n    this.setState({anchorEl: null})\r\n  }\r\n\r\n  render(){\r\n    let anchorEl = this.state.anchorEl\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton  aria-label=\"Pause the project\" onClick={this.handleClick}>\r\n          <PauseIcon />\r\n        </IconButton>\r\n\r\n        <Popover\r\n          open={Boolean(anchorEl)}\r\n          anchorEl={anchorEl}\r\n          onClose={this.close}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n          }}\r\n        >\r\n          <SetProgressPopoverContent {...this.props} />\r\n        </Popover>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport SetProgressPopoverContent from './SetProgressPopoverContent'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport './css/ChangeProjectStateDropdown.css'\r\n\r\n// used in the mobile version of the UI if the project's state is workingOnIt\r\n// gives the user the option to pause or mark the project as done\r\nexport default class ChangeProjectStateDropdown extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      anchorEl: null,\r\n      showSetProgress: false\r\n    }\r\n  }\r\n\r\n  open = e => {\r\n    this.setState({anchorEl: e.currentTarget})\r\n  }\r\n\r\n  close = () => {\r\n    this.setState({anchorEl: null})\r\n    setTimeout(() => {\r\n      this.setState({showSetProgress: false}) // hide the setProgress Popover\r\n    }, 500)\r\n  }\r\n\r\n  render = () => {\r\n    let {anchorEl} = this.state\r\n\r\n    // determines which action should be recommended (by coloring it with the primary color)\r\n    let suggestDone = this.props.progressCapped === this.props.row.estimatedDuration\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <IconButton\r\n          aria-label=\"Open the project state dropdown\"\r\n          onClick={this.open}\r\n          color=\"primary\"\r\n        >\r\n          {suggestDone ? <DoneIcon color=\"primary\" /> : <PauseIcon color=\"primary\" />}\r\n        </IconButton>\r\n        <Popover\r\n          className=\"ChangeProjectStateDropdownMenu\"\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={this.close}\r\n        >\r\n          {\r\n            this.state.showSetProgress ? (\r\n              <SetProgressPopoverContent\r\n                onPause={this.props.onProjectStateChange}\r\n                row={this.props.row}\r\n                currentTime={this.props.currentTime}\r\n              />\r\n            ) : (\r\n              <List>\r\n                {\r\n                  [\r\n                    {\r\n                      title: \"Pause\",\r\n                      icon: <PauseIcon color={suggestDone ? undefined : \"primary\"} />,\r\n                      onClick: this.setState.bind(this, {showSetProgress: true}, null),\r\n                    },\r\n                    {\r\n                      title: \"Done\",\r\n                      icon: <DoneIcon color={suggestDone ? \"primary\" : undefined} />,\r\n                      onClick: this.props.onProjectStateChange.bind(this, this.props.row.id, \"done\"),\r\n                    }\r\n                  ].map(el => (\r\n                    <ListItem key={el.title} button onClick={el.onClick}>\r\n                      {el.icon}\r\n                      {el.title}\r\n                    </ListItem>\r\n                  ))\r\n                }\r\n              </List>\r\n            )\r\n          }\r\n        </Popover>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport SetProgressAndPauseButton from './SetProgressAndPauseButton'\r\nimport ChangeProjectStateDropdown from './ChangeProjectStateDropdown'\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport StartIcon from '@material-ui/icons/PlayArrow';\r\nimport UndoIcon from '@material-ui/icons/Undo';\r\nimport './css/ChangeProjectStateCell.css'\r\n\r\n// a simple display only component that lets the user edit a project's state\r\nexport default function ChangeProjectStateCell(props){\r\n  // there are always 1-2 buttons, which ones depends on isMobile and the current state of the project\r\n  // the mobile UI can only fit 1 button, desktop can fit 2\r\n  let content = []\r\n  // if the project is done, show an undo button (to let the user go back to \"paused\") and on desktop, show a \"done\" span\r\n  if(props.row.state === \"done\"){\r\n    if(!props.isMobile) content.push(<span key=\"doneSpan\" className=\"done\">DONE</span>)\r\n    content.push(\r\n      <IconButton\r\n        key=\"undo\"\r\n        aria-label=\"Mark project as undone\"\r\n        onClick={props.onProjectStateChange.bind(this, props.row.id, \"paused\")}\r\n      >\r\n        <UndoIcon/>\r\n      </IconButton>\r\n    )\r\n  }\r\n  else{\r\n    // if the state is \"workingOnIt\", show a pause button and a done button on desktop and a dropdown with these option on mobile\r\n    if(props.row.state === \"workingOnIt\"){\r\n      if(props.isMobile){\r\n        content.push(\r\n          <ChangeProjectStateDropdown\r\n            key=\"dropdown\"\r\n            row={props.row}\r\n            currentTime={props.currentTime}\r\n            onProjectStateChange={props.onProjectStateChange}\r\n            progressCapped={props.progressCapped}\r\n          />\r\n        )\r\n      }\r\n      else{\r\n        content.push(\r\n          <SetProgressAndPauseButton\r\n            key=\"pause\"\r\n            row={props.row}\r\n            currentTime={props.currentTime}\r\n            onPause={props.onProjectStateChange} />\r\n        )\r\n      }\r\n    }\r\n    else{\r\n      content.push(\r\n        <IconButton\r\n          key=\"start\"\r\n          aria-label=\"Start working on the project\"\r\n          onClick={props.onProjectStateChange.bind(this, props.row.id, \"workingOnIt\")}\r\n          color=\"primary\"\r\n        >\r\n          <StartIcon />\r\n        </IconButton>\r\n      )\r\n    }\r\n\r\n    if(!props.isMobile){\r\n      content.push(\r\n        <IconButton\r\n          key=\"done\"\r\n          aria-label=\"Mark the project as done\"\r\n          onClick={props.onProjectStateChange.bind(this, props.row.id, \"done\")}\r\n          color={props.row.state === \"workingOnIt\" ? \"primary\" : undefined}>\r\n          <DoneIcon />\r\n        </IconButton>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TableCell className=\"ChangeProjectStateCell\">\r\n      {content.map(el => el)}\r\n    </TableCell>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport TimeCalc from './util/TimeCalc'\r\n\r\n// displays the startTime and endTime with the relevant styling, Tooltip etc.\r\nconst ProjectsTableTimeCell = props => {\r\n  let cellContent = (\r\n    <div>\r\n      <span\r\n        className={props.startIsTooLate && props.stateClass === \"stateClassTooLate\"  ? props.stateClass : null}\r\n      >\r\n        {TimeCalc.makeString(props.row.plannedTime.start,\r\n          props.row.plannedTime.start.pm !== props.row.plannedTime.end.pm,\r\n          true,\r\n          props.timeFormat24H\r\n        ) /*showPmOrAm only if it's different from the endTime*/}\r\n      </span>\r\n      <span\r\n        className={props.startIsTooLate && props.endIsTooLate && props.stateClass === \"stateClassTooLate\" ? props.stateClass : null}\r\n      >\r\n        -\r\n      </span>\r\n      <span\r\n        className={props.endIsTooLate && props.stateClass !== \"stateClassDone\" ? \"stateClassTooLate\" : null}\r\n      >\r\n        {TimeCalc.makeString(props.row.plannedTime.end, true, false, props.timeFormat24H)}\r\n      </span>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <TableCell className={props.showEditing ? \"setStartTimeCell\" : null}>\r\n      {props.isMobile ? (\r\n        <Tooltip\r\n          title={props.progress + \"/\" + props.row.estimatedDuration + \" done\"}\r\n          disableFocusListener disableTouchListener\r\n          children={cellContent}\r\n        />\r\n      ) : cellContent}\r\n    </TableCell>\r\n  )\r\n}\r\n\r\nexport default ProjectsTableTimeCell\r\n","import React from 'react';\r\nimport ChangeProjectStateCell from './ChangeProjectStateCell'\r\nimport ProjectsTableTimeCell from './ProjectsTableTimeCell'\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport TimeCalc from './util/TimeCalc'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport makeDaysString from './util/makeDaysString'\r\nimport { SettingsContext, IsMobileContext } from './_Context'\r\nimport './css/ProjectsTableRow.css'\r\n\r\n// a simple display element for showing information about the project\r\nconst ProjectsTableRowDisplay = props => {\r\n  let stateClass, startIsTooLate, endIsTooLate, timeLeft\r\n  let {progress, progressCapped} = props\r\n  if(!props.isDefaultProjects){\r\n    timeLeft = parseInt(props.row.estimatedDuration) - progressCapped\r\n\r\n    // get the stateClass (too late or done) and tableRowStyle (to display progress graphically)\r\n    // figure out if the start and the end are late, if they are, show them in red\r\n    startIsTooLate = !TimeCalc.isBiggerThan(\r\n      TimeCalc.add(props.row.plannedTime.start, progressCapped),\r\n      props.currentTime, true, true)\r\n\r\n    let endTimeInMinutes = TimeCalc.toMinutesSinceMidnight(props.row.plannedTime.end, true)\r\n    let bufferLength = props.row.estimatedDuration * props.settings.bufferTimePercentage\r\n    endIsTooLate = !TimeCalc.isBiggerThan(\r\n      // take the bufferTime into account (only show the end in red if currentTime > endTime + buffer)\r\n      endTimeInMinutes + bufferLength,\r\n      props.currentTime,\r\n      true,true\r\n    )\r\n\r\n    if(props.row.state === \"done\") stateClass = \"stateClassDone\"\r\n    else{\r\n      if(startIsTooLate && props.row.state !== \"workingOnIt\"){\r\n        stateClass = \"stateClassTooLate\"\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <IsMobileContext.Consumer>\r\n      {isMobile => (\r\n        <React.Fragment>\r\n          <TableCell className={stateClass} children={props.row.name} />\r\n          {(!isMobile || props.isDefaultProjects) && (\r\n            <TableCell>\r\n              {progress && props.row.state !== \"done\" ? (\r\n                <Tooltip title={progress + \"/\" + props.row.estimatedDuration + \" done\"}>\r\n                  <span>\r\n                    {timeLeft} minutes left\r\n                  </span>\r\n                </Tooltip>\r\n              ) : (\r\n                props.row.estimatedDuration + \" minutes\"\r\n              )}\r\n            </TableCell>\r\n          )}\r\n\r\n          {!props.isDefaultProjects && (\r\n            <SettingsContext.Consumer>\r\n              {settings => (\r\n                <ProjectsTableTimeCell\r\n                  showEditing={false}\r\n                  startIsTooLate={startIsTooLate}\r\n                  endIsTooLate={endIsTooLate}\r\n                  stateClass={stateClass}\r\n                  row={props.row}\r\n                  timeFormat24H={settings.timeFormat24H}\r\n                  isMobile={isMobile}\r\n                  progress={progress}\r\n                />\r\n              )}\r\n            </SettingsContext.Consumer>\r\n          )}\r\n\r\n          {props.isDefaultProjects && !isMobile && (\r\n            <TableCell>\r\n              {makeDaysString(props.row.days, window.innerWidth < 950)}\r\n            </TableCell>\r\n          )}\r\n\r\n          {props.mode === \"planning\" ? (\r\n            <TableCell>\r\n              <IconButton\r\n                aria-label=\"Edit the project\"\r\n                onClick={isMobile ? props.startEditingMobile.bind(this, props.row.id) : props.startEditing}>\r\n                <EditIcon />\r\n              </IconButton>\r\n              {\r\n                !isMobile && (\r\n                  <IconButton\r\n                    aria-label=\"Delete the project\"\r\n                    onClick={props.onDeleteProject.bind(this, props.row.id)}\r\n                    className=\"deleteIconButton\">\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                )\r\n              }\r\n            </TableCell>\r\n          ) : (\r\n            <ChangeProjectStateCell\r\n              row={props.row}\r\n              onProjectStateChange={props.onProjectStateChange}\r\n              currentTime={props.currentTime}\r\n              isMobile={isMobile}\r\n              progressCapped={progressCapped}\r\n            />\r\n          )}\r\n        </React.Fragment>\r\n      )}\r\n    </IsMobileContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default ProjectsTableRowDisplay\r\n","const dayNames = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\r\nconst shortDayNames = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"]\r\n\r\n// adds commas and the & character\r\nfunction joinNames(names){\r\n  let result = \"\"\r\n  let length = names.length\r\n  names.forEach((name, i) => {\r\n    result += name\r\n    if(i === length - 2) result += \" & \"\r\n    if(i < length - 2) result += \", \"\r\n  })\r\n  return result\r\n}\r\n\r\n// takes the days object of a defaultProject (which is an array of 7 bools) and creates a string representation of it\r\nexport default function makeDaysString(days, shortVersion = false){\r\n  if(!days) return \"Every day\" // if it's not defined, assume it's all true\r\n\r\n  // count how many true values there are in the array\r\n  let positives = days.filter(val => val)\r\n  let positiveCount = positives.length\r\n\r\n  if(positiveCount === 7) return \"Every day\"\r\n  if(positiveCount === 0) return \"Never\"\r\n\r\n  let namesArr = shortVersion ? shortDayNames : dayNames\r\n\r\n  // if almost all the values are true, return somthing like \"Every day except Sunday\"\r\n  if(positiveCount >= 5){\r\n    let negativeDayNames = []\r\n    days.forEach((val, i) => {\r\n      if(!val) negativeDayNames.push(namesArr[i])\r\n    })\r\n\r\n    let result = shortVersion ? 'All' : 'Every day'\r\n    result += ' except ' + joinNames(negativeDayNames)\r\n    return result\r\n  }\r\n\r\n  // if there aren't that many true values, simply list the days\r\n  else{\r\n    let positiveDayNames = []\r\n    days.forEach((val, i) => {\r\n      if(val) positiveDayNames.push(namesArr[i])\r\n    })\r\n    return joinNames(positiveDayNames)\r\n  }\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n})), 'Done');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Edit');\n\nexports.default = _default;"],"sourceRoot":""}
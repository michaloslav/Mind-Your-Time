{"version":3,"sources":["../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/keys.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js"],"names":["module","exports","hookCallback","some","hooks","apply","arguments","isArray","input","Array","Object","prototype","toString","call","isObject","isUndefined","isNumber","isDate","Date","map","arr","fn","i","res","length","push","hasOwnProp","a","b","hasOwnProperty","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","getParsingFlags","m","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","isValid","_isValid","flags","parsedParts","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","undefined","bigHour","isFrozen","createInvalid","NaN","fun","t","this","len","momentProperties","copyConfig","to","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","config","updateOffset","isMoment","obj","absFloor","number","Math","ceil","floor","toInt","argumentForCoercion","coercedNumber","value","isFinite","compareArrays","array1","array2","dontConvert","min","lengthDiff","abs","diffs","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","arg","args","key","slice","join","Error","stack","keys","deprecations","deprecateSimple","name","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","set","aliases","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","sign","pow","max","substr","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","callback","func","localeData","formatMoment","expandFormat","array","match","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p1","p2","p3","p4","s","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","year","isLeapYear","y","parseTwoDigitYear","parseInt","indexOf","getSetYear","makeGetSet","keepTime","set$1","get","month","date","daysInMonth","x","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","split","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","sort","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","n","concat","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","d","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","day","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","h","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","e","code","getSetGlobalLocale","values","data","getLocale","defineLocale","abbr","_config","parentLocale","forEach","names","j","next","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","defaults","c","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","now","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","string","exec","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","result","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","hour","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","minute","second","millisecond","configFromObject","configFromInput","isUTC","getOwnPropertyNames","k","isObjectEmpty","add","createFromConfig","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","duration","years","quarters","quarter","weeks","isoWeek","days","milliseconds","unitHasDecimal","parseFloat","isDurationValid","_milliseconds","_days","_months","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","offsetFromString","chunkOffset","matcher","matches","chunk","parts","cloneWithOffset","model","diff","clone","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","base","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","tmp","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","time","formats","sod","startOf","calendarFormat","asFloat","that","zoneDelta","endOf","startOfDate","isoWeekday","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","toJSON","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","_calendar","_longDateFormat","formatUpper","toUpperCase","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","source","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","charAt","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","as","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","toFixed","total","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","factory","baseIsEqual","__webpack_require__","Stack","equalArrays","equalByTag","equalObjects","getTag","isBuffer","isTypedArray","COMPARE_PARTIAL_FLAG","argsTag","arrayTag","objectTag","object","bitmask","customizer","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","__data__","size","assocIndexOf","splice","pop","ListCache","has","Map","MapCache","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","objectProto","funcToString","reIsNative","Symbol","nativeObjectToString","symToStringTag","toStringTag","isOwn","tag","unmasked","coreJsData","maskSrcKey","uid","IE_PROTO","Hash","hash","hashClear","hashDelete","hashGet","hashHas","hashSet","entries","clear","entry","nativeCreate","HASH_UNDEFINED","getMapData","type","setCacheAdd","setCacheHas","SetCache","predicate","cache","Uint8Array","eq","mapToArray","setToArray","COMPARE_UNORDERED_FLAG","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","byteLength","byteOffset","buffer","message","convert","isPartial","stacked","getAllKeys","objProps","objLength","skipCtor","objValue","othValue","compared","objCtor","constructor","othCtor","baseGetAllKeys","getSymbols","arrayPush","keysFunc","symbolsFunc","arrayFilter","stubArray","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isArguments","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","iteratee","baseGetTag","isObjectLike","isLength","typedArrayTags","freeGlobal","freeExports","nodeType","freeModule","freeProcess","process","nodeUtil","types","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","resolve","ctorString","getNative","baseAssignValue","keyBy","createAggregator","defineProperty","configurable","enumerable","writable","arrayAggregator","baseAggregator","baseIteratee","initializer","collection","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","iterable","props","isArrayLike","eachFunc","baseMatches","baseMatchesProperty","identity","property","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","srcValue","isStrictComparable","hasIn","isKey","toKey","path","baseGet","defaultValue","memoizeCapped","rePropName","reEscapeChar","stringToPath","charCodeAt","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","TypeError","memoized","Cache","baseToString","arrayMap","isSymbol","INFINITY","symbolToString","baseHasIn","hasPath","castPath","hasFunc","baseProperty","basePropertyDeep","freeSelf","self","root","baseIsNative","getValue","getRawTag","objectToString","nullTag","undefinedTag","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","isKeyable","__webpack_exports__","Doughnut","Line","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","target","_objectWithoutProperties","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","event","chartInstance","_this$props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","datasets","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","dataset","label","error","getCurrentDatasets","_this2","_this3","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","current","point","pid","otherProps","rest","update","_props2","node","defaultProps","destroy","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","isRequired","arrayOf","bool","propName","componentName","controllers","display","position","_React$Component2","_this5","_ref","_React$Component3","Pie","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","Bar","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","Radar","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","webpackPolyfill","paths","children","baseIsEqualDeep","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","arrayLikeKeys","baseKeys","MAX_SAFE_INTEGER","reIsDeepProp","reIsPlainProp","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","delta","reverseKeywords","JSON","stringify","z","xyz","t1","t2","t3","hi","f","p","q","hwb","wh","bl","ratio","cmyk","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Converter","pair","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","hexAlpha","scale","num","str","Color","valid","lightness","whiteness","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","spaces","maxes","capped","chans","sname","svalues","window","chartjsColor","noop","isNullOrUndef","_isFinite","_x","Number","valueOrDefault","valueAtIndexOrDefault","thisArg","each","loopable","reverse","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","onDataShift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","generateLabels","ds","arcOpts","bw","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","scaleMerge","parse","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","common","steps","UNITS","sorter","arrayUnique","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","adapter","_adapter","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","majorTicksEnabled","first","determineStepSize","scale_time","adapters","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","_format","amount","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","stackClear","stackDelete","stackGet","stackHas","stackSet","asyncTag","funcTag","genTag","proxyTag","arraySome","cacheHas","arrLength","othLength","seen","arrValue","othIndex","baseIsArguments","stubFalse","Buffer","reIsUint","baseIsTypedArray","baseUnary","nodeIsTypedArray"],"mappings":"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","file":"static/js/3.ead5a03b.chunk.js","sourcesContent":["//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;"],"sourceRoot":""}
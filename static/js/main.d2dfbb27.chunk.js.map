{"version":3,"sources":["util/TimeCalc.js","LoadingFallback.js","_Context.js","util/makeNewId.js","util/defaultValues.js","util/dataValidation/correctDataStructure.js","ErrorBoundary.js","Router.js","util/dataValidation/getCorrectDataStructureSection.js","util/dataValidation/validatePrimitive.js","util/dataValidation/validateObject.js","util/dataValidation/lastModifiedSysNoteToDates.js","util/objectUtil.js","util/dataValidation/dataValidation.js","util/dataValidation/index.js","DataSync.js","serviceWorker.js","index.js"],"names":["TimeCalc","time","result","keepPositiveIfCrossingMidnight","arguments","length","undefined","parseInt","isNaN","console","warn","parsedH","h","m","pm","s","this","isBiggerThan","minutes","setPm","Number","isInteger","Math","round","times","Array","isArray","resultInMinutes","i","toMinutesSinceMidnight","toTimeObject","addToMinutes","apply","time1","time2","subtractToMinutes","showPmOrAm","convert0To12EvenIfNotShowingPmOrAm","timeFormat24H","string","precision","timeInMinutes","orEqual","difference","temp","argument","toString","previousEndTime","previousDuration","settings","exactStartTime","add","bufferTimePercentage","roundTo","sum","average","setTimesForProjects","projects","breaks","startTime","JSON","parse","stringify","middleTimes","plannedTime","start","end","endTime","suggestStartTime","estimatedDuration","j","projectOverlapAreaStart","breakIsInFirstHalf","lengthOfBreak","LoadingFallback","props","_this","Object","F_Programming_React_MindYourTime_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","F_Programming_React_MindYourTime_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","F_Programming_React_MindYourTime_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","show","showTimeout","setTimeout","setState","clearTimeout","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_md_spinner__WEBPACK_IMPORTED_MODULE_6__","singleColor","Component","__webpack_require__","d","__webpack_exports__","SettingsContext","IsMobileContext","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","React","createContext","makeNewId","objects","key","newId","haveFoundUniqueId","floor","random","pow","id","localStorageKey","join","localStorage","defaultSettings","defaultDataValues","showResetButtonAfter","defaultColors","updateTimesAfterDrag","updateTimesAfterEdit","updateTimesAfterDelete","changeModeOnTab","detectBreaksAutomatically","adjustDurationOnPause","offerToAdjustDurationOnDone","darkTheme","defaultProjects","mode","defaultColorIndex","defaultColorIndexDefaultProjects","productivityPercentages","useDefaultProjects","lastReset","lastModified","realEndTime","ErrorBoundary","classCallCheck","possibleConstructorReturn","getPrototypeOf","hasError","error","Sentry","dsn","react_default","style","textAlign","color","className","href","target","rel","Fragment","children","App","lazy","Promise","all","e","then","bind","Settings","About","SettingsDefaultColors","LinkToRoot","Navbar","Footer","_default","AppWithProps","assign","data","connect","changeMode","update","disconnect","loggedIn","disconnected","currentTime","showErrors","changeRouterShowErrors","changeShowErrors","onCurrentTimeChange","SettingsWithProps","SettingsDefaultColorsWithProps","save","objectSpread","val","defineProperty","width","window","innerWidth","defaultVal","_this2","addEventListener","_this3","isMobile","react_router_dom","Suspense","fallback","devUnlocked","react_router","path","exact","component","_Context","Provider","value","render","to","numberOptional","type","number","required","boolean","timeObjectOptional","properties","timeObject","date","isDate","array","elements","object","projectBaseline","name","order","settingsStructure","entries","correctDataStructure_i","correctDataStructure_arr","correctDataStructure_ref5","correctDataStructure_ref2","slicedToArray","typeofVal","lastModifiedStructure","primitivesInLastModified","projectBaselineKeys","keys","objectsInLastModified","toConsumableArray","concat","correctDataStructure_i2","correctDataStructure_i3","correctDataStructure_arr2","correctDataStructure_ref6","correctDataStructure_ref4","correctDataStructure_iteratorNormalCompletion","correctDataStructure_didIteratorError","correctDataStructure_iteratorError","correctDataStructure_step","correctDataStructure_iterator","Symbol","iterator","next","done","property","err","return","__any__","correctDataStructure","startedWorkingOnIt","progress","autodetected","days","getCorrectDataStructureSection","warningMessage","reduce","section","validatePrimitive","correctDataStructureSection","expectedType","actualType","parseFloat","validateObject","correctedVal","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","el","push","_arr","_i","_ref5","_ref2","objKey","objVal","keyToPass","__lastModifiedSysNote","_arr2","_i2","_ref6","_ref4","propertyKey","propertyValToSet","log","lastModifiedSysNoteToDates","sysNote","forEach","_ref","Date","mergeObjects","oldData","newData","mergedData","_ref3","getTime","oldVal","dataValidation","correctedData","newLastModifiedItems","lightTheme","createMuiTheme","palette","primary","main","secondary","green","typography","useNextVariants","DataSync","idToken","io","showDisconnectedError","_this$state","localData","accessToken","objectWithoutProperties","emit","confirm","changes","dayOfTheWeek","getDay","defProj","projectToInsert","getHours","getMinutes","project","setLastModifiedOfAllProjects","toISOString","deleteObjectsLocalStorage","arrId","setMultipleLastModified","updatedWhileDisconnected","lastModifiedToSend","_arr3","_i3","closeSnackbar","setLastModified","objectId","stateObjectIndex","findIndex","areIdenticalObjects","obj1","obj2","changedIds","changedId","index","changedObject","startsWithString","except","localStorageKeys","relevantKeys","startsWith","removeItem","handleUpdateFromServer","lastModifiedKey","_arr4","_loop","objectIdKey","_i4","dateString","_arr5","_i5","settingsKey","checkForUpdates","SocketIOClient","on","successfulConnectInit","_this$state2","showDisconnectedErrorTimeout","_arr6","_i6","pathArray","split","pathLength","lastModifiedObj","_this$state3","styles","theme","position","onFocus","CssBaseline_default","Router_default","Boolean","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","SnackbarContent_default","backgroundColor","aria-describedby","message","action","IconButton_default","aria-label","padding","onClick","Close_default","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","ErrorBoundary_ErrorBoundary","DataSync_DataSync","document","getElementById","URL","process","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d2dfbb27.chunk.js","sourcesContent":["export default class TimeCalc {\r\n  static toMinutesSinceMidnight(time, keepPositiveIfCrossingMidnight = false){\r\n    let result\r\n\r\n    switch(typeof time){\r\n      // if it's a number, simply return it\r\n      case \"number\":\r\n        result = time\r\n        break;\r\n      // if it's a string, try to parse it\r\n      case \"string\":\r\n        result = parseInt(time)\r\n        if(isNaN(result)){\r\n          console.warn(\"Unexpected input: \", time)\r\n          return\r\n        }\r\n        break;\r\n      case \"object\":\r\n        // handle time.h === 12 (only if pm is set - allows us to count with an amout of time too)\r\n        let parsedH = parseInt(time.h)\r\n        if(parsedH === 12 && \"pm\" in time) parsedH -= 12\r\n\r\n        result = parsedH * 60 + parseInt(time.m)\r\n        if(time.pm) result += 12 * 60\r\n\r\n        if(time.s) result += time.s / 60\r\n\r\n        break;\r\n      // if the typeof is none of the above, throw a warning\r\n      default:\r\n        console.warn(\"Unexpected input: \", time)\r\n        return\r\n    }\r\n\r\n    if(keepPositiveIfCrossingMidnight &&\r\n      this.isBiggerThan(time, 0, true) &&\r\n      this.isBiggerThan(5*60, time, true)\r\n    ) result += 24*60\r\n\r\n    return result\r\n  }\r\n\r\n  // TimeObject is an object with properties h, m, and pm\r\n  static toTimeObject(minutes, setPm = true){\r\n    if(!Number.isInteger(minutes)) minutes = Math.round(minutes) // handle floats\r\n\r\n    // check for am/pm\r\n    let pm = false\r\n    if(setPm){\r\n      while(minutes >= 24 * 60){\r\n        minutes -= 24*60\r\n      }\r\n      if(minutes >= 12 * 60){\r\n        pm = true\r\n        minutes -= 12*60\r\n      }\r\n    }\r\n\r\n    // split hours and minutes\r\n    let m = minutes % 60\r\n    let h = (minutes - m) / 60\r\n\r\n    if(isNaN(h) || isNaN(m)) console.warn(\"NaN result: \", {h, m, pm}) // check for NaN\r\n\r\n    if(setPm) return {h, m, pm}\r\n    else return {h, m}\r\n  }\r\n\r\n  // add and return resultInMinutes\r\n  // used internally\r\n  static addToMinutes(){\r\n    // make both an array input and a spread input acceptable\r\n    let times = Array.isArray(arguments[0]) ? arguments[0] : arguments\r\n\r\n    // convert to minutes and add them up\r\n    let resultInMinutes = 0\r\n    for(let i = 0; i < times.length; i++){\r\n      resultInMinutes += this.toMinutesSinceMidnight(times[i])\r\n    }\r\n\r\n    // accept floats but only return ints\r\n    if(Number.isInteger(resultInMinutes)) return resultInMinutes\r\n    else return Math.round(resultInMinutes)\r\n  }\r\n\r\n  static add(){\r\n    return this.toTimeObject(this.addToMinutes(...arguments))\r\n  }\r\n\r\n  // subtract and return resultInMinutes\r\n  // used internally in subtract and isBiggerThan\r\n  static subtractToMinutes(time1, time2, keepPositiveIfCrossingMidnight = false){\r\n    let mins1 = this.toMinutesSinceMidnight(time1, keepPositiveIfCrossingMidnight)\r\n    let mins2 = this.toMinutesSinceMidnight(time2, keepPositiveIfCrossingMidnight)\r\n    let resultInMinutes = mins1 - mins2\r\n\r\n    // accept floats but return ints\r\n    if(Number.isInteger(resultInMinutes)) return resultInMinutes\r\n    else return Math.round(resultInMinutes)\r\n  }\r\n\r\n  static subtract(time1, time2, keepPositiveIfCrossingMidnight = false){\r\n    let resultInMinutes = this.subtractToMinutes(time1, time2, keepPositiveIfCrossingMidnight)\r\n\r\n    return this.toTimeObject(resultInMinutes, false)\r\n  }\r\n\r\n  // creates a string representation of time (in minutes or as a TimeObject)\r\n  static makeString(time, showPmOrAm = true, convert0To12EvenIfNotShowingPmOrAm = false, timeFormat24H = false){\r\n\r\n    // handle a number input\r\n    if(typeof time === \"number\") time = this.toTimeObject(time, showPmOrAm)\r\n\r\n    let h, m\r\n\r\n    if(timeFormat24H) showPmOrAm = false\r\n\r\n    if(typeof time.m === \"string\") time.m = parseInt(time.m) // handle string input\r\n    if(time.s && time.s > 29) time.m = parseInt(time.m) + 1 // hande time.s\r\n    m = time.m >= 10 ? time.m : \"0\" + time.m // show eg. 6:05, not 6:5\r\n\r\n    // show eg. 12:30, not 0:30 (not applicable for durations)\r\n    h = ((showPmOrAm || convert0To12EvenIfNotShowingPmOrAm) && time.h === 0) ? 12 : parseInt(time.h)\r\n\r\n    // if the user wants a 24-hour time format, use it\r\n    if(timeFormat24H && time.pm) h += 12\r\n\r\n    // handle NaN\r\n    if(isNaN(m)){\r\n      console.warn(\"Wrong input to makeString: \", time);\r\n      return\r\n    }\r\n\r\n    // create and return the actual string\r\n    let string = h + \":\" + m\r\n    if(typeof time.pm !== \"undefined\" && showPmOrAm){\r\n      let pmOrAm = time.pm ? \"PM\" : \"AM\"\r\n      string += \" \" + pmOrAm\r\n    }\r\n    return string\r\n  }\r\n\r\n  static round(time, precision){\r\n    let timeInMinutes = this.toMinutesSinceMidnight(time)\r\n\r\n    // round the minutes\r\n    timeInMinutes = Math.round(timeInMinutes / precision) * precision\r\n\r\n    return this.toTimeObject(timeInMinutes)\r\n  }\r\n\r\n  static isBiggerThan(time1, time2, orEqual = true, keepPositiveIfCrossingMidnight = false){\r\n    let difference = this.subtractToMinutes(time1, time2, keepPositiveIfCrossingMidnight)\r\n    if(orEqual) return difference >= 0\r\n    else return difference > 0\r\n  }\r\n\r\n  // check if all the arguments are identical\r\n  static areIdentical(){\r\n    let temp\r\n\r\n    for(let i = 0; i < arguments.length; i++){\r\n      let argument = arguments[i]\r\n\r\n      // handle NaN\r\n      if(isNaN(argument.h)) argument.h = argument.h.toString()\r\n      if(isNaN(argument.m)) argument.m = argument.m.toString()\r\n\r\n      // handle string input\r\n      if(typeof argument.h === \"string\") argument.h = parseInt(argument.h)\r\n      if(typeof argument.m === \"string\") argument.m = parseInt(argument.m)\r\n\r\n      // if temp is empty -> this is the first argument, store the first temp\r\n      if(!temp){\r\n        temp = argument\r\n        continue\r\n      }\r\n\r\n      // if the temp and the current argument are not identical, return false\r\n      if(argument.h !== temp.h || argument.m !== temp.m || argument.pm !== temp.pm) return false\r\n\r\n      // store the current argument as the new temp\r\n      temp = argument\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  // suggest a start time based on the previous project and the bufferTimePercentage\r\n  static suggestStartTime(previousEndTime, previousDuration, settings){\r\n    let exactStartTime = this.add(previousEndTime, previousDuration * settings.bufferTimePercentage)\r\n\r\n    // round the startTime to the nearest 5 and return\r\n    return this.round(exactStartTime, settings.roundTo)\r\n  }\r\n\r\n  static average(){\r\n    let sum = this.addToMinutes(...arguments)\r\n\r\n    let average = Math.round(sum / arguments.length)\r\n\r\n    return this.toTimeObject(average)\r\n  }\r\n\r\n  // turns eg. {h: 6, m: 30} into \"6 hours and 30 minutes\"\r\n  static makeFullLengthDurationString(time){\r\n    let h = parseInt(time.h)\r\n    let m = parseInt(time.m)\r\n    if(time.pm) h += 12\r\n\r\n    let string = \"\"\r\n    if(h) string += h + \" hour\"\r\n    if(h > 1) string += \"s\"\r\n    if(h && m) string += \" and \"\r\n    if(m) string += m + \" minute\"\r\n    if(m > 1) string += \"s\"\r\n    if(!h && !m) string = \"0 minutes\"\r\n\r\n    return string\r\n  }\r\n}\r\n\r\n// takes ordered projects and sets appropriate times for each of them\r\nexport function setTimesForProjects(projects, settings, breaks, startTime){\r\n\r\n  // PSEUDO CODE: //\r\n  // determine if a project and a break overlay\r\n    // project.startTime < break.startTime && project.endTime > break.startTime\r\n  // prioritize perserving break length or start and end times?\r\n  // project 9:30-11:00, break 10:30-11:00 -> move break to 11:00-11:30\r\n  // project 9:30-10:30, break 9:50-10:00 -> move break to 9:30-9:40, move project to 9:40-10:40\r\n  // first determine if the break is in the first or second half of the project\r\n    // compare the middle of the break to the middle of the project\r\n  // if in the first, move the break to before the project, set project startTime = break[i].endTime\r\n  // if the second, move the break to after the project, set startTime of the next project to break[i].endTime\r\n\r\n  // break the reference to this.state.breaks\r\n  breaks = JSON.parse(JSON.stringify(breaks))\r\n\r\n  // calculate middleTimes beforehand to avoid multiple executions of the same code (-> improves performance)\r\n  if(breaks.length){\r\n    var middleTimes = {projects: [], breaks: []}\r\n    for(let i = 0; i < projects.length; i++) middleTimes.projects[i] = TimeCalc.average(projects[i].plannedTime.start, projects[i].plannedTime.end)\r\n    for(let i = 0; i < breaks.length; i++) middleTimes.breaks[i] = TimeCalc.average(breaks[i].startTime, breaks[i].endTime)\r\n  }\r\n\r\n  for(let i = 0; i < projects.length; i++){\r\n\r\n    if(!projects[i].plannedTime) projects[i].plannedTime = {}\r\n\r\n    // unless this is the first project, adjust the startTime\r\n    if(i !== 0){\r\n      projects[i].plannedTime.start = TimeCalc.suggestStartTime(\r\n        projects[i - 1].plannedTime.end,\r\n        projects[i - 1].estimatedDuration,\r\n        settings\r\n      )\r\n    }\r\n\r\n    // if it is the first project then startTime must equal the one from the state\r\n    else projects[i].plannedTime.start = startTime\r\n\r\n    // set the appropriate endTime\r\n    projects[i].plannedTime.end = TimeCalc.add(projects[i].plannedTime.start, projects[i].estimatedDuration)\r\n\r\n    // loop through the breaks, adjust if one of them overlays with the project\r\n    for(let j = 0; j < breaks.length; j++){\r\n      // if breaks[j] and projects[i] overlay...\r\n      // (we only care about breaks[j].startTime, the endTime is irrelevant here)\r\n      // (projectOverlapAreaStart is a way to handle the scenario of the break starting in the buffer, it also handles i === 0)\r\n      let projectOverlapAreaStart = i === 0 ? projects[i].plannedTime.start : projects[i - 1].plannedTime.end\r\n      if(\r\n        TimeCalc.isBiggerThan(projects[i].plannedTime.end, breaks[j].startTime, true, true) &&\r\n        TimeCalc.isBiggerThan(breaks[j].startTime, projectOverlapAreaStart, true, true)\r\n      ){\r\n        // determine if the break is in the first or second half of the project\r\n        let breakIsInFirstHalf = TimeCalc.isBiggerThan(middleTimes.projects[i], middleTimes.breaks[j], true, true)\r\n\r\n        // get the length of the break\r\n        let lengthOfBreak = TimeCalc.subtractToMinutes(breaks[j].endTime, breaks[j].startTime, true)\r\n\r\n        // if the break is in the first half of the project...\r\n        if(breakIsInFirstHalf){\r\n          // move the break before the project\r\n          // (if it's the first project, there is no, projects[i - 1] -> handles undefined with ternary statement)\r\n          breaks[j].startTime = (i === 0 ? projects[i].plannedTime.start : projects[i - 1].plannedTime.end)\r\n\r\n          // adjust the endTime of the break\r\n          breaks[j].endTime = TimeCalc.add(breaks[j].startTime, lengthOfBreak)\r\n\r\n          // move the project after the break\r\n          if(i === 0) projects[i].plannedTime.start = breaks[j].endTime // if it's the first project, move the startTime after the break\r\n          // else add the buffer\r\n          else projects[i].plannedTime.start = TimeCalc.suggestStartTime(breaks[j].endTime, projects[i-1].estimatedDuration, settings)\r\n          projects[i].plannedTime.end = TimeCalc.add(projects[i].plannedTime.start, projects[i].estimatedDuration)\r\n        }\r\n\r\n        // if the break is in the second half of the project...\r\n        else{\r\n          // move the break after the project\r\n          breaks[j].startTime = projects[i].plannedTime.end\r\n          breaks[j].endTime = TimeCalc.add(breaks[j].startTime, lengthOfBreak)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return projects\r\n}\r\n","import React, { Component } from 'react';\r\nimport Spinner from 'react-md-spinner';\r\n\r\nexport default class LoadingFallback extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      show: false,\r\n      showTimeout: setTimeout(() => this.setState({show: true}), 100)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    clearTimeout(this.state.showTimeout)\r\n  }\r\n\r\n  render(){\r\n    if(this.state.show) return <Spinner singleColor=\"#039be5\"/>\r\n    else return null\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport const SettingsContext = React.createContext({})\r\nexport const IsMobileContext = React.createContext({})\r\n","// objects is an array of projects or breaks, key is either \"projecs\" or \"breaks\"\r\nexport default function makeNewId(objects, key){\r\n  // make a new unique ID\r\n  let newId\r\n  let haveFoundUniqueId = false\r\n\r\n  // if the ID isn't unique (in other words if it already exists in the state or local storage), try again\r\n  while(!haveFoundUniqueId){\r\n    newId = Math.floor(Math.random() * 10**8)\r\n    haveFoundUniqueId = true\r\n\r\n    // make sure the ID is unique within the state\r\n    for(let i = 0; i < objects.length; i++){\r\n      if(objects[i].id === newId){\r\n        haveFoundUniqueId = false\r\n        break\r\n      }\r\n    }\r\n    // make sure there aren't any lastModified fields in the localStorage either\r\n    if(haveFoundUniqueId){\r\n      let localStorageKey = [\"lastModified\", key, newId, \"id\"].join(\"_\")\r\n      if(!isNaN(localStorage[localStorageKey])) haveFoundUniqueId = false\r\n    }\r\n  }\r\n\r\n  return newId\r\n}\r\n","export const defaultSettings = {\r\n  timeFormat24H: false,\r\n  bufferTimePercentage: .2,\r\n  showResetButtonAfter: 16, // in hours\r\n  defaultColors: [\r\n    \"#4BFFD1\",\r\n    \"#39FF00\",\r\n    \"#E8A60C\",\r\n    \"#FF4848\",\r\n    \"#290CE8\",\r\n  ],\r\n  updateTimesAfterDrag: true,\r\n  updateTimesAfterEdit: true,\r\n  updateTimesAfterDelete: true,\r\n  roundTo: 5,\r\n  changeModeOnTab: false,\r\n  detectBreaksAutomatically: true,\r\n  adjustDurationOnPause: true,\r\n  offerToAdjustDurationOnDone: true,\r\n  darkTheme: false\r\n}\r\n\r\n\r\nexport const defaultDataValues = {\r\n  projects: [],\r\n  breaks: [],\r\n  defaultProjects: [],\r\n  settings: defaultSettings,\r\n  startTime: {h: 2, m: \"00\", pm: true},\r\n  endTime: {h: 9, m: \"00\", pm: true},\r\n  mode: \"planning\",\r\n  defaultColorIndex: 0,\r\n  defaultColorIndexDefaultProjects: 0,\r\n  productivityPercentages: {},\r\n  useDefaultProjects: true,\r\n  lastReset: undefined,\r\n  lastModified: {},\r\n  realEndTime: undefined\r\n}\r\n","import {defaultSettings} from '../defaultValues'\r\n\r\n// define types\r\nconst numberOptional = {type: \"number\"}\r\nconst number = {type: \"number\", required: true}\r\nconst string = {type: \"string\", required: true}\r\nconst booleanOptional = {type: \"boolean\"}\r\nconst boolean = {type: \"boolean\", required: true}\r\nconst timeObjectOptional = {type: \"object\", properties: {h: number, m: number, pm: boolean, s: numberOptional}}\r\nconst timeObject = {...timeObjectOptional, required: true}\r\nconst date = {type: \"string\", isDate: true}\r\nconst array = elements => ({type: \"object\", isArray: true, elements})\r\nconst object = properties => ({type: \"object\", properties})\r\n\r\nconst projectBaseline = { // what projects and defaultProjects\r\n  id: number,\r\n  name: string,\r\n  color: string,\r\n  estimatedDuration: number,\r\n  state: string,\r\n  order: numberOptional,\r\n  plannedTime: {type: \"object\", properties: {\r\n    start: timeObject,\r\n    end: timeObject\r\n  }}\r\n}\r\n\r\n// create the settings structure based on defaultSettings\r\nvar settingsStructure = {}\r\nfor(let [key, val] of Object.entries(defaultSettings)){\r\n  let typeofVal = typeof val\r\n\r\n  if(typeofVal === \"object\"){\r\n    if(Array.isArray(val)){\r\n      settingsStructure[key] = array({type: typeof val[0], required: true})\r\n    }\r\n    else console.warn(\"Unhandled scenraio, settings contains an object that isn't an array\")\r\n  }\r\n  else{\r\n    settingsStructure[key] = {type: typeofVal, required: true}\r\n  }\r\n}\r\n\r\n// create the lastModifiedStructure\r\nvar lastModifiedStructure = {}\r\nconst primitivesInLastModified = [\"startTime\", \"endTime\", \"mode\", \"defaultColorIndex\",\r\n  \"defaultColorIndexDefaultProjects\", \"lastReset\", \"useDefaultProjects\"]\r\nconst projectBaselineKeys = Object.keys(projectBaseline)\r\nconst objectsInLastModified = {\r\n  projects: [...projectBaselineKeys, \"startedWorkingOnIt\", \"progress\"],\r\n  breaks: [\"id\", \"name\", \"startTime\", \"endTime\", \"autodetected\"],\r\n  defaultProjects: [...projectBaselineKeys, \"days\"],\r\n  settings: Object.keys(defaultSettings)\r\n}\r\nfor(let primitive of primitivesInLastModified){\r\n  lastModifiedStructure[primitive] = date\r\n}\r\nfor(let [key, val] of Object.entries(objectsInLastModified)){\r\n  let properties = {}\r\n\r\n  for(let property of val){\r\n    // id is required\r\n    if(property === \"id\") properties.id = {...date, required: true}\r\n    // other fields are optional\r\n    else properties[property] = date\r\n  }\r\n\r\n  if(key === \"settings\") lastModifiedStructure[key] = object(properties)\r\n  else{\r\n    lastModifiedStructure[key] = object({\r\n      __any__: object(properties)\r\n    })\r\n  }\r\n}\r\n\r\n\r\nconst correctDataStructure = {\r\n  projects: array(object({\r\n    ...projectBaseline,\r\n    startedWorkingOnIt: timeObjectOptional,\r\n    progress: numberOptional\r\n  })),\r\n  breaks: array(object({\r\n    id: number,\r\n    name: string,\r\n    startTime: timeObject,\r\n    endTime: timeObject,\r\n    autodetected: booleanOptional\r\n  })),\r\n  defaultProjects: array(object({\r\n    ...projectBaseline,\r\n    days: array(boolean)\r\n  })),\r\n  settings: object(settingsStructure),\r\n  startTime: timeObject,\r\n  endTime: timeObject,\r\n  mode: string,\r\n  defaultColorIndex: number,\r\n  defaultColorIndexDefaultProjects: number,\r\n  lastReset: string,\r\n  useDefaultProjects: boolean,\r\n  productivityPercentages: object({__any__: numberOptional}),\r\n  realEndTime: date,\r\n  lastModified: object(lastModifiedStructure)\r\n}\r\n\r\nexport default correctDataStructure\r\n","import React, { Component } from 'react';\r\nimport * as Sentry from '@sentry/browser';\r\n\r\nexport default class ErrorBoundary extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      hasError: false,\r\n      error: null\r\n    }\r\n\r\n    // init Sentry (error logging) if in production\r\n    if(process.env.NODE_ENV === 'production'){\r\n      Sentry.init({ dsn: 'https://4ff9b4a95e3d4694b3191e745dc529ff@sentry.io/1480676' })\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromError(error){\r\n    return {\r\n      hasError: true,\r\n      error\r\n    }\r\n  }\r\n\r\n  render(){\r\n    if(this.state.hasError) return (\r\n      <div style={{textAlign: \"center\"}}>\r\n        <h3 style={{color: \"red\"}}>Oops, something went wrong</h3>\r\n        Please, try <b>reloading</b> the page\r\n        <br/><br/><br/>\r\n        If you keep seeing this message, <b>\r\n          send us a bug report{\" \"}\r\n          <a className=\"noStyling\" href=\"https://goo.gl/forms/jdesExEMegbkLPjp2\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            here\r\n          </a>\r\n        </b>\r\n        <br/>\r\n        While doing that, make sure you <b>tell us what you were trying to do</b>. This helps us a lot when fixing issues.\r\n        <br/>\r\n        {this.state.error && (\r\n          <>\r\n            Please also <b>include the following information</b> in the bug report:\r\n            <p><code>{this.state.error.toString()}</code></p>\r\n          </>\r\n        )}\r\n      </div>\r\n    )\r\n\r\n    return this.props.children\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport LoadingFallback from './LoadingFallback'\r\nimport { defaultSettings } from './util/defaultValues'\r\nimport { IsMobileContext } from './_Context'\r\nconst App = React.lazy(() => import('./App'))\r\nconst Settings = React.lazy(() => import('./Settings'))\r\nconst About = React.lazy(() => import('./About'))\r\nconst SettingsDefaultColors = React.lazy(() => import('./MobileViews/SettingsDefaultColors'))\r\nconst LinkToRoot = React.lazy(() => import('./LinkToRoot'))\r\nconst Navbar = React.lazy(() => import('./Navbar'))\r\nconst Footer = React.lazy(() => import('./Footer'))\r\n\r\nexport default class extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      width: window.innerWidth, // used to determine if we should show the desktop or mobile UI\r\n      currentTime: {\r\n        h: 0,\r\n        m: 0,\r\n        pm: true,\r\n        defaultVal: true // this means this isn't a real value, just a placeholder\r\n      },\r\n      showErrors: {}\r\n    }\r\n  }\r\n  componentWillMount(){\r\n    // when the user resizes the window, we need to check if we should still use the desktop/mobile UI or switch to the other one\r\n    window.addEventListener(\"resize\", () => {\r\n      this.setState({width: window.innerWidth})\r\n    })\r\n  }\r\n\r\n  // these methods are necessary for letting these child components access props\r\n  AppWithProps = props => (\r\n    <App\r\n      data={this.props.data}\r\n      connect={this.props.connect}\r\n      changeMode={this.changeMode}\r\n      update={this.props.update}\r\n      disconnect={this.props.disconnect}\r\n      loggedIn={this.props.loggedIn}\r\n      disconnected={this.props.disconnected}\r\n      currentTime={this.state.currentTime}\r\n      showErrors={this.state.showErrors}\r\n      changeRouterShowErrors={this.changeShowErrors}\r\n      onCurrentTimeChange={currentTime => {this.setState({currentTime})}}\r\n      {...props}\r\n    />\r\n  )\r\n\r\n  SettingsWithProps = props => (\r\n    <Settings\r\n      settings={Object.assign({}, this.props.data.settings)}\r\n      defaultSettings={defaultSettings}\r\n      update={this.props.update}\r\n      {...props}\r\n    />\r\n  )\r\n\r\n  SettingsDefaultColorsWithProps = props => (\r\n    <SettingsDefaultColors\r\n      settings={Object.assign({}, this.props.data.settings)}\r\n      save={defaultColors => {\r\n        this.props.update({settings: {...this.props.data.settings, defaultColors}})\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n\r\n  // go from \"planning\" to \"working\" and back\r\n  changeMode = val => {\r\n    // don't let the user go into work mode if there isn't an endTime or if projects are empty (+ show an error)\r\n    if(val === \"working\"){\r\n      if(this.props.data.endTime.h === \"\" || this.props.data.endTime.m === \"\"){\r\n        this.changeShowErrors(\"endTime\", true)\r\n        return\r\n      }\r\n      if(!this.props.data.projects.length){\r\n        this.changeShowErrors(\"noProjects\", true)\r\n        return\r\n      }\r\n    }\r\n\r\n    this.props.update({mode: val})\r\n  }\r\n\r\n  // an util function to DRY the code\r\n  changeShowErrors = (id, val) => {\r\n    this.setState({showErrors: {...this.state.showErrors, [id]: val}})\r\n  }\r\n\r\n  render(){\r\n    let isMobile = this.state.width < 660\r\n\r\n    return (\r\n      <Router>\r\n        <React.Suspense fallback={<LoadingFallback/>}>\r\n          {\r\n            isMobile ? (\r\n                <Navbar\r\n                  data={this.props.data}\r\n                  connect={this.props.connect}\r\n                  changeMode={this.changeMode}\r\n                  disconnect={this.props.disconnect}\r\n                  loggedIn={this.props.loggedIn}\r\n                  currentTime={this.state.currentTime}\r\n                  onCurrentTimeChange={currentTime => {this.setState({currentTime})}}\r\n                  update={localStorage.devUnlocked ? this.props.update : {}}\r\n                />\r\n              ) : (\r\n                <Switch>\r\n                  <Route path=\"/(|add|edit|breaks|defaultProjects)\" exact />\r\n                  <Route component={LinkToRoot} />\r\n                </Switch>\r\n            )\r\n          }\r\n        </React.Suspense>\r\n        <IsMobileContext.Provider value={isMobile}>\r\n          <React.Suspense fallback={<LoadingFallback/>}>\r\n            <Switch>\r\n              <Route path=\"/settings/defaultColors/\" render={this.SettingsDefaultColorsWithProps}/>\r\n              <Route path=\"/settings/\" render={this.SettingsWithProps}/>\r\n              <Route path=\"/about/\" component={About}/>\r\n              <Route path=\"/robots.txt\" target=\"_self\" />\r\n              <Route path=\"/(|add|edit|breaks|defaultProjects)\" exact render={this.AppWithProps}/>\r\n              <Route render={() => <Redirect to=\"/\" />} />\r\n            </Switch>\r\n          </React.Suspense>\r\n        </IsMobileContext.Provider>\r\n        <React.Suspense fallback={<LoadingFallback/>}>\r\n          {\r\n            isMobile ? (\r\n              <Route path=\"/about/\" component={Footer} />\r\n            ) : (\r\n              <Footer />\r\n            )\r\n          }\r\n        </React.Suspense>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n","import correctDataStructure from './correctDataStructure'\r\n\r\nfunction getCorrectDataStructureSection(keys){\r\n  if(typeof keys === \"string\") console.warn(\"Keys must be an array!\")\r\n\r\n  var warningMessage = `Incorrect property detected in data: ${keys.join(\".\")} should not be defined`\r\n  try{\r\n    var result = keys.reduce((section, key) => section[key], correctDataStructure)\r\n  }\r\n  catch(e){\r\n    console.warn(warningMessage)\r\n    console.warn(e)\r\n  }\r\n  if(!result) console.warn(warningMessage)\r\n\r\n  return result\r\n}\r\n\r\nexport default getCorrectDataStructureSection\r\n","import getCorrectDataStructureSection from './getCorrectDataStructureSection'\r\n\r\nfunction validatePrimitive(keys, val){\r\n  var correctDataStructureSection = getCorrectDataStructureSection(keys)\r\n  if(!correctDataStructureSection) return\r\n\r\n  let expectedType = correctDataStructureSection.type\r\n  let actualType = typeof val\r\n\r\n  if(expectedType === actualType ||\r\n    (// allow numbers to be in the form of a string\r\n      expectedType === \"number\" &&\r\n      actualType === \"string\" &&\r\n      !isNaN(parseFloat(val))\r\n    ) ||\r\n    (// allows bools in the form of a strings\r\n      expectedType === \"boolean\" &&\r\n      actualType === \"string\" &&\r\n      (val === \"true\" || val === \"false\")\r\n    )\r\n  ) return val\r\n  else console.warn(`Incorrect type detected in data: ${keys.join(\".\")} is '${val}' which is of type ${actualType}, should be of type ${expectedType}`)\r\n}\r\n\r\nexport default validatePrimitive\r\n","import getCorrectDataStructureSection from './getCorrectDataStructureSection'\r\nimport validatePrimitive from './validatePrimitive'\r\nimport {defaultSettings} from '../defaultValues'\r\n\r\nfunction validateObject(keys, val){\r\n  var correctedVal\r\n\r\n  var correctDataStructureSection = getCorrectDataStructureSection(keys)\r\n  if(!correctDataStructureSection) return\r\n\r\n  if(correctDataStructureSection.isArray){\r\n    correctedVal = []\r\n\r\n    if(!Array.isArray(val)) return\r\n\r\n    for(let el of val){\r\n      if(typeof el === \"object\"){\r\n        correctedVal.push(validateObject([...keys, \"elements\"], el))\r\n      }\r\n      else{\r\n        correctedVal.push(validatePrimitive([...keys, \"elements\"], el))\r\n      }\r\n    }\r\n  }\r\n  else{\r\n    correctedVal = {}\r\n\r\n    if(typeof val !== \"object\" || val === null) return\r\n\r\n    for(let [objKey, objVal] of Object.entries(val)){\r\n\r\n      // get the expectedType (first try the key, then __any__, if both fails, throw an error)\r\n      let expectedType, keyToPass\r\n      if(correctDataStructureSection.properties[objKey]){\r\n        expectedType = correctDataStructureSection.properties[objKey].type\r\n        keyToPass = objKey\r\n      }\r\n      else{\r\n        if(correctDataStructureSection.properties.__any__){\r\n          expectedType = correctDataStructureSection.properties.__any__.type\r\n          keyToPass = \"__any__\"\r\n        }\r\n        else{\r\n          console.warn(`Incorrect property in data: ${keys.join(\".\")}.${objKey} should not be defined `)\r\n          continue\r\n        }\r\n      }\r\n\r\n      if(expectedType === \"object\"){\r\n        correctedVal[objKey] = validateObject([...keys, \"properties\", keyToPass], objVal)\r\n        if(correctedVal[objKey] && correctedVal[objKey].__lastModifiedSysNote){\r\n          if(!correctedVal.__lastModifiedSysNote) correctedVal.__lastModifiedSysNote = {}\r\n          correctedVal.__lastModifiedSysNote[objKey] = correctedVal[objKey].__lastModifiedSysNote\r\n          delete correctedVal[objKey].__lastModifiedSysNote\r\n        }\r\n      }\r\n      else{\r\n        correctedVal[objKey] = validatePrimitive([...keys, \"properties\", keyToPass], objVal)\r\n      }\r\n    }\r\n\r\n    // check for missing values\r\n    for(let [propertyKey, propertyVal] of Object.entries(correctDataStructureSection.properties)){\r\n      if(propertyVal.required && typeof val[propertyKey] === \"undefined\"){\r\n        console.warn(`Property missing in data: ${keys.join(\".\")}.${propertyKey} is not defined`)\r\n\r\n        // figure out what property to use\r\n        let propertyValToSet\r\n        if(keys.length === 1 && keys[0] === \"settings\") propertyValToSet = defaultSettings[propertyKey]\r\n\r\n        if(typeof propertyValToSet !== \"undefined\"){\r\n          console.log(`${keys.join(\".\")}.${propertyKey} automatically set to ${propertyValToSet}`)\r\n          correctedVal[propertyKey] = propertyValToSet\r\n\r\n          if(!correctedVal.__lastModifiedSysNote) correctedVal.__lastModifiedSysNote = {}\r\n          correctedVal.__lastModifiedSysNote[propertyKey] = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return correctedVal\r\n}\r\n\r\nexport default validateObject\r\n","function lastModifiedSysNoteToDates(sysNote){\r\n  var lastModified = {}\r\n  Object.entries(sysNote).forEach(([key, val]) => {\r\n    if(typeof val === \"object\") lastModified[key] = lastModifiedSysNoteToDates(val)\r\n    else lastModified[key] = new Date()\r\n  })\r\n  return lastModified\r\n}\r\n\r\nexport default lastModifiedSysNoteToDates\r\n","// simple util function for checking if objects are identical\r\nexport function areIdenticalObjects(obj1, obj2){\r\n  if(!obj2) return false\r\n\r\n  // get the keys\r\n  let keys\r\n  if(Array.isArray(obj1)){\r\n    if(!Array.isArray(obj2)) return false\r\n\r\n    keys = obj1.keys()\r\n\r\n    if(obj1.length !== obj2.length) return false\r\n  }\r\n  else{\r\n    if(Array.isArray(obj2)) return false\r\n\r\n    keys = Object.keys(obj1)\r\n\r\n    if(keys.length !== Object.keys(obj2).length) return false\r\n  }\r\n\r\n  // make sure both object have the same keys\r\n\r\n\r\n  for(let key of keys){\r\n    if(typeof obj1[key] === \"object\"){\r\n      if(!areIdenticalObjects(obj1[key], obj2[key])) return false\r\n    }\r\n    else{\r\n      if(obj1[key] !== obj2[key]) return false\r\n    }\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n// uses oldData first, then rewrites it using the properties of newData to make sure all the properties are represented\r\n// (in other words the newData value is always used but if a property of oldData isn't present in newData, that value is used too)\r\n// usually oldData is considerably larger, hence the algorithm design\r\nexport function mergeObjects(oldData, newData){\r\n  let mergedData = JSON.parse(JSON.stringify(oldData))\r\n  for(let [key, val] of Object.entries(newData)){\r\n    if(typeof val === \"object\" && typeof val.getTime !== \"function\"){\r\n      let oldVal = oldData[key]\r\n      if(!oldVal) oldVal = {} // handle undefined\r\n      mergedData[key] = mergeObjects(oldVal, val)\r\n    }\r\n    else mergedData[key] = val\r\n  }\r\n  return mergedData\r\n}\r\n","import correctDataStructure from './correctDataStructure'\r\nimport validatePrimitive from './validatePrimitive'\r\nimport validateObject from './validateObject'\r\nimport lastModifiedSysNoteToDates from './lastModifiedSysNoteToDates'\r\nimport {mergeObjects} from '../objectUtil'\r\n\r\nfunction dataValidation(data){\r\n  var correctedData = {}\r\n\r\n  for(let [key, val] of Object.entries(data)){\r\n    if(!correctDataStructure[key]){\r\n      console.warn(`Incorrect key in data: ${key}`)\r\n      continue\r\n    }\r\n    if(correctDataStructure[key].type === \"object\"){\r\n      correctedData[key] = validateObject([key], val)\r\n      if(correctedData[key].__lastModifiedSysNote){\r\n        if(!correctedData.__lastModifiedSysNote) correctedData.__lastModifiedSysNote = {}\r\n        correctedData.__lastModifiedSysNote[key] = correctedData[key].__lastModifiedSysNote\r\n        delete correctedData[key].__lastModifiedSysNote\r\n      }\r\n    }\r\n    else correctedData[key] = validatePrimitive([key], val)\r\n  }\r\n\r\n  if(correctedData.__lastModifiedSysNote){\r\n    let newLastModifiedItems = lastModifiedSysNoteToDates(correctedData.__lastModifiedSysNote)\r\n    delete correctedData.__lastModifiedSysNote\r\n\r\n    if(!correctedData.lastModified) correctedData.lastModified = newLastModifiedItems\r\n    else correctedData.lastModified = mergeObjects(correctedData.lastModified, newLastModifiedItems)\r\n  }\r\n\r\n  return correctedData\r\n}\r\n\r\nexport default dataValidation\r\n","import dataValidation from './dataValidation'\r\nexport default dataValidation\r\n","import React, { Component } from 'react';\r\nimport Router from './Router'\r\nimport TimeCalc, { setTimesForProjects } from './util/TimeCalc'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport * as SocketIOClient from 'socket.io-client'\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport green from '@material-ui/core/colors/green';\r\nimport { defaultDataValues } from './util/defaultValues'\r\nimport makeNewId from './util/makeNewId'\r\nimport dataValidation from './util/dataValidation'\r\nimport {areIdenticalObjects, mergeObjects} from './util/objectUtil'\r\nimport './css/themes.css'\r\n\r\nconst lightTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#039be5',\r\n    },\r\n    secondary: green\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  }\r\n})\r\n\r\nconst darkTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#039be5',\r\n    },\r\n    secondary: green,\r\n    type: \"dark\"\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  }\r\n})\r\n\r\n// takes care of all data operations (loading, saving, syncing) as well as signing in/out\r\nexport default class DataSync extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      projects: [],\r\n      settings: {},\r\n      lastModified: {},\r\n      temp: {}\r\n    }\r\n\r\n    /*this.io = SocketIOClient.connect('localhost:3000')\r\n    console.warn(\"connecting to localhost\");*/\r\n    this.io = SocketIOClient.connect('https://mindyourtimeserver.herokuapp.com')\r\n\r\n    // check if the user is offline (first give the sockets enough time to try to connect)\r\n    setTimeout(() => {\r\n      if(this.io.disconnected){ // if connection failed\r\n        console.warn(\"Can't connect to server\");\r\n\r\n        let temp = this.state.temp\r\n        temp.disconnected = true\r\n        // show an error if the user is logged in\r\n        if(this.state.accessToken) temp.showDisconnectedError = true\r\n\r\n        this.setState({temp})\r\n      }\r\n    }, 500)\r\n\r\n    // the SocketIO init event\r\n    this.io.on(\"connect\", data => {\r\n      // if the user was previously disconnected and they're logged in, connect them\r\n      if(!this.state.temp.successfulConnectInit && this.state.temp.disconnected && this.state.accessToken){\r\n        let localData\r\n\r\n        // if the initil connection wasn't successful or if there have been updates while the user was disconnected...\r\n        if(!this.state.temp.successfulConnectInit || this.state.temp.updatedWhileDisconnected){\r\n          // gather all the relevant data\r\n          let {accessToken, temp, ...data} = this.state\r\n          localData = data\r\n        }\r\n        else localData = {}\r\n\r\n        // send the initial connect event to the server\r\n        this.io.emit(\"connectInit\", {\r\n          type: \"accessToken\", accessToken: this.state.accessToken, localData\r\n        })\r\n      }\r\n\r\n      // hide the errors\r\n      let temp = this.state.temp\r\n      temp.disconnected = false\r\n      temp.showDisconnectedError = false\r\n      clearTimeout(temp.showDisconnectedErrorTimeout)\r\n\r\n      this.setState({temp})\r\n    })\r\n\r\n    // if the user goes offline/server stops responding\r\n    this.io.on(\"disconnect\", data => {\r\n      let temp = this.state.temp\r\n      temp.disconnected = true\r\n      // show an error if the user is logged in\r\n      // (after a reasonable amount of time so that the client can try to reconnect)\r\n      if(this.state.accessToken) temp.showDisconnectedErrorTimeout = setTimeout(() => {\r\n        this.setState({temp: {...this.state.temp, showDisconnectedError: true}})\r\n      }, 1500)\r\n      this.setState({temp})\r\n    })\r\n\r\n    // this event simply lets the client side know that everything went ok on the server\r\n    // in the case of the login events, it also sends along an accessToken which is used the next time when connecting to the server\r\n    this.io.on(\"success\", data => {\r\n      // login\r\n      if(data.type === \"connectInsert\" || data.type === \"connectUpdate\"){\r\n        // store the accessToken (in the localStorage for lack of a better place)\r\n        localStorage.accessToken = data.accessToken\r\n\r\n        this.setState({\r\n          accessToken: data.accessToken,\r\n          temp: {...this.state.temp, successfulConnectInit: true}\r\n        })\r\n      }\r\n\r\n      // logout\r\n      if(data.type === \"disconnect\"){\r\n        // remove the accessToken\r\n        delete localStorage.accessToken\r\n        this.setState({accessToken: undefined})\r\n      }\r\n    })\r\n\r\n    // if there was an error, show a warning in the console\r\n    this.io.on(\"errorU\", data => {\r\n      console.warn(\"error\", data);\r\n\r\n      // if the accessToken is invalid, we should remove it to sign out the user\r\n      // (we don't want the client side thinking it's still logged in if it's credentials are invalid)\r\n      if(data.type === \"invalidAccessToken\"){\r\n        delete localStorage.accessToken\r\n        this.setState({accessToken: undefined})\r\n      }\r\n    })\r\n\r\n    // if the server sent new data, use the handleUpdateFromServer method to store the new data locally\r\n    this.io.on('connectUpdate', this.handleUpdateFromServer)\r\n    this.io.on('update', this.handleUpdateFromServer)\r\n  }\r\n\r\n  componentDidMount(){\r\n    // load all the data from localStorage\r\n    // these are all the keys that need to be loaded:\r\n    let objectsToLoad = [\"projects\", \"breaks\", \"defaultProjects\", \"settings\", \"startTime\", \"endTime\", \"productivityPercentages\"]\r\n    let propertiesToLoad = [\"mode\", \"defaultColorIndex\", \"defaultColorIndexDefaultProjects\", \"useDefaultProjects\", \"lastReset\", \"realEndTime\"]\r\n\r\n    let data = {}\r\n\r\n    // for objects, parse the JSON and catch any errors\r\n    objectsToLoad.forEach(el => {\r\n      try{\r\n        data[el] = JSON.parse(localStorage[el])\r\n      }\r\n      catch(e){\r\n        // set default (if data from localStorage can't be used)\r\n        data[el] = defaultDataValues[el]\r\n      }\r\n    })\r\n\r\n    // for primitives, simply load the data\r\n    propertiesToLoad.forEach(el => {\r\n      data[el] = localStorage[el] ? localStorage[el] : defaultDataValues[el]\r\n    })\r\n\r\n    // load lastModified\r\n    for(let localStorageKey of Object.keys(localStorage)){\r\n      if(localStorageKey.startsWith(\"lastModified_\")){\r\n        // set the value for an arbitrarily long path\r\n        let pathArray = localStorageKey.split(\"_\")\r\n        let pathLength = pathArray.length\r\n        let lastModifiedObj = data\r\n        for(let i = 0; i < pathLength - 1; i++){\r\n          if(!(pathArray[i] in lastModifiedObj)) lastModifiedObj[pathArray[i]] = {}\r\n          lastModifiedObj = lastModifiedObj[pathArray[i]]\r\n        }\r\n        lastModifiedObj[pathArray[pathLength - 1]] = new Date(localStorage[localStorageKey])\r\n      }\r\n    }\r\n\r\n    this.setState(data);\r\n\r\n    // if the user's logged in, connect to the server using the gathered data\r\n    (data => {\r\n      setTimeout(() => {\r\n        let {accessToken} = localStorage\r\n        if(accessToken){\r\n          if(this.io.disconnected) this.setState({accessToken})\r\n          else this.io.emit(\"connectInit\", {type: \"accessToken\", accessToken, localData: data})\r\n        }\r\n      }, 5)\r\n    }).call(this, data)\r\n  }\r\n\r\n  // logging in\r\n  connect = idToken => {\r\n    // if the user is offline or the server is down...\r\n    if(this.io.disconnected){\r\n      this.setState({temp: {...this.state.temp, showDisconnectedError: true}})\r\n      return\r\n    }\r\n\r\n    // gather localData\r\n    var {accessToken, temp, ...localData} = this.state\r\n\r\n    this.idToken = idToken\r\n\r\n    // log in\r\n    this.io.emit(\"connectInit\", {type: \"OAuth\", idToken, localData})\r\n  }\r\n\r\n  // log out\r\n  disconnect = (dontConfirm = false) => {\r\n    if(dontConfirm || window.confirm(\"Are you sure you want to sign out?\")){\r\n      // if the user is offline or the server is down...\r\n      if(this.io.disconnected){\r\n        this.setState({temp: {...this.state.temp, showDisconnectedError: true}})\r\n        return\r\n      }\r\n\r\n      this.io.emit(\"disconnectU\", {accessToken: localStorage.accessToken})\r\n    }\r\n  }\r\n\r\n  // if any data changes in the app, update the state and if logged in, send an update to the server\r\n  update = (data, changes) => {\r\n    console.log(data, changes);\r\n    // handle a reset\r\n    if(data.projects && !data.projects.length && this.state.projects.length){\r\n      if(data.useDefaultProjects || this.state.useDefaultProjects){\r\n        // get the current dayOfTheWeek\r\n        // (defaultProjects have the option of only being applied on certain days of the week)\r\n        let dayOfTheWeek = new Date().getDay()\r\n        // in getDay(), 0 means Sunday -> convert it so that 0 means Monday\r\n        dayOfTheWeek--\r\n        if(dayOfTheWeek < 0) dayOfTheWeek = 6\r\n\r\n        // insert the defaultProjects into projects\r\n        // (don't insert the days array, break the object reference at the same time)\r\n        data.projects = []\r\n        this.state.defaultProjects.forEach(defProj => {\r\n          let {days, ...projectToInsert} = defProj\r\n          if(!days || days[dayOfTheWeek]) data.projects.push(projectToInsert)\r\n        })\r\n\r\n        // suggest a new startTime and set the project times\r\n        let settings = data.settings || this.state.settings\r\n        let startTime = TimeCalc.add(new Date().getHours() * 60 + new Date().getMinutes(), 10)\r\n        startTime = TimeCalc.round(startTime, settings.roundTo)\r\n        data.projects = setTimesForProjects(data.projects, settings, [], startTime)\r\n\r\n        // generate a new unique ID for each project\r\n        data.projects.forEach(project => {\r\n          project.id = makeNewId(data.projects, \"projects\")\r\n        })\r\n\r\n        // set the startTime\r\n        data.startTime = startTime\r\n\r\n        var setLastModifiedOfAllProjects = true\r\n      }\r\n      else data.projects = []\r\n\r\n      // reset certain fields\r\n      data.breaks = []\r\n      data.lastReset = new Date().toISOString()\r\n      data.realEndTime = undefined\r\n\r\n      // reset lastModified\r\n      if(!data.lastModified) data.lastModified = {}\r\n      data.lastModified.projects = {}\r\n      data.lastModified.breaks = {}\r\n\r\n      // delete the project/break lastModified fields in localStorage\r\n      this.deleteObjectsLocalStorage(\"lastModified_projects_\")\r\n      this.deleteObjectsLocalStorage(\"lastModified_breaks_\")\r\n    }\r\n\r\n    // data validation (to prevent corrupted data from entering the system)\r\n    data = dataValidation(data)\r\n\r\n    // assign order to projects\r\n    for(let arrId of [\"projects\", \"defaultProjects\"]){\r\n      if(data[arrId]){\r\n        data[arrId].forEach((project, i) => {\r\n          project.order = i\r\n        })\r\n      }\r\n    }\r\n\r\n    // convert dates\r\n    if(data.realEndTime) data.realEndTime = data.realEndTime.toISOString()\r\n\r\n    // generate lastModified (used for deciding which data to use on the server side)\r\n    let lastModified = {}\r\n    Object.keys(data).forEach(el => {\r\n      switch (el) {\r\n        case \"projects\":\r\n          lastModified.projects = this.setMultipleLastModified(\r\n            data.projects,\r\n            changes && !setLastModifiedOfAllProjects ? changes.projects : undefined,\r\n            \"projects\"\r\n          )\r\n          break;\r\n        case \"breaks\":\r\n          lastModified.breaks = this.setMultipleLastModified(\r\n            data.breaks,\r\n            changes ? changes.breaks : undefined,\r\n            \"breaks\"\r\n          )\r\n          break;\r\n        case \"defaultProjects\":\r\n          lastModified.defaultProjects = this.setMultipleLastModified(\r\n            data.defaultProjects,\r\n            changes ? changes.defaultProjects : undefined,\r\n            \"defaultProjects\"\r\n          )\r\n          break;\r\n        case \"settings\":\r\n          lastModified.settings = this.state.lastModified && this.state.lastModified.settings ? this.state.lastModified.settings : {}\r\n          Object.keys(data.settings).forEach(el => {\r\n            if(data.settings[el] !== this.state.settings[el]){\r\n              lastModified.settings[el] = new Date()\r\n              localStorage[\"lastModified_settings_\" + el] = lastModified.settings[el].toISOString()\r\n            }\r\n          })\r\n          break;\r\n        case \"lastReset\":\r\n        case \"realEndTime\":\r\n          break\r\n        default:\r\n          lastModified[el] = new Date()\r\n          localStorage[\"lastModified_\" + el] = lastModified[el].toISOString()\r\n      }\r\n    })\r\n\r\n    // merge the new lastModified with the one in the state\r\n    data.lastModified = mergeObjects(this.state.lastModified, lastModified)\r\n\r\n    // set the state (merge with the current state)\r\n    this.setState(data)\r\n\r\n    // save to localStorage\r\n    for(let [key, val] of Object.entries(data)){\r\n      if(key === \"lastModified\") continue // lastModified was already saved to localStorage above\r\n\r\n      if(typeof val === \"undefined\"){\r\n        delete localStorage[key]\r\n        continue\r\n      }\r\n      if(typeof val === \"object\" && key !== \"lastReset\") localStorage[key] = JSON.stringify(val)\r\n      else localStorage[key] = val\r\n    }\r\n\r\n    // send an update to the server (if the user is logged in and online)\r\n    if(this.state.accessToken){\r\n      if(!this.io.disconnected){\r\n        // always send the lastReset along\r\n        if(!data.lastReset) data.lastReset = this.state.lastReset\r\n\r\n        // only use the relevant part of lastModified\r\n        let lastModifiedToSend = {}\r\n        for(let key of Object.keys(lastModified)) lastModifiedToSend[key] = data.lastModified[key]\r\n        data.lastModified = lastModifiedToSend\r\n\r\n        this.io.emit(\"update\", {accessToken: this.state.accessToken, data})\r\n      }\r\n      else{\r\n        this.setState({temp: {...this.state.temp, updatedWhileDisconnected: true}})\r\n      }\r\n    }\r\n  }\r\n\r\n  closeSnackbar = () => {\r\n    this.setState({\r\n      temp: {...this.state.temp, showDisconnectedError: false}\r\n    })\r\n  }\r\n\r\n  // determine which properties of a project or a break were modified, save lastModified to localStorage and return it too\r\n  /*\r\n    object = project or break\r\n    key = \"projects\" or \"breaks\"\r\n    lastModified is only the project's/break's last modified (from the state)\r\n  */\r\n  setLastModified = (object, objectId, key, lastModified) => {\r\n    // if the user deleted the object\r\n    if(!object){\r\n      lastModified = {id: new Date()}\r\n      let localStorageKey = [\"lastModified\", key, objectId, \"id\"].join(\"_\")\r\n      localStorage[localStorageKey] = lastModified.id.toISOString()\r\n\r\n      this.deleteObjectsLocalStorage([\"lastModified\", key, objectId, \"\"].join(\"_\"), localStorageKey)\r\n\r\n      return lastModified\r\n    }\r\n\r\n    // handle undefined\r\n    if(!lastModified) lastModified = {}\r\n\r\n    // find the object in the state\r\n    let stateObjectIndex = this.state[key].findIndex(el => el.id === objectId)\r\n\r\n    // loop through the properties we want to keep track of\r\n    Object.keys(object).forEach(property => {\r\n      // if it was changed...\r\n      let propertyChanged\r\n      // (if the user created a new project/break, it won't be in the state yet)\r\n      if(this.state[key][stateObjectIndex]){\r\n        if(typeof object[property] === \"object\"){\r\n          propertyChanged = !areIdenticalObjects(\r\n            object[property],\r\n            this.state[key][stateObjectIndex][property]\r\n          )\r\n        }\r\n        else propertyChanged = object[property] !== this.state[key][stateObjectIndex][property]\r\n      }\r\n      else propertyChanged = true\r\n\r\n      if(propertyChanged){\r\n        lastModified[property] = new Date()\r\n\r\n        let localStorageKey = [\"lastModified\", key, objectId, property].join(\"_\")\r\n        localStorage[localStorageKey] = lastModified[property].toISOString()\r\n      }\r\n    })\r\n\r\n    return lastModified\r\n  }\r\n\r\n  // determine which projects/breaks were modified, call setLastModified on them\r\n  /*\r\n    array = array of projects or breaks from the update method's args\r\n    lastModified is only lastModified.projects or .breaks\r\n    changedIds can be undefined\r\n    key = \"projects\" or \"breaks\"\r\n  */\r\n  setMultipleLastModified = (array, changedIds, key) => {\r\n    let lastModified = this.state.lastModified[key] // init\r\n    if(!lastModified) lastModified = {} // handle undefined\r\n\r\n    // if only a specific project/break was modified, check its fields\r\n    if(changedIds){\r\n      // handle an input with just 1 id\r\n      if(typeof changedIds !== \"object\") changedIds = [changedIds]\r\n\r\n      changedIds.forEach(changedId => {\r\n        let index = array.findIndex(object => object.id === parseInt(changedId))\r\n        let changedObject = array[index]\r\n\r\n        lastModified[changedId] = this.setLastModified(\r\n          changedObject,\r\n          changedId,\r\n          key,\r\n          lastModified[changedId]\r\n        )\r\n      })\r\n    }\r\n    // else check all projects\r\n    else{\r\n      array.forEach((object, i) => {\r\n        let objectId = object.id\r\n\r\n        lastModified[objectId] = this.setLastModified(\r\n          object,\r\n          objectId,\r\n          key,\r\n          lastModified[objectId]\r\n        )\r\n      })\r\n    }\r\n\r\n    return lastModified\r\n  }\r\n\r\n  // a util method for deleting localStorage entries tha fulfill certain criteria\r\n  deleteObjectsLocalStorage = (startsWithString, except = \"\") => {\r\n    let localStorageKeys = Object.keys(localStorage)\r\n    let relevantKeys = []\r\n    localStorageKeys.forEach(key => {\r\n      if(key.startsWith(startsWithString) && key !== except) relevantKeys.push(key)\r\n    })\r\n    relevantKeys.forEach(key => {\r\n      localStorage.removeItem(key)\r\n    })\r\n  }\r\n\r\n  // if the server sends an update, insert it into the state and save it to localStorage\r\n  handleUpdateFromServer = data => {\r\n    // merge lastModified when saving to state\r\n    this.setState({\r\n      ...data,\r\n      lastModified: {\r\n        ...this.state.lastModified,\r\n        ...data.lastModified\r\n      }\r\n    })\r\n\r\n    // save to localStorage\r\n    Object.keys(data).forEach(key => {\r\n      if(key === \"lastModified\"){\r\n        // since lastModified is a nested object, it needs to be stored more carefully\r\n        // we want to be able to modify differnt fields quickly which is why...\r\n        // it is stored as many different entries, eg. \"lastModified_project_{id}_name\"\r\n        // this part of the code handles the nested nature of the object and also converts the dates into ISO strings\r\n        Object.keys(data.lastModified).forEach(lastModifiedKey => {\r\n          if(\r\n            lastModifiedKey === \"projects\" ||\r\n            lastModifiedKey === \"breaks\" ||\r\n            lastModifiedKey ===\"defaultProjects\"\r\n          ){\r\n            for(let objectIdKey of Object.keys(data.lastModified[lastModifiedKey])){\r\n              if(\r\n                !data.lastModified[lastModifiedKey][objectIdKey] ||\r\n                typeof data.lastModified[lastModifiedKey][objectIdKey] !== \"object\"\r\n              ) continue\r\n              Object.keys(data.lastModified[lastModifiedKey][objectIdKey]).forEach(propertyKey => {\r\n                let localStorageKey = [\"lastModified\", lastModifiedKey, objectIdKey, propertyKey].join(\"_\")\r\n                let dateString = data.lastModified[lastModifiedKey][objectIdKey][propertyKey]\r\n                if(typeof dateString !== \"string\") dateString = dateString.toISOString()\r\n                localStorage[localStorageKey] = dateString\r\n              })\r\n            }\r\n          }\r\n          else{\r\n            if(lastModifiedKey === \"settings\"){\r\n              for(let settingsKey of Object.keys(data.lastModified.settings)){\r\n                let dateString = data.lastModified.settings[settingsKey]\r\n                if(!dateString) continue\r\n                let localStorageKey = \"lastModified_settings_\" + settingsKey\r\n                if(typeof dateString !== \"string\") dateString = dateString.toISOString()\r\n                localStorage[localStorageKey] = dateString\r\n              }\r\n            }\r\n            else{\r\n              let dateString = data.lastModified[lastModifiedKey]\r\n              if(dateString){\r\n                if(typeof dateString !== \"string\") dateString = dateString.toISOString()\r\n                localStorage[\"lastModified_\" + lastModifiedKey] = dateString\r\n              }\r\n            }\r\n          }\r\n        })\r\n      }\r\n      else{\r\n        // store the actual values\r\n        if(typeof data[key] === \"object\") localStorage[key] = JSON.stringify(data[key])\r\n        else localStorage[key] = data[key]\r\n      }\r\n    })\r\n  }\r\n\r\n  checkForUpdates = () => {\r\n    if(this.state.accessToken && !this.io.disconnected){\r\n      this.io.emit(\"checkForUpdates\", {accessToken: this.state.accessToken})\r\n    }\r\n  }\r\n\r\n  render(){\r\n    var {accessToken, temp, lastModified, ...data} = this.state\r\n\r\n    return (\r\n      <MuiThemeProvider theme={data.settings.darkTheme ? darkTheme : lightTheme}>\r\n        <div style={{position: \"relative\"}} onFocus={this.checkForUpdates}\r\n          className={data.settings.darkTheme ? \"darkRoot\" : \"lightRoot\"}\r\n        >\r\n          <CssBaseline />\r\n          <Router\r\n            data={data}\r\n            connect={this.connect}\r\n            update={this.update}\r\n            disconnect={this.disconnect}\r\n            loggedIn={Boolean(this.state.accessToken)}\r\n            disconnected={this.state.temp.disconnected}\r\n            checkForUpdates={this.checkForUpdates}\r\n          />\r\n          <Snackbar\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'left',\r\n            }}\r\n            open={this.state.temp.showDisconnectedError}\r\n            autoHideDuration={6000}\r\n            onClose={this.closeSnackbar}\r\n          >\r\n            <SnackbarContent\r\n              style={{backgroundColor: \"#d32f2f\"}}\r\n              aria-describedby=\"disconnectedErrorSnackbar\"\r\n              message={<span id=\"disconnectedErrorSnackbar\">We're having trouble reaching our server</span>}\r\n              action={[\r\n                <IconButton\r\n                  key=\"close\"\r\n                  aria-label=\"Close\"\r\n                  color=\"inherit\"\r\n                  styles={{padding: \".5rem\"}}\r\n                  onClick={this.closeSnackbar}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              ]}\r\n            />\r\n          </Snackbar>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'core-js'; // polyfill\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport ErrorBoundary from './ErrorBoundary'\r\nimport DataSync from './DataSync';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <ErrorBoundary>\r\n    <DataSync />\r\n  </ErrorBoundary>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}
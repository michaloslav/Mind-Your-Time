{"version":3,"sources":["ProjectsTable.js","BreaksDrawer.js","SignInPanel.js","App.js","ColorPicker.js","TimeSetter.js","util/validation.js","signIn/GoogleSignIn.js","util/getGetParams.js","DefaultProjectsDaysDialog.js","HOCs/withInputFields.js","ProjectsTableRow.js","AddProjectRow.js","SetStartTimeCell.js","HOCs/withAdd.js","util/validationRegex.js","DefaultProjectsDrawer.js"],"names":["ProjectsTable","props","react_default","a","createElement","_Context","Consumer","isMobile","Table_default","id","className","TableHead_default","TableRow_default","TableCell_default","react_beautiful_dnd_esm","onDragEnd","droppableId","provided","RootRef_default","rootRef","innerRef","TableBody_default","droppableProps","projects","length","colSpan","style","showErrors","noProjects","color","fontWeight","map","row","i","key","draggableId","toString","index","ProjectsTableRow","mode","currentTime","settings","onColorChange","onDoneEditing","onProjectStateChange","onDeleteProject","startEditingMobile","placeholder","AddProjectRow","defaultColorIndex","lastProject","onAddProject","BreaksDrawer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","validateEndTime","breakId","startTime","endTime","success","temp","state","showEndTimeErrors","TimeCalc","isBiggerThan","clearTimeout","setTimeout","setState","objectSpread","defineProperty","addBreak","new","breaks","newBreak","newId","makeNewId","push","onSave","breakDurations","subtractToMinutes","add","name","handleSave","onClose","handleEnterPress","e","handleEnterPressNew","render","Fragment","Typography_default","variant","breakInfo","Input_default","value","onChange","handleInputChange","bind","assertThisInitialized","onKeyPress","TimeSetter","handleTimeInputChange","onEnterPress","showError","IconButton_default","onClick","deleteBreak","Delete_default","Add_default","Grid_default","container","justify","Button_default","margin","JSON","parse","stringify","round","errors","propertyId","val","target","validationRegex","test","findIndex","el","inputId","canClose","values","every","x","splice","Component","SignInPanel","handleDismiss","showDontRemindMeAgain","anchorEl","currentTarget","dismiss","closeDismissMenu","_this2","alignItems","GoogleSignIn","connect","aria-owns","undefined","Close_default","Menu_default","open","Boolean","MenuItem_default","dontRemindMeAgain","AddProjectView","React","lazy","Promise","all","__webpack_require__","then","EditProjectView","BreaksView","DefaultProjectsView","ModeSwitch","TimeStats","Congrats","DropdownMenu","SettingsIcon","t","AddFab","App","setShowResetButton","condition1","condition2","lastResetInMs","Date","localStorage","lastReset","getTime","lastResetInMinutes","showResetButtonAfter","data","setTime","showResetButton","slice","autodetected","update","handleEndTimeChange","assign","newState","h","m","endTimeErrorTimeout","changeRouterShowErrors","handleRootKeyDown","changeModeOnTab","openBreaksDrawer","preventDefault","changeMode","handleCurrentTimeChange","time","onCurrentTimeChange","resetState","window","confirm","closeDrawer","drawerName","dataLabel","concat","newTemp","defaultProjectsDrawerRemoveTransform","saveBreaks","changes","setTimesForProjects","canCloseBreaksDrawer","handleSignInDismiss","signInDissmissed","userHasDismissedSignInBefore","showSignInAgainTimeout","handleSignInDontRemindMeAgain","removeItem","dontShowSignInPanelAgain","openDefaultProjectsDrawer","getDateString","now","toISOString","split","closeSnackbar","snackbar","handleProjectPause","changedProject","progress","duration","parseInt","estimatedDuration","roundTo","suggestedDuration","Math","message","action","handleDoneEditingProject","plannedTime","start","buttonLabel","dontShowSignInYet","showSignInPanelAfterLoadTimeout","prevProps","keys","productivityPercentage","totalTimeWorkedString","allProjectsDone","dateString","todaysProdPerc","productivityPercentages","totalTimeWorked","makeString","toTimeObject","totalTimePassed","realEndTime","isNaN","arrayId","project","newDefaultColorIndex","newProject","days","end","currentLastProject","detectBreaksAutomatically","suggestStartTime","updateTimesAfterDelete","result","dragging","destination","forEach","copy","firstStartTime","movedProjectIndex","movedProject","updateTimesAfterDrag","durationChanged","startTimeChanged","areIdentical","updateTimesAfterEdit","prevProjState","startedWorkingOnIt","s","getSeconds","view","change","additionalProps","newPath","stopPropagation","isFirst","_arr","entries","_i3","_ref3","_ref2","slicedToArray","history","pathArr","location","pathname","join","inputValues","obj","_this3","title","closeFunc","getParams","getGetParams","search","type","changeView","defaultColorIndexDefaultProjects","Suspense","fallback","LoadingFallback","addProject","onAddBreak","close","array","deleteFunc","doneEditingFunc","handleDoneEditingBreak","deleteProject","delete","defaultProjects","useDefaultProjects","handleColorChange","handleDragEnd","onUseDefaultProjectsChange","checked","onKeyDown","tabIndex","autoselect","onModeChange","Provider","src_ProjectsTable","handleProjectStateChange","htmlFor","firstInputId","marginBottom","Pause_default","PlayArrow_default","Autorenew_default","Drawer_default","anchor","BreaksDrawer_BreaksDrawer","DefaultProjectsDrawer","marginTop","react_router_dom","to","aria-label","disconnect","loggedIn","devUnlocked","Slide_default","direction","in","disconnected","mountOnEnter","unmountOnExit","SignInPanel_SignInPanel","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","size","children","ColorPicker","F_Programming_React_MindYourTime_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","F_Programming_React_MindYourTime_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","F_Programming_React_MindYourTime_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_4___default","ref","input","colorInput","width","xl","height","click","rx","ry","fill","cx","cy","r","createRef","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_LoadingFallback__WEBPACK_IMPORTED_MODULE_1__","_Context__WEBPACK_IMPORTED_MODULE_2__","TimeSetterDesktop","TimeSetterMobile","timeFormat24H","error","hError","mError","showErrorProp","d","__webpack_exports__","projectValidation","inputValidation","breakValidation","_TimeCalc__WEBPACK_IMPORTED_MODULE_0__","_validationRegex__WEBPACK_IMPORTED_MODULE_1__","dontValidateStartTime","arguments","valid","responseGoogle","res","console","log","tokenId","react_google_login__WEBPACK_IMPORTED_MODULE_5___default","clientId","buttonText","onSuccess","onFailure","locationSearch","getParamsString","substr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","paramArr","err","return","DefaultProjectsDaysDialog","DialogTitle_default","DialogContent_default","FormGroup_default","day","FormControlLabel_default","control","Checkbox_default","handleChange","label","DialogActions_default","save","withInputFields","WrappedComponent","_Component","toggleDaysDialog","dialogProjectId","handleDaysChange","wrappedComponent","onInputChange","onTimeInputChange","openDaysDialog","Dialog_default","aria-labelledby","DefaultProjectsDaysDialog_DefaultProjectsDaysDialog","defaultVal","pm","lastResortValue","defaultColors","userHasntChangedStartTime","inherits","createClass","bufferTimePercentage","isDefaultProjects","suggestedStartTime","suggestedEndTime","toUpperCase","ProjectsTableRowEditing","ProjectsTableRowDisplay","F_Programming_React_MindYourTime_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","F_Programming_React_MindYourTime_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","F_Programming_React_MindYourTime_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","editing","progressCapped","percentageDone","passThroughProps","showEditing","tableRowStyle","F_Programming_React_MindYourTime_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","backgroundImage","_this$props","_this$props2","react__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_RootRef__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_9___default","draggableProps","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_core_Icon__WEBPACK_IMPORTED_MODULE_12___default","dragHandleProps","_ColorPicker__WEBPACK_IMPORTED_MODULE_7__","_LoadingFallback__WEBPACK_IMPORTED_MODULE_8__","startEditing","withAdd","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_4___default","_ColorPicker__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Input__WEBPACK_IMPORTED_MODULE_5___default","autoFocus","_Context__WEBPACK_IMPORTED_MODULE_10__","_ref","inputProps","step","_SetStartTimeCell__WEBPACK_IMPORTED_MODULE_2__","startTimeH","startTimeM","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_icons_Add__WEBPACK_IMPORTED_MODULE_7___default","_TimeSetter__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_2___default","SetStartTimeCell","_getPrototypeOf2","_len","args","Array","_key","apply","callback","validation","newInputValues","handleKeyPress","F_Programming_React_MindYourTime_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__","_ProjectsTableRow__WEBPACK_IMPORTED_MODULE_1__","_AddProjectRow__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Table__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_Table__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_TableBody__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_TableBody__WEBPACK_IMPORTED_MODULE_4___default","_material_ui_core_TableHead__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_TableHead__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_core_RootRef__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core_RootRef__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_9___default","react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_11__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_12__","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_12___default","_material_ui_core_Switch__WEBPACK_IMPORTED_MODULE_13__","_material_ui_core_Switch__WEBPACK_IMPORTED_MODULE_13___default","header","darkTheme","mobile","provided2"],"mappings":"maAwFeA,UA3EO,SAAAC,GAAK,OACzBC,EAAAC,EAAAC,cAACC,EAAA,EAAgBC,SAAjB,KACG,SAAAC,GAAQ,OACPL,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAOM,GAAG,gBAAiBC,UAAU,iBACnCR,EAAAC,EAAAC,cAACO,EAAAR,EAAD,KACED,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACED,EAAAC,EAAAC,cAACS,EAAAV,EAAD,MACAD,EAAAC,EAAAC,cAACS,EAAAV,EAAD,cACEI,GAAYL,EAAAC,EAAAC,cAACS,EAAAV,EAAD,0BACdD,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KAAYI,EAAW,OAAS,gBAChCL,EAAAC,EAAAC,cAACS,EAAAV,EAAD,QAGJD,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAiBC,UAAWd,EAAMc,WAChCb,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAWE,YAAY,KACpB,SAAAC,GAAQ,OACPf,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAASgB,QAASF,EAASG,UACzBlB,EAAAC,EAAAC,cAACiB,EAAAlB,EAAcc,EAASK,gBACpBrB,EAAMsB,SAASC,QACftB,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACED,EAAAC,EAAAC,cAACS,EAAAV,EAAD,MACAD,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEsB,QAASlB,EAAW,EAAI,EACxBmB,MAAOzB,EAAM0B,WAAWC,WAAa,CACnCC,MAAO,MACPC,WAAY,KACV,MALN,oCASA5B,EAAAC,EAAAC,cAACS,EAAAV,EAAD,OAGHF,EAAMsB,SAASQ,IAAI,SAACC,EAAKC,GAAN,OAClB/B,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAWoB,IAAKF,EAAIvB,GAAI0B,YAAaH,EAAIvB,GAAG2B,WAAYC,MAAOJ,GAC5D,SAAAhB,GAAQ,OACPf,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CACEC,KAAMtC,EAAMsC,KACZP,IAAKA,EACLQ,YAAavC,EAAMuC,YACnBC,SAAUxC,EAAMwC,SAChBxB,SAAUA,EACVyB,cAAezC,EAAMyC,cACrBC,cAAe1C,EAAM0C,cACrBC,qBAAsB3C,EAAM2C,qBAC5BC,gBAAiB5C,EAAM4C,gBACvBC,mBAAoB7C,EAAM6C,yBAKjC7B,EAAS8B,YAGO,aAAf9C,EAAMsC,OAAwBhC,GAC5BL,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACEP,SAAUxC,EAAMwC,SAChBQ,kBAAmBhD,EAAMgD,kBACzBtB,WAAY1B,EAAM0B,WAClBuB,YAAajD,EAAMsB,SAAStB,EAAMsB,SAASC,OAAS,GACpD2B,aAAclD,EAAMkD,aACpBX,YAAavC,EAAMuC,mMCvDtBY,uBACnB,SAAAA,EAAYnD,GAAM,IAAAoD,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IAChBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMvD,KA8DR2D,gBAAkB,SAACC,EAASC,EAAWC,GACrC,IAGIC,EAHAC,EAAOZ,EAAKa,MAAMD,KAClBE,EAAoBd,EAAKa,MAAMC,kBA0BnC,OApBIC,IAASC,aAAaN,EAASD,GAAW,GAAO,IAanDE,GAAU,EAEVG,EAAkBN,IAAW,EAC7BS,aAAaL,EAAKE,kBAAkBN,MAfpCG,GAAU,EAEVC,EAAKE,kBAAkBN,GAAWU,WAAW,WAC3ClB,EAAKmB,SAAS,CACZL,kBAAkBb,OAAAmB,EAAA,EAAAnB,CAAA,GACbD,EAAKa,MAAMC,kBADCb,OAAAoB,EAAA,EAAApB,CAAA,GAEdO,GAAU,OAGd,MASLR,EAAKmB,SAAS,CAACP,OAAME,sBACdH,GA3FSX,EAiKlBsB,SAAW,WAET,IAAGtB,EAAKa,MAAMC,kBAAkBS,IAAhC,CAEA,IAAIC,EAASxB,EAAKa,MAAMW,OACpBC,EAAWzB,EAAKa,MAAMY,SAGtBC,EAAQC,YAAUH,EAAQ,UAC9BC,EAASrE,GAAKsE,EAEdF,EAAOI,KAAKH,GAEZzB,EAAKmB,SAAS,CAACK,WACfxB,EAAKpD,MAAMiF,OAAOL,EAAQ,CAACA,OAAQE,IAGnC,IAAII,EAAiB9B,EAAKa,MAAMiB,eAChCA,EAAeP,IAAM,GACrBO,EAAeJ,GAASX,IAASgB,kBAAkBN,EAASf,QAASe,EAAShB,WAAW,GAGzFT,EAAKmB,SAAS,CACZM,SAAU,CACRhB,UAAWM,IAASiB,IAAIP,EAASf,QAAS,IAC1CA,QAASK,IAASiB,IAAIP,EAASf,QAAS,KACxCuB,KAAM,IAERH,qBA7Lc9B,EA+MlBkC,WAAa,WACXlC,EAAKpD,MAAMuF,WAhNKnC,EAmNlBoC,iBAAmB,SAAAC,GACJ,UAAVA,EAAExD,KAAiBmB,EAAKsB,YApNXtB,EAuNlBsC,oBAAsB,SAAAD,GACP,UAAVA,EAAExD,KAAiBmB,EAAKsB,YAxNXtB,EA2NlBuC,OAAS,kBACP1F,EAAAC,EAAAC,cAACF,EAAAC,EAAM0F,SAAP,KACE3F,EAAAC,EAAAC,cAAC0F,EAAA3F,EAAD,CAAY4F,QAAQ,KAAKrF,UAAU,eAAnC,WAGAR,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAOO,UAAU,gBACfR,EAAAC,EAAAC,cAACO,EAAAR,EAAD,KACED,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACED,EAAAC,EAAAC,cAACS,EAAAV,EAAD,wBACAD,EAAAC,EAAAC,cAACS,EAAAV,EAAD,cACAD,EAAAC,EAAAC,cAACS,EAAAV,EAAD,YACAD,EAAAC,EAAAC,cAACS,EAAAV,EAAD,QAGJD,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,KACGkD,EAAKa,MAAMW,OAAOrD,OACjB6B,EAAKa,MAAMW,OAAO9C,IAAI,SAACiE,EAAW/D,GAAZ,OACpB/B,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CAAU+B,IAAK8D,EAAUvF,IACvBP,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KACED,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CACE+F,MAAOF,EAAUV,KACjBa,SAAU9C,EAAK+C,kBAAkBC,KAAvB/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,IAAkC2C,EAAUvF,GAAI,QAC1D8F,WAAYlD,EAAKoC,oBAGrBvF,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KACED,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CACEN,MAAOF,EAAUlC,UACjBqC,SAAU9C,EAAKoD,sBAAsBJ,KAA3B/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,IAAsC2C,EAAUvF,GAAI,aAC9DiG,aAAcrD,EAAKkC,cAGvBrF,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KACED,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CACEN,MAAOF,EAAUjC,QACjBoC,SAAU9C,EAAKoD,sBAAsBJ,KAA3B/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,IAAsC2C,EAAUvF,GAAI,WAC9DiG,aAAcrD,EAAKkC,WACnBoB,UAAWtD,EAAKa,MAAMC,kBAAkB6B,EAAUvF,OAGtDP,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KACED,EAAAC,EAAAC,cAACwG,EAAAzG,EAAD,CAAY0G,QAASxD,EAAKyD,YAAYT,KAAjB/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,IAA4B2C,EAAUvF,KACzDP,EAAAC,EAAAC,cAAC2G,EAAA5G,EAAD,WAMRD,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACED,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAWsB,QAAS,GAApB,+BAGJvB,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACED,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KACED,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CACE+F,MAAO7C,EAAKa,MAAMY,SAASQ,KAC3Ba,SAAU9C,EAAK+C,kBAAkBC,KAAvB/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,IAAkC,MAAO,QACnDkD,WAAYlD,EAAKsC,uBAGrBzF,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KACED,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CACEN,MAAO7C,EAAKa,MAAMY,SAAShB,UAC3BqC,SAAU9C,EAAKoD,sBAAsBJ,KAA3B/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,IAAsC,MAAO,aACvDqD,aAAcrD,EAAKsB,YAGvBzE,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KACED,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CACEN,MAAO7C,EAAKa,MAAMY,SAASf,QAC3BoC,SAAU9C,EAAKoD,sBAAsBJ,KAA3B/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,IAAsC,MAAO,WACvDqD,aAAcrD,EAAKsB,SACnBgC,UAAWtD,EAAKa,MAAMC,kBAAkBS,OAG5C1E,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KACED,EAAAC,EAAAC,cAACwG,EAAAzG,EAAD,CAAY0B,MAAM,UAAUgF,QAASxD,EAAKsB,UACxCzE,EAAAC,EAAAC,cAAC4G,EAAA7G,EAAD,WAMVD,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAM+G,WAAS,EAACC,QAAQ,UACtBjH,EAAAC,EAAAC,cAACgH,EAAAjH,EAAD,CACE0G,QAASxD,EAAKkC,WAAWc,KAAhB/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KACT0C,QAAQ,YACRlE,MAAM,UACNH,MAAO,CAAC2F,OAAQ,UAJlB,WA5SJ,IAAIxC,EAASyC,KAAKC,MAAMD,KAAKE,UAAUvH,EAAM4E,SACzCC,EAAW,GAGZD,EAAOrD,QAERsD,EAAShB,UAAYM,IAASiB,IAAIR,EAAOA,EAAOrD,OAAS,GAAGuC,QAAS,IACrEe,EAASf,QAAUK,IAASiB,IAAIP,EAAShB,UAAW,MAKpDgB,EAAShB,UAAYM,IAASqD,MAAMrD,IAASiB,IAAIpF,EAAMuC,YAAa,IAAK,IACzEsC,EAASf,QAAUK,IAASiB,IAAIP,EAAShB,UAAW,KAGtDgB,EAASQ,KAAO,GAMhB,IAHA,IAAIH,EAAiB,CACnBP,IAAK,IAEC3C,EAAI,EAAGA,EAAI4C,EAAOrD,OAAQS,IAAI,CAEpCkD,EADcN,EAAO5C,GAAGxB,IACE2D,IAASgB,kBAAkBP,EAAO5C,GAAG8B,QAASc,EAAO5C,GAAG6B,WAAW,GA3B/E,OA8BhBT,EAAKa,MAAQ,CACXW,SACAC,WACAK,iBACAuC,OAAQ,GACRvD,kBAAmB,GACnBF,KAAM,CACJE,kBAAmB,KArCPd,iFA2CAQ,EAAS8D,EAAYjC,GACrC,IAAIkC,EAAMlC,EAAEmC,OAAO3B,MAEnB,IAAG4B,IAAgBC,KAAKH,GAExB,GAAe,QAAZ/D,EAAkB,CACnB,IAAIiB,EAAWtB,KAAKU,MAAMY,SAC1BA,EAAS6C,GAAcC,EACvBpE,KAAKgB,SAAS,CAACM,iBAEb,CACF,IAAID,EAASrB,KAAKU,MAAMW,OACpBxC,EAAQwC,EAAOmD,UAAU,SAAAC,GAAE,OAAIA,EAAGxH,KAAOoD,IAC7CgB,EAAOxC,GAAOsF,GAAcC,EAE5BpE,KAAKgB,SAAS,CAACK,WACfrB,KAAKvD,MAAMiF,OAAOL,EAAQ,CAACA,OAAQhB,mDAoCjBA,EAAS8D,EAAYO,EAASN,GAClD,IAAGE,IAAgBC,KAAKH,GAExB,GAAe,QAAZ/D,EAAkB,CACnB,IAAIiB,EAAWtB,KAAKU,MAAMY,SACtBK,EAAiB3B,KAAKU,MAAMiB,eAGjB,WAAZ+C,EAAsBpD,EAAS6C,GAAcC,EAC3C9C,EAAS6C,GAAYO,GAAWN,EAE1B,KAARA,IAEiB,cAAfD,IACD7C,EAASf,QAAUK,IAASiB,IAAIP,EAAShB,UAAWqB,EAAeP,MAGnD,YAAf+C,IACDnE,KAAKI,gBAAgBC,EAASiB,EAAShB,UAAWgB,EAASf,SAG3DoB,EAAeP,IAAMR,IAASgB,kBAAkBN,EAASf,QAASe,EAAShB,WAAW,KAI1FN,KAAKgB,SAAS,CAACM,WAAUK,uBAGvB,CACF,IAAIN,EAASrB,KAAKU,MAAMW,OACpBM,EAAiB3B,KAAKU,MAAMiB,eAC5B9C,EAAQwC,EAAOmD,UAAU,SAAAC,GAAE,OAAIA,EAAGxH,KAAOoD,IAG9B,WAAZqE,EAAsBrD,EAAOxC,GAAOsF,GAAcC,EAChD/C,EAAOxC,GAAOsF,GAAYO,GAAWN,EAE1C,IAAI5D,GAAU,EAEH,KAAR4D,EAAY5D,GAAU,GAGL,cAAf2D,IACD9C,EAAOxC,GAAO0B,QAAUK,IAASiB,IAAIR,EAAOxC,GAAOyB,UAAWqB,EAAetB,KAG7D,YAAf8D,IACD3D,EAAUR,KAAKI,gBAAgBC,EAASgB,EAAOxC,GAAOyB,UAAWe,EAAOxC,GAAO0B,SAG/EoB,EAAe9C,GAAS+B,IAASgB,kBAAkBP,EAAOxC,GAAO0B,QAASc,EAAOxC,GAAOyB,WAAW,GACnGN,KAAKgB,SAAS,CAACW,qBAKnB,IAAIuC,EAASlE,KAAKU,MAAMwD,OACxBA,EAAO7D,IAAYG,EACnB,IAAImE,EAAW7E,OAAO8E,OAAOV,GAAQW,MAAM,SAAAC,GAAC,OAAKA,IAEjD9E,KAAKgB,SAAS,CAACK,SAAQ6C,WACvBlE,KAAKvD,MAAMiF,OAAOL,EAAQsD,EAAU,CAACtD,OAAQhB,yCAqCrCpD,GACV,IAAIoE,EAASrB,KAAKU,MAAMW,OACpBxC,EAAQwC,EAAOmD,UAAU,SAAAC,GAAE,OAAIA,EAAGxH,KAAOA,IAC7CoE,EAAO0D,OAAOlG,EAAO,GAGrB,IAAIqF,EAASlE,KAAKU,MAAMwD,cACjBA,EAAOjH,GACd,IAAI0H,EAAW7E,OAAO8E,OAAOV,GAAQW,MAAM,SAAAC,GAAC,OAAKA,IAEjD9E,KAAKgB,SAAS,CAACK,SAAQ6C,WACvBlE,KAAKvD,MAAMiF,OAAOL,EAAQsD,EAAU,CAACtD,OAAQpE,WA7MP+H,4FCNrBC,wBACnB,SAAAA,EAAYxI,GAAM,IAAAoD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiF,IAChBpF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmF,GAAA9E,KAAAH,KAAMvD,KAIRyI,cAAgB,SAAAhD,GAEVrC,EAAKpD,MAAM0I,sBAEVtF,EAAKmB,SAAS,CAACoE,SAAUlD,EAAEmD,gBAFMxF,EAAKpD,MAAM6I,WAPjCzF,EAYlB0F,iBAAmB,WACjB1F,EAAKmB,SAAS,CAACoE,SAAU,QAXzBvF,EAAKa,MAAQ,CAAC0E,SAAU,MAFRvF,wEAgBV,IAAA2F,EAAAxF,KACFoF,EAAWpF,KAAKU,MAAM0E,SAE1B,OACE1I,EAAAC,EAAAC,cAAA,OAAKM,UAAU,eACbR,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CACEO,UAAU,uBACVwG,WAAS,EACT+B,WAAW,SACX9B,QAAQ,gBAERjH,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,4DAGAD,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,KACED,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAcC,QAAS3F,KAAKvD,MAAMkJ,YAGtCjJ,EAAAC,EAAAC,cAACwG,EAAAzG,EAAD,CACEO,UAAU,gBACVmG,QAASrD,KAAKkF,cACdU,YAAWR,EAAW,8BAA2BS,GAEjDnJ,EAAAC,EAAAC,cAACkJ,GAAAnJ,EAAD,OAEDqD,KAAKvD,MAAM0I,uBACVzI,EAAAC,EAAAC,cAACmJ,EAAApJ,EAAD,CACEM,GAAG,yBACHmI,SAAUA,EACVY,KAAMC,QAAQb,GACdpD,QAAShC,KAAKuF,kBAEd7I,EAAAC,EAAAC,cAACsJ,GAAAvJ,EAAD,CAAU0G,QAAS,WAAOmC,EAAKD,mBAAoBC,EAAK/I,MAAM6I,YAA9D,mBAGA5I,EAAAC,EAAAC,cAACsJ,GAAAvJ,EAAD,CAAU0G,QAAS,WAAOmC,EAAKD,mBAAoBC,EAAK/I,MAAM0J,sBAA9D,kCApD6BnB,0NCUzC,IAAMoB,GAAiBC,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAvE,EAAA,GAAAuE,EAAAvE,EAAA,GAAAuE,EAAAvE,EAAA,MAAAwE,KAAAD,EAAA5D,KAAA,cAClC8D,GAAkBN,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAvE,EAAA,GAAAuE,EAAAvE,EAAA,GAAAuE,EAAAvE,EAAA,MAAAwE,KAAAD,EAAA5D,KAAA,cACnC+D,GAAaP,IAAMC,KAAK,kBAAMG,EAAAvE,EAAA,IAAAwE,KAAAD,EAAA5D,KAAA,cAC9BgE,GAAsBR,IAAMC,KAAK,kBAAMG,EAAAvE,EAAA,IAAAwE,KAAAD,EAAA5D,KAAA,cACvCiE,GAAaT,IAAMC,KAAK,kBAAMG,EAAAvE,EAAA,IAAAwE,KAAAD,EAAA5D,KAAA,cAC9BkE,GAAYV,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAvE,EAAA,GAAAuE,EAAAvE,EAAA,GAAAuE,EAAAvE,EAAA,MAAAwE,KAAAD,EAAA5D,KAAA,aAC7BmE,GAAWX,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAvE,EAAA,GAAAuE,EAAAvE,EAAA,GAAAuE,EAAAvE,EAAA,MAAAwE,KAAAD,EAAA5D,KAAA,cAC5BoE,GAAeZ,IAAMC,KAAK,kBAAMG,EAAAvE,EAAA,IAAAwE,KAAAD,EAAA5D,KAAA,cAChCqE,GAAeb,IAAMC,KAAK,kBAAMG,EAAAvE,EAAA,IAAAwE,KAAAD,EAAAU,EAAAtE,KAAA,eAChCuE,GAASf,IAAMC,KAAK,kBAAMG,EAAAvE,EAAA,IAAAwE,KAAAD,EAAA5D,KAAA,aAEXwE,eACnB,SAAAA,EAAY5K,GAAM,IAAAoD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqH,IAChBxH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuH,GAAAlH,KAAAH,KAAMvD,KAsGR6K,mBAAqB,WAEnB,IAAIC,EAAYC,EAGZC,EAAgB,IAAIC,KAAKC,aAAaC,WAAWC,UAEjDC,GADJL,GAA6B,OACY,IAAO,GAIhD,KAHAF,EAAa3G,IAASC,aAAaiH,EAAoBjI,EAAKpD,MAAMuC,aAAa,GAAO,IAGvE,CAEb,IAAI4I,EAAY,IAAIF,KAAKC,aAAaC,WAElCG,GADWlI,EAAKpD,MAAMuL,KAAK/I,SAAS8I,qBAAuBlI,EAAKpD,MAAMuL,KAAK/I,UAC3C8I,qBACpCH,EAAUK,QAAQL,EAAUC,UAAoC,GAAvBE,EAA4B,GAAK,KAC1EP,EAAaI,EAAY,IAAIF,KAI/B,IAAIQ,GAAmBX,GAAcC,IAAe3H,EAAKpD,MAAMuL,KAAKjK,SAASC,OAC7E6B,EAAKmB,SAAS,CAACkH,qBA7HCrI,EAkIlBsB,SAAW,SAACb,EAAWC,GAGrB,IAFA,IAAIc,EAASxB,EAAKpD,MAAMuL,KAAK3G,OAAO8G,QAE5B1J,EAAI,EAAGA,EAAI4C,EAAOrD,OAAQS,KAI5BmC,IAASC,aAAaN,EAASc,EAAO5C,GAAG6B,WAAW,GAAO,IAC3DM,IAASC,aAAaQ,EAAO5C,GAAG6B,UAAWA,GAAW,GAAM,IAE5DM,IAASC,aAAaN,EAASc,EAAO5C,GAAG8B,SAAS,GAAO,IACzDK,IAASC,aAAaQ,EAAO5C,GAAG8B,QAASD,GAAW,GAAM,MAKzDe,EAAO5C,GAAG2J,cAGRxH,IAASC,aAAaP,EAAWe,EAAO5C,GAAG6B,WAAW,GAAO,KAE9DA,EAAYe,EAAO5C,GAAG6B,WAIrBM,IAASC,aAAaQ,EAAO5C,GAAG8B,QAASA,GAAS,GAAM,KACzDA,EAAUc,EAAO5C,GAAG8B,SAItBc,EAAO0D,OAAOtG,EAAG,IAKjB6B,EAAYe,EAAO5C,GAAG8B,SAK5B,IAAIgB,EAAQC,YAAUH,EAAQ,UAU9B,OARAA,EAAOI,KAAK,CACVxE,GAAIsE,EACJO,KAAM,SAAWT,EAAOrD,OAAS,GACjCoK,cAAc,EACd9H,YAAWC,YAGbV,EAAKpD,MAAM4L,OAAO,CAAChH,UAAS,CAACA,OAAQE,IAC9BF,GApLSxB,EAyLlByI,oBAAsB,SAACrL,EAAImH,GACzB,IAAI7D,EAAUT,OAAOyI,OAAO,GAAI1I,EAAKpD,MAAMuL,KAAKzH,SAC5CiI,EAAW,CACbrK,WAAY0B,EAAKa,MAAMvC,WACvBsC,KAAMZ,EAAKa,MAAMD,MAGT,WAAPxD,EAAiBsD,EAAU6D,EACzB7D,EAAQtD,GAAMmH,EAIF,KAAd7D,EAAQkI,GACQ,KAAdlI,EAAQmI,GACR9H,IAASC,aAAahB,EAAKpD,MAAMuC,YAAauB,GAAS,GAAM,GAEhEiI,EAAS/H,KAAKkI,oBAAsB5H,WAAW,WAC7ClB,EAAKpD,MAAMmM,uBAAuB,WAAW,IAC5C,MAGH9H,aAAa0H,EAAS/H,KAAKkI,qBAC3B9I,EAAKpD,MAAMmM,uBAAuB,WAAW,IAG/CJ,EAASjI,QAAUA,EAEnBV,EAAKmB,SAASwH,GACd3I,EAAKpD,MAAM4L,OAAO,CAAC9H,aArNHV,EA8SlBgJ,kBAAoB,SAAA3G,GACfrC,EAAKpD,MAAMuL,KAAK/I,SAAS6J,iBAA6B,QAAV5G,EAAExD,MAAkBmB,EAAKa,MAAMD,KAAKsI,mBACjF7G,EAAE8G,iBAEFnJ,EAAKpD,MAAMwM,WAAoC,aAAzBpJ,EAAKpD,MAAMuL,KAAKjJ,KAAsB,UAAY,cAlT1Dc,EAgkBlBqJ,wBAA0B,SAAAC,GACxBtJ,EAAKpD,MAAM2M,oBAAoBD,GAC/BpI,WAAWlB,EAAKyH,qBAlkBAzH,EAqkBlBwJ,WAAa,WACRC,OAAOC,QAAQ,wDAChB1J,EAAKpD,MAAM4L,OAAO,CAChBtK,SAAU,GACVsD,OAAQ,GACRtC,KAAM,aAERc,EAAKmB,SAAS,CAACkH,iBAAiB,MA5kBlBrI,EAilBlB2J,YAAc,SAACC,EAAYC,GAEzB,GAAuD,qBAA7C7J,EAAKa,MAAMD,KAAK,WAAagJ,IACrC5J,EAAKa,MAAMD,KAAK,WAAagJ,IAC7BH,OAAOC,QAAP,eAAAI,OAA8BD,EAA9B,iFACD,CAEC,IAAIE,EAAU/J,EAAKa,MAAMD,KACzBmJ,EAAQ,OAASH,IAAc,EAC/BG,EAAQ,WAAaH,QAAc5D,EACjB,0BAAf4D,IAAwCG,EAAQC,sCAAuC,GAC1FhK,EAAKmB,SAAS4I,KA5lBA/J,EAgmBlBiK,WAAa,SAACzI,EAAQsD,EAAUoF,GAE9B,GAAuB,qBAAbpF,GAA4BA,EAAS,CAC7C,IAAI5G,EAAW8B,EAAKpD,MAAMuL,KAAKjK,SAASoK,QAGrCtI,EAAKpD,MAAMuL,KAAKjK,SAASC,SAC1BD,EAAWiM,YAAoBjM,EAAU8B,EAAKpD,MAAMuL,KAAK/I,SAAUoC,EAAQxB,EAAKpD,MAAMuL,KAAK1H,YAG7F,IAAIG,EAAOZ,EAAKa,MAAMD,KACC,qBAAbkE,IAA0BlE,EAAKwJ,qBAAuBtF,GAEhE9E,EAAKmB,SAAS,CAACP,SACfZ,EAAKpD,MAAM4L,OAAO,CAACtK,WAAUsD,OAAQyC,KAAKC,MAAMD,KAAKE,UAAU3C,KAAW0I,QAEvElK,EAAKmB,SAAS,CAACP,KAAKX,OAAAmB,EAAA,EAAAnB,CAAA,GAAKD,EAAKa,MAAMD,KAAjB,CAAuBwJ,sBAAsB,OAhnBrDpK,EAonBlBqK,oBAAsB,WACpBrK,EAAKmB,SAAS,CAACP,KAAKX,OAAAmB,EAAA,EAAAnB,CAAA,GAAKD,EAAKa,MAAMD,KAAjB,CAAuB0J,kBAAkB,MAGxDxC,aAAayC,+BACfzC,aAAayC,8BAA+B,GAI9CvK,EAAKwK,uBAAyBtJ,WAAW,WACvClB,EAAKmB,SAAS,CAACP,KAAKX,OAAAmB,EAAA,EAAAnB,CAAA,GAAKD,EAAKa,MAAMD,KAAjB,CAAuB0J,iBAAkB,UAC3D,OA/nBatK,EAmoBlByK,8BAAgC,WAC9BzK,EAAKmB,SAAS,CAACP,KAAKX,OAAAmB,EAAA,EAAAnB,CAAA,GAAKD,EAAKa,MAAMD,KAAjB,CAAuB0J,iBAAkB,SAC5DxC,aAAa4C,WAAW,gCACxB5C,aAAa6C,0BAA2B,GAtoBxB3K,EAyoBlB4K,0BAA4B,WAC1B5K,EAAKmB,SAAS,CAACP,KAAKX,OAAAmB,EAAA,EAAAnB,CAAA,GAAKD,EAAKa,MAAMD,KAAjB,CAAuBgK,2BAA2B,MACrE1J,WAAW,WACTlB,EAAKmB,SAAS,CAACP,KAAKX,OAAAmB,EAAA,EAAAnB,CAAA,GAAKD,EAAKa,MAAMD,KAAjB,CAAuBoJ,sCAAsC,OAC/E,MA7oBahK,EA8qBlBsB,SAAW,SAAAG,GAAY,IACfD,EAAWxB,EAAKpD,MAAMuL,KAAtB3G,OAEFE,EAAQC,YAAUH,EAAQ,UAE9BA,EAAOI,KAAP3B,OAAAmB,EAAA,EAAAnB,CAAA,CACE7C,GAAIsE,GACDD,IAGLzB,EAAKpD,MAAM4L,OAAO,CAAChH,UAAS,CAACA,OAAQE,KAxrBrB1B,EAytBlB6K,cAAgB,WAUd,OAPG9J,IAASC,aAAa,IAAMhB,EAAKpD,MAAMuC,aAAa,GAC9C,IAAI0I,KAAKA,KAAKiD,MAAS,OAGpB,IAAIjD,MAGJkD,cAAcC,MAAM,KAAK,IAnuBrBhL,EAsuBlBiL,cAAgB,kBAAMjL,EAAKmB,SAAS,CAACP,KAAKX,OAAAmB,EAAA,EAAAnB,CAAA,GAAKD,EAAKa,MAAMD,KAAjB,CAAuBsK,SAAU,CAAC/E,MAAM,QAtuB/DnG,EA0uBlBmL,mBAAqB,SAACC,EAAgBC,GACpCD,EAAeC,SAAWA,EAG1B,IAAIC,EAAWC,SAASH,EAAeI,mBACvC,GAAGH,EAAuB,IAAXC,EAAgB,KACxBG,EAAWzL,EAAKpD,MAAMuL,KAAK/I,SAA3BqM,QACDC,EAAoBC,KAAKvH,MAAMiH,EAAWI,GAAWA,EAEtDC,IAAsBJ,IACvBF,EAAeI,kBAAoBE,EAGnC1L,EAAKmB,SAAS,CAACP,KAAKX,OAAAmB,EAAA,EAAAnB,CAAA,GAAKD,EAAKa,MAAMD,KAAjB,CAAuBsK,SAAU,CAClD/E,MAAM,EACNyF,QAAO,GAAA9B,OAAKsB,EAAenJ,KAApB,iCAAA6H,OAAwDwB,EAAxD,QAAAxB,OAAuEsB,EAAeI,mBAC7FK,OAAQ,WACN7L,EAAK8L,yBAAyB,WAAYV,EAAehO,GAAI,CAC3D6E,KAAMmJ,EAAenJ,KACrBqJ,WACA7K,UAAW2K,EAAeW,YAAYC,SAG1CC,YAAa,aAKnB,OAAOb,GApwBPpL,EAAKa,MAAQ,CACXvC,WAAY,GACZ+J,iBAAiB,EACjBzH,KAAM,CACJsL,mBAAmB,EACnBhB,SAAU,CACR/E,MAAM,EACNyF,QAAS,GACTC,OAAQ,aACRI,YAAa,MAMnBjM,EAAKmM,gCAAkCjL,WAAW,WAChDlB,EAAKmB,SAAS,CAACP,KAAKX,OAAAmB,EAAA,EAAAnB,CAAA,GAAKD,EAAKa,MAAMD,KAAjB,CAAuBsL,mBAAmB,OAC5D,KAnBalM,kFAsBCoM,GAQjB,IALInM,OAAOoM,KAAKD,EAAUjE,KAAK/I,UAAUjB,QAAU8B,OAAOoM,KAAKlM,KAAKvD,MAAMuL,KAAK/I,UAAUjB,QACvFgC,KAAKsH,qBAIJ2E,EAAUjE,KAAKjK,WAAaiC,KAAKvD,MAAMuL,KAAKjK,SAAS,CACtD,IACIoO,EAAwBC,EADxBC,GAAkB,EAIlBC,EAAatM,KAAK0K,gBAClB6B,EAAiBvM,KAAKvD,MAAMuL,KAAKwE,wBAAwBF,GAG7D,GAAGtM,KAAKvD,MAAMuL,KAAKjK,SAASC,OAAO,CACjCqO,GAAkB,EAClB,IAAI,IAAI5N,EAAI,EAAGA,EAAIuB,KAAKvD,MAAMuL,KAAKjK,SAASC,OAAQS,IAClD,GAAyC,SAAtCuB,KAAKvD,MAAMuL,KAAKjK,SAASU,GAAGiC,MAAiB,CAC9C2L,GAAkB,EAClB,MAKJ,GAAGA,EAAgB,CAGjB,IAFA,IAAII,EAAkB,EAEdhO,EAAI,EAAGA,EAAIuB,KAAKvD,MAAMuL,KAAKjK,SAASC,OAAQS,IAClDgO,GAAmBrB,SAASpL,KAAKvD,MAAMuL,KAAKjK,SAASU,GAAG4M,mBAU1D,GALEe,EADCK,GAAmB,GACI7L,IAAS8L,WAAW9L,IAAS+L,aAAaF,GAAiB,IAAQ,GAEhEA,EAAkB,WAG5CF,EAAgBJ,EAAyBI,MAExC,CACF,IAAIK,EAAkBhM,IAASgB,kBAAkB5B,KAAKvD,MAAMuC,YAAagB,KAAKvD,MAAMuL,KAAK1H,WAAW,GACpG6L,EAAyBX,KAAKvH,MAAM,IAAMwI,EAAkBG,UAI7DP,GAAkB,EAIvB,KAAIrM,KAAKvD,MAAMuL,KAAK6E,aAAeP,IAAetM,KAAKvD,MAAMuL,KAAK6E,YAAYhC,MAAM,KAAK,MACpFwB,IAAoBrM,KAAKU,MAAM2L,kBAChCrM,KAAKgB,SAAS,CAACqL,oBAC0B,qBAA/BrM,KAAKU,MAAM2L,iBACnBrM,KAAKvD,MAAM4L,OAAO,CAACwE,YAAaR,EAAkB,IAAI3E,UAAS7B,KAGhEuG,IAA0BpM,KAAKU,MAAM0L,uBAAuBpM,KAAKgB,SAAS,CAACoL,0BAE5ED,IAA2BI,KACzBO,MAAMX,IAA6D,kBAA3BA,IAC3C,CACC,IAAIK,EAA0B1M,OAAOyI,OAAO,GAAIvI,KAAKvD,MAAMuL,KAAKwE,yBAChEA,EAAwBF,GAAcH,EACtCnM,KAAKvD,MAAM4L,OAAO,CAACmE,6EAQzB1L,aAAad,KAAKqK,wBAClBvJ,aAAad,KAAKgM,oEAsHTe,EAASC,EAASC,GAE3BjN,KAAKvD,MAAMmM,uBAAuB,cAAc,GAGhD,IAAI7K,EAAWiC,KAAKvD,MAAMuL,KAAK+E,GAAS5E,QACpClJ,EAAWe,KAAKvD,MAAMuL,KAAK/I,SAG3BsC,EAAQC,YAAUzD,EAAU,YAG5BmP,EAAa,CACfjQ,GAAIsE,EACJO,KAAMkL,EAAQlL,KACdzD,MAAO2O,EAAQ3O,MACfgN,kBAAmB2B,EAAQ7B,SAC3BzK,MAAM,cAcR,GAZe,oBAAZqM,EACDG,EAAWC,KAAOH,EAAQG,KAG1BD,EAAWtB,YAAc,CACvBC,MAAOmB,EAAQ1M,UACf8M,IAAKxM,IAASiB,IAAImL,EAAQ1M,UAAW0M,EAAQ7B,WAM9CpN,EAASC,QAAsB,oBAAZ+O,EAA8B,CAClD,IAAIM,EAAqBtP,EAASA,EAASC,OAAS,GAElDiB,EAASqO,2BACT1M,IAASC,aAAamM,EAAQ1M,UAC5BM,IAAS2M,iBAAiBF,EAAmBzB,YAAYwB,IAAKC,EAAmBhC,kBAAmBpM,IACpG,GAAO,IAGTe,KAAKmB,SAASkM,EAAmBzB,YAAYwB,IAAKJ,EAAQ1M,WAK9DvC,EAAS0D,KAAKyL,GACd,IAAI1E,EAAQ1I,OAAAoB,EAAA,EAAApB,CAAA,GAAKiN,EAAUhP,GACQ,qBAAzBkP,IAERzE,EADuC,aAAZuE,EAAyB,oBAAsB,oCACzCE,GAIZ,IAApBlP,EAASC,QAA4B,oBAAZ+O,IAA+BvE,EAASlI,UAAYvC,EAAS,GAAG6N,YAAYC,OAGxG7L,KAAKvD,MAAM4L,OAAOG,EAAlB1I,OAAAoB,EAAA,EAAApB,CAAA,GAA8BiN,EAAUxL,0CAG5BwL,EAAS9P,GACrB,IAAIc,EAAWiC,KAAKvD,MAAMuL,KAAK+E,GAAS5E,QACpClJ,EAAWe,KAAKvD,MAAMuL,KAAK/I,SAE3BJ,EAAQd,EAASyG,UAAU,SAAAwI,GAAO,OAAIA,EAAQ/P,KAAOmO,SAASnO,KAG/DgC,EAASuO,wBAAoC,IAAV3O,GAAed,EAAS,IAAkB,oBAAZgP,IAClEhP,EAAS,GAAG6N,YAAYC,MAAQ9N,EAAS,GAAG6N,YAAYC,OAG1D9N,EAASgH,OAAOlG,EAAO,GAGpBI,EAASuO,wBAAsC,oBAAZT,IACpChP,EAAWiM,YAAoBjM,EAAUkB,EAAUe,KAAKvD,MAAMuL,KAAK3G,OAAQrB,KAAKvD,MAAMuL,KAAK1H,YAG7F,IAAIkI,EAAQ1I,OAAAoB,EAAA,EAAApB,CAAA,GAAKiN,EAAUhP,GAGvBA,EAASC,QAAsB,oBAAZ+O,IAA+BvE,EAASnH,OAAS,IAExErB,KAAKvD,MAAM4L,OAAOG,EAAlB1I,OAAAoB,EAAA,EAAApB,CAAA,GAA8BiN,EAAU9P,8CAaxB8P,EAAS9P,EAAImH,GAC7B,IAAIrG,EAAWiC,KAAKvD,MAAMuL,KAAK+E,GAAS5E,QAEpCtJ,EAAQd,EAASyG,UAAU,SAAAwI,GAAO,OAAIA,EAAQ/P,KAAOmO,SAASnO,KAG9DgO,EAAiBnL,OAAOyI,OAAO,GAAIxK,EAASc,IAChDd,EAASgH,OAAOlG,EAAO,GAEvBoM,EAAe5M,MAAQ+F,EAGvBrG,EAASgH,OAAOlG,EAAO,EAAGoM,GAE1BjL,KAAKvD,MAAM4L,OAAXvI,OAAAoB,EAAA,EAAApB,CAAA,GAAoBiN,EAAUhP,GAAW,CAACA,SAAUd,0CAGxC8P,EAASU,GAIrB,GAHAzN,KAAKgB,SAAS,CAACP,KAAKX,OAAAmB,EAAA,EAAAnB,CAAA,GAAKE,KAAKU,MAAMD,KAAjB,CAAuBiN,UAAU,MAGhDD,EAAOE,YAAX,CAEA,IAAI1Q,EAAKwQ,EAAO9O,YACZE,EAAQ4O,EAAOE,YAAY9O,MAC3Bd,EAAW,GAGfiC,KAAKvD,MAAMuL,KAAK+E,GAASa,QAAQ,SAAAZ,GAC/B,IAAIa,EAAO/N,OAAOyI,OAAO,GAAIyE,GACd,oBAAZD,IACDc,EAAKjC,YAAc9H,KAAKC,MAAMD,KAAKE,UAAUgJ,EAAQpB,eAEvD7N,EAAS0D,KAAKoM,KAGhB,IAQIC,EARAC,EAAoBhQ,EAASyG,UAAU,SAAAC,GAAE,OAAIA,EAAGxH,KAAOmO,SAASnO,KAChE+Q,EAAejQ,EAASgQ,GAG5B,GAAGlP,IAAUkP,EAKE,oBAAZhB,IAA+Be,EAAiB/P,EAAS,GAAG6N,YAAYC,OAG3E9N,EAASgH,OAAOgJ,EAAmB,GAGnChQ,EAASgH,OAAOlG,EAAO,EAAGmP,GAGvBhO,KAAKvD,MAAMuL,KAAK/I,SAASgP,sBAAoC,oBAAZlB,IAClDhP,EAAS,GAAG6N,YAAYC,MAAQiC,EAEhC/P,EAAWiM,YAAoBjM,EAAUiC,KAAKvD,MAAMuL,KAAK/I,SAAUe,KAAKvD,MAAMuL,KAAK3G,OAAQrB,KAAKvD,MAAMuL,KAAK1H,YAI7GN,KAAKvD,MAAM4L,OAAXvI,OAAAoB,EAAA,EAAApB,CAAA,GAAoBiN,EAAUhP,sDAGPgP,EAAS9P,EAAI2H,GACpC,IAAI7G,EAAWiC,KAAKvD,MAAMuL,KAAK+E,GAAS5E,QACpC9G,EAASrB,KAAKvD,MAAMuL,KAAK3G,OACzBpC,EAAWe,KAAKvD,MAAMuL,KAAK/I,SAE3BJ,EAAQd,EAASyG,UAAU,SAAAwI,GAAO,OAAIA,EAAQ/P,KAAOmO,SAASnO,KAGlE,KAAG4B,EAAQ,GAAX,CAGA,IAiDIqP,EAAiBC,EAejBpE,EAhEAkB,EAAiB,GA+BrB,GA9BAnL,OAAOoM,KAAKnO,EAASc,IAAQ+O,QAAQ,SAAAlP,GACnCuM,EAAevM,GAAOX,EAASc,GAAOH,KAK1B,oBAAZqO,GACE9B,EAAeI,oBAAsBzG,EAAOuG,UAC3CvK,IAASwN,aAAanD,EAAeW,YAAYC,MAAOjH,EAAOtE,aAGlE2K,EAAeW,YAAc9L,OAAOyI,OAAO,GAAI0C,EAAeW,cAGhE7N,EAASgH,OAAOlG,EAAO,GAIrBI,EAASqO,2BACC,IAAVzO,GACY,oBAAZkO,GACAnM,IAASC,aAAa+D,EAAOtE,UAAW2K,EAAeW,YAAYC,OAAO,GAAO,KAEjFxK,EAASrB,KAAKmB,SACZP,IAAS2M,iBAAiBxP,EAASc,EAAQ,GAAG+M,YAAYwB,IAAKrP,EAASc,EAAQ,GAAGwM,kBAAmBpM,GACtG2F,EAAOtE,YAMTrB,EAASqO,2BACC,IAAVzO,GACY,oBAAZkO,GACAnM,IAASC,aAAaoK,EAAeW,YAAYC,MAAOjH,EAAOtE,WAAW,GAAO,GAEjF,IAAI,IAAI7B,EAAI,EAAGA,EAAI4C,EAAOrD,OAAQS,IAG9B4C,EAAO5C,GAAG2J,cACVxH,IAASwN,aAAanD,EAAeW,YAAYC,MAAOxK,EAAO5C,GAAG8B,WAElEc,EAAO5C,GAAG8B,QAAUqE,EAAOtE,WAwBjC,GAjBe,oBAAZyM,IACDmB,EAAkB9C,SAASH,EAAeI,qBAAuBD,SAASxG,EAAOuG,UACjFgD,GAAoBvN,IAASwN,aAAanD,EAAeW,YAAYC,MAAOjH,EAAOtE,YAIrF2K,EAAenJ,KAAO8C,EAAO9C,KAC7BmJ,EAAeI,kBAAoBzG,EAAOuG,SAC3B,oBAAZ4B,EAA+B9B,EAAekC,KAAOvI,EAAOuI,KAC1DlC,EAAeW,YAAYC,MAAQjH,EAAOtE,UAG/CvC,EAASgH,OAAOlG,EAAO,EAAGoM,GAKvBjL,KAAKvD,MAAMuL,KAAK/I,SAASoP,uBAAyBH,GAAmBC,GAAkB,CAExF,IAAI,IAAI1P,EAAII,EAAQ,EAAGJ,EAAIV,EAASC,OAAQS,IAC1CV,EAASU,GAAKqB,OAAOyI,OAAO,GAAIxK,EAASU,IACzCV,EAASU,GAAGmN,YAAc9L,OAAOyI,OAAO,GAAIxK,EAASU,GAAGmN,aAI1D,IAAItL,EAAsB,IAAVzB,EAAc+F,EAAOtE,UAAYR,OAAOyI,OAAO,GAAIvI,KAAKvD,MAAMuL,KAAK1H,WACnFvC,EAAWiM,YAAoBjM,EAAUkB,EAAUoC,EAAQf,QAK3DyJ,EAAOjK,OAAAoB,EAAA,EAAApB,CAAA,GAAKiN,EAAU9P,GACP,oBAAZ8P,IACDhP,EAASc,GAAO+M,YAAYwB,IAAMxM,IAASiB,IAAI9D,EAASc,GAAO+M,YAAYC,MAAO9N,EAASc,GAAOwM,oBAKtG,IAAI7C,EAAQ1I,OAAAoB,EAAA,EAAApB,CAAA,GAAKiN,EAAUhP,GAIf,IAAVc,GACY,oBAAZkO,GACCnM,IAASwN,aAAapO,KAAKvD,MAAMuL,KAAK1H,UAAW2K,EAAeW,YAAYC,SAE7ErD,EAASlI,UAAY2K,EAAeW,YAAYC,OAIlD7L,KAAKvD,MAAM4L,OAAOG,EAAUuB,qDAIL9M,EAAImH,EAAK8G,GAAS,IAAA1F,EAAAxF,KACrCjC,EAAWiC,KAAKvD,MAAMuL,KAAKjK,SAASoK,QAEpCtJ,EAAQd,EAASyG,UAAU,SAAAwI,GAAO,OAAIA,EAAQ/P,KAAOmO,SAASnO,KAG9DgO,EAAiBnL,OAAOyI,OAAO,GAAIxK,EAASc,IAChDd,EAASgH,OAAOlG,EAAO,GAGvB,IAAIyP,EAAgBrD,EAAevK,MAoCnC,GAnCAuK,EAAevK,MAAQ0D,EAGZ,WAARA,GAAqB0I,MAAM1B,SAASF,MACrCD,EAAiBjL,KAAKgL,mBAAmBC,EAAgBC,IAIhD,gBAAR9G,IACD6G,EAAesD,mBAAqBzO,OAAOyI,OAAO,GAAdzI,OAAAmB,EAAA,EAAAnB,CAAA,GAC9BE,KAAKvD,MAAMuC,YADmB,CACNwP,GAAG,IAAI9G,MAAO+G,gBAI5C1Q,EAASQ,IAAI,SAAAyO,GACX,GAAqB,gBAAlBA,EAAQtM,OAA2BsM,EAAQ/P,KAAOA,EAAG,CAEtD,IAAIiO,EAAWtK,IAASgB,kBAAT9B,OAAAmB,EAAA,EAAAnB,CAAA,GACT0F,EAAK/I,MAAMuC,YADF,CACewP,GAAG,IAAI9G,MAAO+G,eAC1CzB,EAAQuB,oBACR,GAMF,OAJGvB,EAAQ9B,WAAUA,GAAYE,SAAS4B,EAAQ9B,WAGlD8B,EAAQtM,MAAQ,SACT8E,EAAKwF,mBAAmBgC,EAAS9B,GAG1C,OAAO8B,KAMA,SAAR5I,EAAe,CAChB,IAAI8G,EAAW,EACXC,EAAWC,SAASH,EAAeI,mBAUvC,GATGJ,EAAeC,WAAUA,GAAYE,SAASH,EAAeC,WAC7DD,EAAesD,qBAChBrD,GAAYtK,IAASgB,kBAAT9B,OAAAmB,EAAA,EAAAnB,CAAA,GACNE,KAAKvD,MAAMuC,YADL,CACkBwP,GAAG,IAAI9G,MAAO+G,eAC1CxD,EAAesD,oBACf,IAIDrD,EAAuB,IAAXC,GAAqC,WAAlBmD,EAA2B,KACtDhD,EAAWtL,KAAKvD,MAAMuL,KAAK/I,SAA3BqM,QACDC,EAAoBC,KAAKvH,MAAMiH,EAAWI,GAAWA,EAEtDC,IAAsBJ,GACvBnL,KAAKgB,SAAS,CAACP,KAAKX,OAAAmB,EAAA,EAAAnB,CAAA,GAAKE,KAAKU,MAAMD,KAAjB,CAAuBsK,SAAU,CAClD/E,MAAM,EACNyF,QAAO,GAAA9B,OAAKsB,EAAenJ,KAApB,sIAAA6H,OAA6JwB,EAA7J,gBAAAxB,OAAoL4B,EAApL,aACPG,OAAQ,WACNlG,EAAKmG,yBAAyB,WAAY1O,EAAI,CAC5C6E,KAAMmJ,EAAenJ,KACrBqJ,SAAUI,EACVjL,UAAW2K,EAAeW,YAAYC,SAG1CC,YAAa,eAMrB,IAAI/B,EAAU,CAAChM,SAAU,CAACd,IAE1Bc,EAASgH,OAAOlG,EAAO,EAAGoM,GAE1BjL,KAAKvD,MAAM4L,OAAO,CAACtK,YAAWgM,sCAoFrB2E,EAAMC,EAAQC,GAEvB,GAAGD,EAAO,CAER,IAAIE,EAAU,IAAMH,EACpB,GAAGE,GAA8D,oBAApCA,EAAgBE,gBAA+B,CAC1ED,GAAW,IAGX,IADA,IAAIE,GAAU,EAH4DC,EAIlDlP,OAAOmP,QAAQL,GAAvCM,EAAA,EAAAA,EAAAF,EAAAhR,OAAAkR,IAAwD,KAAAC,EAAAH,EAAAE,GAAAE,EAAAtP,OAAAuP,EAAA,EAAAvP,CAAAqP,EAAA,GAGnDJ,EAASA,GAAU,EACjBF,GAAW,IAEhBA,GANsDO,EAAA,GAMrC,IANqCA,EAAA,IAS1DpP,KAAKvD,MAAM6S,QAAQ7N,KAAKoN,OAGtB,CACF,IAAIU,EAAUvP,KAAKvD,MAAM6S,QAAQE,SAASC,SAAS5E,MAAM,KACzD0E,EAAQxK,QAAQ,EAAG,GACnB/E,KAAKvD,MAAM6S,QAAQ7N,KAAK8N,EAAQG,KAAK,sDAmBlBzS,EAAI0S,GACzB,IAAItO,EAASrB,KAAKvD,MAAMuL,KAAK3G,OAAO8G,QAEhCtJ,EAAQwC,EAAOmD,UAAU,SAAAoL,GAAG,OAAIA,EAAI3S,KAAOmO,SAASnO,KAExD,KAAG4B,EAAQ,GAAX,CAEA,IAAI+Q,EAAM9L,KAAKC,MAAMD,KAAKE,UAAU3C,EAAOxC,KAE3C+Q,EAAI9N,KAAO6N,EAAY7N,KACvB8N,EAAItP,UAAYqP,EAAYrP,UAC5BsP,EAAIrP,QAAUoP,EAAYpP,QAE1Bc,EAAO0D,OAAOlG,EAAO,EAAG+Q,GAExB5P,KAAKvD,MAAM4L,OAAO,CAAChH,UAAS,CAACA,OAAQpE,yCAG3BA,GACV,IAAIoE,EAASrB,KAAKvD,MAAMuL,KAAK3G,OAEzBxC,EAAQwC,EAAOmD,UAAU,SAAAoL,GAAG,OAAIA,EAAI3S,KAAOmO,SAASnO,KAExDoE,EAAO0D,OAAOlG,EAAO,GAErBmB,KAAKvD,MAAM4L,OAAO,CAAChH,UAAS,CAACA,OAAQpE,qCAoD9B,IAAA4S,EAAA7P,KAEP,GAA4C,SAAzCA,KAAKvD,MAAM6S,QAAQE,SAASC,SAAoB,CAEjD,IAGIK,EAAO/C,EAASgD,EAAWtQ,EAH3BuQ,EAAYC,aAAajQ,KAAKvD,MAAM+S,SAASU,QAIjD,OAAOF,EAAUG,MACf,IAAK,UACHpD,EAAU,kBACV+C,EAAQ,2BACRC,EAAY/P,KAAKoQ,WAAWvN,KAAK7C,KAAM,mBAAmB,GAC1DP,EAAoBO,KAAKvD,MAAMuL,KAAKqI,iCACpC,MACF,IAAK,QACHtD,EAAU,SACV+C,EAAQ,cACRC,EAAY/P,KAAKoQ,WAAWvN,KAAK7C,KAAM,UAAU,GACjD,MACF,QACE+M,EAAU,WACVgD,EAAY/P,KAAKoQ,WAAWvN,KAAK7C,KAAM,OAAO,GAC9CP,EAAoBO,KAAKvD,MAAMuL,KAAKvI,kBAGxC,OACE/C,EAAAC,EAAAC,cAACF,EAAAC,EAAM2T,SAAP,CAAgBC,SAAU7T,EAAAC,EAAAC,cAAC4T,GAAA,EAAD,OACxB9T,EAAAC,EAAAC,cAACwJ,GAAD,CACEnH,SAAUe,KAAKvD,MAAMuL,KAAK/I,SAC1BQ,kBAAmBA,EACnBtB,WAAY6B,KAAKU,MAAMvC,WACvBa,YAAagB,KAAKvD,MAAMuC,YACxBU,YAAaM,KAAKvD,MAAMuL,KAAKjK,SAASiC,KAAKvD,MAAMuL,KAAKjK,SAASC,OAAS,GACxE2B,aAAcK,KAAKyQ,WAAW5N,KAAK7C,KAAM+M,GACzC2D,WAAY1Q,KAAKmB,SACjBgP,KAAMH,EAAUG,KAChBQ,MAAOZ,EACPD,MAAOA,KAMf,GAC2C,UAAzC9P,KAAKvD,MAAM6S,QAAQE,SAASC,UAC5BzP,KAAKvD,MAAMuL,KAAK3G,OACjB,CAEC,IAKI0L,EAAS4D,EALTX,EAAYC,aAAajQ,KAAKvD,MAAM+S,SAASU,QAE3CC,EAASH,EAATG,KAIN,OAAOA,GACL,IAAK,UACHpD,EAAU,kBACV4D,EAAQ3Q,KAAKoQ,WAAWvN,KAAK7C,KAAM,mBAAmB,GACtD,MACF,IAAK,QACH+M,EAAU,SACV4D,EAAQ3Q,KAAKoQ,WAAWvN,KAAK7C,KAAM,UAAU,GAC7C,MACF,QACE+M,EAAU,WACV4D,EAAQ3Q,KAAKoQ,WAAWvN,KAAK7C,KAAM,QAAQ,GAG/C,IAAI/C,EAAK+S,EAAU/S,GAEf2T,EAAQ5Q,KAAKvD,MAAMuL,KAAK+E,GAExBlO,EAAQ+R,EAAMpM,UAAU,SAAAoL,GAAG,OAAIA,EAAI3S,GAAG2B,aAAe3B,IAErD2S,EAAMgB,EAAM/R,GAChB,GAAG+Q,EAAI,CAGL,IAYIiB,EAAYC,EAZZnB,EAAc,CAAC7N,KAAM8N,EAAI9N,MAsB7B,MArBY,YAATqO,EAAoBR,EAAYxC,KAAOyC,EAAIzC,KACzCwC,EAAYrP,UAAYsP,EAAIhE,YAAcgE,EAAIhE,YAAYC,MAAQ+D,EAAItP,UAC/D,UAAT6P,EACDR,EAAYpP,QAAUqP,EAAIrP,SAG1BoP,EAAYxE,SAAWyE,EAAIvE,kBAC3BsE,EAAYtR,MAAQuR,EAAIvR,OAKd,UAAT8R,GACDU,EAAa7Q,KAAKsD,YAAYT,KAAK7C,KAAM/C,GACzC6T,EAAkB9Q,KAAK+Q,uBAAuBlO,KAAK7C,KAAM/C,KAGzD4T,EAAa7Q,KAAKgR,cAAcnO,KAAK7C,KAAM+M,EAAS9P,GACpD6T,EAAkB9Q,KAAK2L,yBAAyB9I,KAAK7C,KAAM+M,EAAS9P,IAIpEP,EAAAC,EAAAC,cAACF,EAAAC,EAAM2T,SAAP,CAAgBC,SAAU7T,EAAAC,EAAAC,cAAC4T,GAAA,EAAD,OACxB9T,EAAAC,EAAAC,cAAC+J,GAAD,CACE1H,SAAUe,KAAKvD,MAAMuL,KAAK/I,SAC1B0Q,YAAaA,EACbsB,OAAQJ,EACR1R,cAAe2R,EACfH,MAAOA,EACPR,KAAMA,MAOhB,GAC2C,YAAzCnQ,KAAKvD,MAAM6S,QAAQE,SAASC,UAC5BzP,KAAKvD,MAAMuL,KAAK3G,OAEhB,OACE3E,EAAAC,EAAAC,cAACF,EAAAC,EAAM2T,SAAP,CAAgBC,SAAU7T,EAAAC,EAAAC,cAAC4T,GAAA,EAAD,OACxB9T,EAAAC,EAAAC,cAACgK,GAAD,CACEvF,OAAQrB,KAAKvD,MAAMuL,KAAK3G,OACxB+O,WAAYpQ,KAAKoQ,WAAWvN,KAAK7C,SAMzC,GAC2C,qBAAzCA,KAAKvD,MAAM6S,QAAQE,SAASC,UAC5BzP,KAAKvD,MAAMuL,KAAKkJ,gBAEhB,OACExU,EAAAC,EAAAC,cAACF,EAAAC,EAAM2T,SAAP,CAAgBC,SAAU7T,EAAAC,EAAAC,cAAC4T,GAAA,EAAD,OACxB9T,EAAAC,EAAAC,cAACiK,GAAD,CACE9I,SAAUiC,KAAKvD,MAAMuL,KAAKkJ,gBAC1BjS,SAAUe,KAAKvD,MAAMuL,KAAK/I,SAC1BQ,kBAAmBO,KAAKvD,MAAMuL,KAAKqI,iCACnCc,mBAAoBnR,KAAKvD,MAAMuL,KAAKmJ,mBACpCjS,cAAec,KAAKoR,kBAAkBvO,KAAK7C,KAAM,mBACjDb,cAAea,KAAK2L,yBAAyB9I,KAAK7C,KAAM,mBACxDL,aAAcK,KAAKyQ,WAAW5N,KAAK7C,KAAM,mBACzCX,gBAAiBW,KAAKgR,cAAcnO,KAAK7C,KAAM,mBAC/CzC,UAAWyC,KAAKqR,cAAcxO,KAAK7C,KAAM,mBACzCsR,2BAA4B,SAAApP,GAAM2N,EAAKpT,MAAM4L,OAAO,CAAC8I,mBAAoBjP,EAAEmC,OAAOkN,WAClFjS,mBAAoB,SAAArC,GAClB4S,EAAKO,WAAW,QAAQ,EAAM,CAACD,KAAM,UAAWlT,QAElDmT,WAAYpQ,KAAKoQ,WAAWvN,KAAK7C,SAtJlC,IA4JFqM,EAAmBrM,KAAKU,MAAxB2L,gBAGDlO,EAAU2B,OAAAmB,EAAA,EAAAnB,CAAA,GACTE,KAAKvD,MAAM0B,WACX6B,KAAKU,MAAMvC,YAGhB,OACEzB,EAAAC,EAAAC,cAACC,EAAA,EAAgBC,SAAjB,KACG,SAAAC,GAAQ,OACPL,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CACEO,UAAU,YACVsU,UAAW3B,EAAKhH,kBAChB4I,SAAS,IACTC,WAAW,SAET3U,GACAL,EAAAC,EAAAC,cAACF,EAAAC,EAAM2T,SAAP,CAAgBC,SAAU7T,EAAAC,EAAAC,cAAC4T,GAAA,EAAD,OACxB9T,EAAAC,EAAAC,cAACkK,GAAD,CACE/H,KAAM8Q,EAAKpT,MAAMuL,KAAKjJ,KACtB4S,aAAc9B,EAAKpT,MAAMwM,YACzBvM,EAAAC,EAAAC,cAACmK,GAAD,CACE/H,YAAa6Q,EAAKpT,MAAMuC,YACxBoK,oBAAqByG,EAAK3G,wBAC1B3I,QAASsP,EAAKpT,MAAMuL,KAAKzH,QACzBxC,SAAU8R,EAAKpT,MAAMuL,KAAKjK,SAC1BsD,OAAQwO,EAAKpT,MAAMuL,KAAK3G,OACxBpC,SAAU4Q,EAAKpT,MAAMuL,KAAK/I,SAC1BqB,UAAWuP,EAAKpT,MAAMuL,KAAK1H,UAC3BuM,YAAagD,EAAKpT,MAAMuL,KAAK6E,gBAKrCnQ,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAM+G,WAAS,GACbhH,EAAAC,EAAAC,cAACC,EAAA,EAAgB+U,SAAjB,CAA0BlP,MAAOmN,EAAKpT,MAAMuL,KAAK/I,UAC/CvC,EAAAC,EAAAC,cAACiV,EAAD,CACE9S,KAAM8Q,EAAKpT,MAAMuL,KAAKjJ,KACtBhB,SAAU8R,EAAKpT,MAAMuL,KAAKjK,SAC1BkB,SAAU4Q,EAAKpT,MAAMuL,KAAK/I,SAC1BD,YAAa6Q,EAAKpT,MAAMuC,YACxBS,kBAAmBoQ,EAAKpT,MAAMuL,KAAKvI,kBACnCtB,WAAYA,EACZe,cAAe2Q,EAAKuB,kBAAkBvO,KAAKgN,EAAM,YACjD1Q,cAAe0Q,EAAKlE,yBAAyB9I,KAAKgN,EAAM,YACxDlQ,aAAckQ,EAAKY,WAAW5N,KAAKgN,EAAM,YACzCzQ,qBAAsByQ,EAAKiC,yBAAyBjP,KAAKgN,GACzDxQ,gBAAiBwQ,EAAKmB,cAAcnO,KAAKgN,EAAM,YAC/CtS,UAAWsS,EAAKwB,cAAcxO,KAAKgN,EAAM,YACzCvQ,mBAAoB,SAAArC,GAClB4S,EAAKO,WAAW,QAAQ,EAAM,CAACnT,UAIR,aAAzB4S,EAAKpT,MAAMuL,KAAKjJ,KAGdrC,EAAAC,EAAAC,cAACF,EAAAC,EAAM0F,SAAP,KACE3F,EAAAC,EAAAC,cAAA,OAAKK,GAAG,cACNP,EAAAC,EAAAC,cAAA,SAAOmV,QAAQ,qBACZhV,EAAW,WAAa,qCAD3B,KAGAL,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CACEL,SAAUkN,EAAKvH,oBACf5F,MAAOmN,EAAKpT,MAAMuL,KAAKzH,QACvByR,aAAa,oBACb7O,UAAWhF,EAAWoC,WAG1B7D,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAM+G,WAAS,EAACC,QAAQ,iBAEnB5G,GACCL,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,KACED,EAAAC,EAAAC,cAACgH,EAAAjH,EAAD,CACEO,UAAU,0BACVmG,QAAS,WACPwM,EAAK7O,SAAS,CAACP,KAAKX,OAAAmB,EAAA,EAAAnB,CAAA,GAAK+P,EAAKnP,MAAMD,KAAjB,CAAuBsI,kBAAkB,OAE9D7K,MAAO,CAAC+T,aAAc,SACtBvV,EAAAC,EAAAC,cAACsV,GAAAvV,EAAD,CAAW0B,MAAM,YANnB,gBAYN3B,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,KACED,EAAAC,EAAAC,cAACgH,EAAAjH,EAAD,CACE0G,QAAS,WAAOwM,EAAKpT,MAAMwM,WAAW,YACtC1G,QAAQ,YACRlE,MAAM,WACN3B,EAAAC,EAAAC,cAACuV,GAAAxV,EAAD,MAJF,wBASCI,GACCL,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,KACED,EAAAC,EAAAC,cAACgH,EAAAjH,EAAD,CACEO,UAAU,0BACVmG,QAASwM,EAAKpF,0BACdvM,MAAO,CAAC+T,aAAc,SACtBvV,EAAAC,EAAAC,cAACwV,GAAAzV,EAAD,CAAe0B,MAAM,YAJvB,yBAWR3B,EAAAC,EAAAC,cAACyV,GAAA1V,EAAD,CACEM,GAAG,eACHqV,OAAO,SACPtM,KAAM6J,EAAKnP,MAAMD,KAAKsI,mBAAqBhM,EAC3CiF,QAAS,WAAO6N,EAAKrG,YAAY,eAAgB,YAEjD9M,EAAAC,EAAAC,cAAC2V,EAAD,CACElR,OAAQwO,EAAKpT,MAAMuL,KAAK3G,OACxBrC,YAAa6Q,EAAKpT,MAAMuC,YACxB0C,OAAQmO,EAAK/F,WACb9H,QAAS,WAAO6N,EAAKrG,YAAY,eAAgB,cAGrD9M,EAAAC,EAAAC,cAACyV,GAAA1V,EAAD,CACEO,UACE2S,EAAKnP,MAAMD,KAAKoJ,qCAChB,uCAAyC,KAE3CyI,OAAO,SACPtM,KAAM6J,EAAKnP,MAAMD,KAAKgK,4BAA8B1N,EACpDiF,QAAS,WAAO6N,EAAKrG,YAAY,wBAAyB,cAE1D9M,EAAAC,EAAAC,cAAC4V,EAAA,EAAD,CACEzU,SAAU8R,EAAKpT,MAAMuL,KAAKkJ,gBAC1BjS,SAAU4Q,EAAKpT,MAAMuL,KAAK/I,SAC1BQ,kBAAmBoQ,EAAKpT,MAAMuL,KAAKqI,iCACnCc,mBAAoBtB,EAAKpT,MAAMuL,KAAKmJ,mBACpCnP,QAAS,WAAO6N,EAAKrG,YAAY,wBAAyB,aAC1DtK,cAAe2Q,EAAKuB,kBAAkBvO,KAAKgN,EAAM,mBACjD1Q,cAAe0Q,EAAKlE,yBAAyB9I,KAAKgN,EAAM,mBACxDlQ,aAAckQ,EAAKY,WAAW5N,KAAKgN,EAAM,mBACzCxQ,gBAAiBwQ,EAAKmB,cAAcnO,KAAKgN,EAAM,mBAC/CtS,UAAWsS,EAAKwB,cAAcxO,KAAKgN,EAAM,mBACzCyB,2BAA4B,SAAApP,GAAM2N,EAAKpT,MAAM4L,OAAO,CAAC8I,mBAAoBjP,EAAEmC,OAAOkN,WAClFjS,mBAAoB,SAAArC,GAClB4S,EAAKO,WAAW,QAAQ,EAAM,CAACnT,YASvCoP,GACE3P,EAAAC,EAAAC,cAACF,EAAAC,EAAM2T,SAAP,CAAgBC,SAAU7T,EAAAC,EAAAC,cAAC4T,GAAA,EAAD,OACxB9T,EAAAC,EAAAC,cAACoK,GAAD,CACEwF,wBAAyBqD,EAAKpT,MAAMuL,KAAKwE,wBACzCH,gBAAiBwD,EAAKnP,MAAM2L,gBAC5BD,sBAAuByD,EAAKnP,MAAM0L,sBAClCE,WAAYuD,EAAKnF,mBAM1BmF,EAAKnP,MAAMwH,iBACVxL,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAM+G,WAAS,EAACC,QAAQ,WAAW8B,WAAW,WAAWvH,MAAO,CAACuU,UAAW,SAC1E/V,EAAAC,EAAAC,cAACgH,EAAAjH,EAAD,CACEM,GAAG,cACHoG,QAASwM,EAAKxG,WACd9G,QAAQ,aAHV,aAUNxF,GACAL,EAAAC,EAAAC,cAACF,EAAAC,EAAM2T,SAAP,CAAgBC,SAAU7T,EAAAC,EAAAC,cAAC4T,GAAA,EAAD,OACxB9T,EAAAC,EAAAC,cAAC8V,GAAA,KAAD,CAAMzV,GAAG,iBAAiB0V,GAAG,YAAYC,aAAW,WAAW9C,MAAM,YACnEpT,EAAAC,EAAAC,cAACsK,GAAD,OAEFxK,EAAAC,EAAAC,cAACqK,GAAD,CACEtB,QAASkK,EAAKpT,MAAMkJ,QACpBkN,WAAYhD,EAAKpT,MAAMoW,WACvBvD,QAASO,EAAKpT,MAAM6S,QACpBwD,SAAUjD,EAAKpT,MAAMqW,SACrB9K,KAAML,aAAaoL,YAAclD,EAAKpT,MAAMuL,KAAO,GACnDK,OAAQV,aAAaoL,YAAclD,EAAKpT,MAAM4L,OAAS,MAI7D3L,EAAAC,EAAAC,cAACoW,GAAArW,EAAD,CACEsW,UAAU,QACVC,IACGrD,EAAKpT,MAAMqW,WACXjD,EAAKnP,MAAMD,KAAKsL,oBAChB8D,EAAKnP,MAAMD,KAAK0J,mBAChBxC,aAAa6C,2BACbqF,EAAKpT,MAAM0W,aAEdC,cAAY,EAACC,eAAa,GAE1B3W,EAAAC,EAAAC,cAAC0W,GAAD,CACE3N,QAASkK,EAAKpT,MAAMkJ,QACpBL,QAASuK,EAAK3F,oBACd/E,sBAAuBwC,aAAayC,6BACpCjE,kBAAmB0J,EAAKvF,iCAG3BvN,GAAqC,aAAzB8S,EAAKpT,MAAMuL,KAAKjJ,MAC3BrC,EAAAC,EAAAC,cAACF,EAAAC,EAAM2T,SAAP,CAAgBC,SAAU7T,EAAAC,EAAAC,cAAC4T,GAAA,EAAD,OACxB9T,EAAAC,EAAAC,cAACwK,GAAD,CACE/D,QAASwM,EAAKO,WAAWvN,KAAKgN,EAAM,OAAO,MAKjDnT,EAAAC,EAAAC,cAAC2W,GAAA5W,EAAD,CACE6W,aAAc,CAACC,SAAU,SAAUC,WAAY,QAC/C1N,KAAM6J,EAAKnP,MAAMD,KAAKsK,SAAS/E,KAC/B2N,iBAAkB,IAClB3R,QAAS6N,EAAK/E,cACd8I,aAAc,CAACC,mBAAoB,cACnCpI,QAAS/O,EAAAC,EAAAC,cAAA,QAAMK,GAAG,cAAc4S,EAAKnP,MAAMD,KAAKsK,SAASU,SACzDC,OAAQ,CACNhP,EAAAC,EAAAC,cAACgH,EAAAjH,EAAD,CAAQ+B,IAAI,SAASL,MAAM,YAAYyV,KAAK,QAC1CzQ,QAAS,WACPwM,EAAKnP,MAAMD,KAAKsK,SAASW,SACzBmE,EAAK/E,iBAEPiJ,SAAUlE,EAAKnP,MAAMD,KAAKsK,SAASe,aAAe,KAEpDpP,EAAAC,EAAAC,cAACwG,EAAAzG,EAAD,CACE+B,IAAI,QACJkU,aAAW,QACXvU,MAAM,UACNgF,QAASwM,EAAK/E,eAEdpO,EAAAC,EAAAC,cAACkJ,GAAAnJ,EAAD,oBArpCeqI,mIC9BZgP,sBACnB,SAAAA,EAAYvX,GAAM,IAAAoD,EAAA,OAAAC,OAAAmU,EAAA,EAAAnU,CAAAE,KAAAgU,IAChBnU,EAAAC,OAAAoU,EAAA,EAAApU,CAAAE,KAAAF,OAAAqU,EAAA,EAAArU,CAAAkU,GAAA7T,KAAAH,KAAMvD,KAMR2F,OAAS,kBACPgS,EAAAzX,EAAAC,cAAA,QAAMM,UAAU,eACdkX,EAAAzX,EAAAC,cAAA,SACEM,UAAU,aACVmX,IAAK,SAAAC,GAAK,OAAIzU,EAAK0U,WAAaD,GAChCnE,KAAK,QACLyC,aAAW,QACXlQ,MAAO7C,EAAKpD,MAAMiG,MAClBC,SAAU,SAAAT,GAAMrC,EAAKpD,MAAMkG,SAAST,EAAEmC,OAAO3B,UAC/C0R,EAAAzX,EAAAC,cAAA,OACE4X,MAAO3U,EAAKpD,MAAMgY,GAAK,GAAK,GAC5BC,OAAQ7U,EAAKpD,MAAMgY,GAAK,GAAK,GAC7BpR,QAAS,WAAOxD,EAAK0U,WAAWI,UAE/B9U,EAAKpD,MAAMgY,GACVL,EAAAzX,EAAAC,cAAA,QAAM4X,MAAM,KAAKE,OAAO,KAAKE,GAAG,IAAIC,GAAG,IAAI3W,MAAO,CAAC4W,KAAMjV,EAAKpD,MAAMiG,SAEpE0R,EAAAzX,EAAAC,cAAA,UAAQmY,GAAG,KAAKC,GAAG,KAAKC,EAAE,QAAQH,KAAMjV,EAAKpD,MAAMiG,WAtBzD7C,EAAKa,MAAQ,GAEbb,EAAK0U,WAAalO,IAAM6O,YAJRrV,6BADqBmF,sECJzC,IAAAmQ,EAAA1O,EAAA,GAAA2O,EAAA3O,EAAA4O,EAAAF,GAAAG,EAAA7O,EAAA,KAAA8O,EAAA9O,EAAA,KAIM+O,GAJN/O,EAAA,KAI0BJ,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAvE,EAAA,GAAAuE,EAAAvE,EAAA,MAAAwE,KAAAD,EAAA5D,KAAA,eACrC4S,EAAmBpP,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAvE,EAAA,IAAAuE,EAAAvE,EAAA,MAAAwE,KAAAD,EAAA5D,KAAA,cAsC3BG,IAnCI,SAAAvG,GAAK,OACtB2Y,EAAAzY,EAAAC,cAAC2Y,EAAA,EAAgBzY,SAAjB,KACG,SAAAmC,GAAQ,OACPmW,EAAAzY,EAAAC,cAAC2Y,EAAA,EAAgBzY,SAAjB,KACG,SAAAC,GAAQ,OACPqY,EAAAzY,EAAAC,cAACwY,EAAAzY,EAAM2T,SAAP,CAAgBC,SAAU6E,EAAAzY,EAAAC,cAAC0Y,EAAA,EAAD,OACvBvY,EACCqY,EAAAzY,EAAAC,cAAC6Y,EAAD,CACE1W,KAAME,EAASyW,cAAgB,MAAQ,MACvChT,MAAOjG,EAAMiG,MACbC,SAAUlG,EAAMkG,SAChBgT,MACElZ,EAAMmZ,QACNnZ,EAAMoZ,QACNpZ,EAAMqZ,gBAIVV,EAAAzY,EAAAC,cAAC4Y,EAAD,CACE7S,SAAUlG,EAAMkG,SAChBD,MAAOjG,EAAMiG,MACbsP,aAAcvV,EAAMuV,aACpB4D,OAAQnZ,EAAMmZ,OACdC,OAAQpZ,EAAMoZ,OACd3S,aAAczG,EAAMyG,aACpBjE,SAAUA,4CCjC1BwH,EAAAsP,EAAAC,EAAA,sBAAAC,IAAAxP,EAAAsP,EAAAC,EAAA,sBAAAE,IAAAzP,EAAAsP,EAAAC,EAAA,sBAAAG,IAAA,IAAAC,EAAA3P,EAAA,KAAA4P,EAAA5P,EAAA,KAIO,SAASwP,EAAkBjJ,GAAuC,IAA9BsJ,EAA8BC,UAAAvY,OAAA,QAAA6H,IAAA0Q,UAAA,IAAAA,UAAA,GACnEZ,EAAQ,GAaZ,MAZoB,KAAjB3I,EAAQlL,MAAa6T,EAAMlU,KAAK,SAEZ,KAArBuL,EAAQ7B,UACR2B,MAAME,EAAQ7B,WACd6B,EAAQ7B,SAAW,MACnB6B,EAAQ7B,UAAY,IACpBwK,EAAMlU,KAAK,YACT6U,KACyB,KAAxBtJ,EAAQ1M,UAAUmI,GAAYqE,MAAME,EAAQ1M,UAAUmI,KAAIkN,EAAMlU,KAAK,eAC7C,KAAxBuL,EAAQ1M,UAAUoI,GAAYoE,MAAME,EAAQ1M,UAAUoI,KAAIiN,EAAMlU,KAAK,eAGvEkU,EAAM3X,OAAe,CAACwY,OAAO,EAAOtS,OAAQyR,GACnC,CAACa,OAAO,GAIf,SAASN,EAAgBjZ,EAAImH,GAClC,QAAU,SAAPnH,GAAiBmH,EAAIpG,OAAS,OACvB,aAAPf,KAAuB6P,MAAM1I,IAAgB,KAARA,GAAeA,EAAM,MAC1DE,IAAgBC,KAAKH,IAMnB,SAAS+R,EAAgB3T,GAE9B,IAAImT,EAAQ,GASZ,MARsB,KAAnBnT,EAAUV,MAAa6T,EAAMlU,KAAK,SACR,KAA1Be,EAAUlC,UAAUmI,GAAYqE,MAAMtK,EAAUlC,UAAUmI,IAAMjG,EAAUlC,UAAUmI,EAAI,IAAGkN,EAAMlU,KAAK,eAC5E,KAA1Be,EAAUlC,UAAUoI,GAAYoE,MAAMtK,EAAUlC,UAAUoI,IAAMlG,EAAUlC,UAAUoI,EAAI,IAAGiN,EAAMlU,KAAK,eAC9E,KAAxBe,EAAUjC,QAAQkI,GAAYqE,MAAMtK,EAAUjC,QAAQkI,IAAMjG,EAAUjC,QAAQkI,EAAI,IAAGkN,EAAMlU,KAAK,aACxE,KAAxBe,EAAUjC,QAAQmI,GAAYoE,MAAMtK,EAAUjC,QAAQmI,IAAMlG,EAAUjC,QAAQmI,EAAI,IAAGiN,EAAMlU,KAAK,YAChGb,IAASC,aAAa2B,EAAUlC,UAAWkC,EAAUjC,SAAS,GAAO,IAAOoV,EAAMlU,KAAK,WAGvFkU,EAAM3X,OAAe,CAACwY,OAAO,EAAOtS,OAAQyR,GACnC,CAACa,OAAO,4ICzCD9Q,6MACnB+Q,eAAiB,SAAAC,GACZA,EAAIf,MACLgB,QAAQC,IAAIF,GAKd3V,WAAW,WACNuI,OAAOC,QAAQ,yLAChB1J,EAAKpD,MAAMkJ,QAAQ+Q,EAAIG,UAExB,OAGLzU,OAAS,kBACPgS,EAAAzX,EAAAC,cAACka,EAAAna,EAAD,CACEoa,SAAS,4EACTC,WAAW,UACXC,UAAWpX,EAAK4W,eAChBS,UAAWrX,EAAK4W,eAChBrU,OAAQvC,EAAKpD,MAAM2F,uCArBiB4C,qECF3B,SAASiL,EAAakH,GACnC,IAAIC,EAAkBD,EAAeE,OAAO,GAAGxM,MAAM,KACjDmF,EAAY,GAFkCsH,GAAA,EAAAC,GAAA,EAAAC,OAAA3R,EAAA,IAGlD,QAAA4R,EAAAC,EAAiBN,EAAjBO,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAiC,KAC3BS,EAD2BN,EAAA/U,MACVmI,MAAM,KAC3BmF,EAAU+H,EAAS,IAAMA,EAAS,IALc,MAAAC,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,GAQlD,OAAOxH,EATTvJ,EAAAsP,EAAAC,EAAA,sBAAA/F,mQCUqBiI,cACnB,SAAAA,EAAYzb,GAAM,IAAAoD,EAIZsN,EACJ,GALgBrN,OAAAC,EAAA,EAAAD,CAAAE,KAAAkY,IAChBrY,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoY,GAAA/X,KAAAH,KAAMvD,KAmBR2F,OAAS,kBACP1F,EAAAC,EAAAC,cAACF,EAAAC,EAAM0F,SAAP,KACE3F,EAAAC,EAAAC,cAACub,EAAAxb,EAAD,CAAaM,GAAG,kCAAhB,OACO4C,EAAKpD,MAAMuQ,QAAQlL,MAAQ,MAAQjC,EAAKpD,MAAMuQ,QAAQlL,MAE7DpF,EAAAC,EAAAC,cAACwb,EAAAzb,EAAD,KACED,EAAAC,EAAAC,cAACyb,EAAA1b,EAAD,KACG,CAAC,SAAU,UAAW,YAAa,WAAY,SAAU,WAAY,UAAU4B,IAAI,SAAC+Z,EAAK7Z,GAAN,OAClF/B,EAAAC,EAAAC,cAAC2b,EAAA5b,EAAD,CACE+B,IAAKD,EACL+Z,QACE9b,EAAAC,EAAAC,cAAC6b,EAAA9b,EAAD,CACE4U,QAAS1R,EAAKa,MAAMyM,KAAK1O,GACzBkE,SAAU9C,EAAK6Y,aAAa7V,KAAlB/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,IAA6BpB,KAG3Cka,MAAOL,QAKf5b,EAAAC,EAAAC,cAACgc,EAAAjc,EAAD,KACED,EAAAC,EAAAC,cAACgH,EAAAjH,EAAD,CAAQ0B,MAAM,UAAUgF,QAAS,kBAAMxD,EAAKpD,MAAMkU,UAAlD,WArCD9Q,EAAKpD,MAAMuQ,SAAWnN,EAAKpD,MAAMuQ,QAAQG,KAAMA,EAAOtN,EAAKpD,MAAMuQ,QAAQG,SACxE,CACFA,EAAO,GACP,IAAI,IAAI1O,EAAI,EAAGA,EAAI,EAAGA,IAAK0O,EAAK1L,MAAK,GARvB,OAUhB5B,EAAKa,MAAQ,CAACyM,QAVEtN,4EAaLpB,EAAGyD,GAAE,IACXiL,EAAQnN,KAAKU,MAAbyM,KACLA,EAAK1O,GAAKyD,EAAEmD,cAAckM,QAC1BvR,KAAKgB,SAAS,CAACmM,SACfnN,KAAKvD,MAAMoc,KAAK1L,UAlBmCnI,wCCsOxC8T,IAzOS,SAAAC,GAAgB,gBAAAC,GAEpC,SAAAF,EAAYrc,GAAM,IAAAoD,EAIZ8P,EACJ,GALgB7P,OAAAC,EAAA,EAAAD,CAAAE,KAAA8Y,IAChBjZ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgZ,GAAA3Y,KAAAH,KAAMvD,KAkLR2U,kBAAoB,SAAAhN,GAClBvE,EAAKmB,SAAS,CAAC2O,YAAY7P,OAAAmB,EAAA,EAAAnB,CAAA,GAAKD,EAAKa,MAAMiP,YAAjB,CAA8BtR,MAAO+F,OApL/CvE,EAwLlBoZ,iBAAmB,SAAA7U,GAAG,OAAIvE,EAAKmB,SAAS,CAACP,KAAKX,OAAAmB,EAAA,EAAAnB,CAAA,GAAKD,EAAKa,MAAMD,KAAjB,CAAuByY,gBAAiB9U,OAxLnEvE,EA0LlBsZ,iBAAmB,SAAChM,GAClBtN,EAAKmB,SAAS,CAAC2O,YAAY7P,OAAAmB,EAAA,EAAAnB,CAAA,GAAKD,EAAKa,MAAMiP,YAAjB,CAA8BxC,YA3LxCtN,EA8LlBuC,OAAS,WACP,IAAIgX,EACF1c,EAAAC,EAAAC,cAACmc,EAADjZ,OAAAyI,OAAA,GACM1I,EAAKpD,MADX,CAEEkT,YAAa9P,EAAKa,MAAMiP,YACxBxR,WAAY0B,EAAKa,MAAMvC,WACvB2X,gBAAejW,EAAKpD,MAAM0B,YAAa0B,EAAKpD,MAAM0B,WAAWC,WAC7Dib,cAAexZ,EAAK+C,kBAAkBC,KAAvB/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KACfyZ,kBAAmBzZ,EAAKoD,sBAAsBJ,KAA3B/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KACnBX,cAAeW,EAAKuR,kBACpBpQ,SAAUnB,EAAKmB,SAAS6B,KAAd/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KACV0Z,eAAgB1Z,EAAKoZ,iBAAiBpW,KAAtB/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KAAiC,MAIrD,GAAuB,YAApBA,EAAKpD,MAAM0T,KAAmB,KAC1B+I,EAAmBrZ,EAAKa,MAAMD,KAA9ByY,gBAEL,OACExc,EAAAC,EAAAC,cAACF,EAAAC,EAAM0F,SAAP,KACG+W,EACD1c,EAAAC,EAAAC,cAAC4c,EAAA7c,EAAD,CACEqJ,KAAMkT,EACNlX,QAASnC,EAAKoZ,iBAAiBpW,KAAtB/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KAAiC,GAC1C4Z,kBAAgB,kCAEhB/c,EAAAC,EAAAC,cAAC8c,EAAD,CACE1M,QAASnN,EAAKa,MAAMiP,YACpBgB,MAAO9Q,EAAKoZ,iBAAiBpW,KAAtB/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KAAiC,GACxCgZ,KAAMhZ,EAAKsZ,qBAOrB,OAAOC,GA7NJvZ,EAAKpD,MAAMkT,YACZA,EAAc9P,EAAKpD,MAAMkT,gBAGvB,CACFA,EAAc,CAAC7N,KAAM,IADnB,IA2CIzD,EAxCA8R,EAAStQ,EAAKpD,MAAd0T,KAIF7E,EAAUzL,EAAKpD,MAAMwC,SAASqM,SAAW,EAE7C,GAAY,YAAT6E,EAAmB,CACpBR,EAAYxC,KAAO,GACnB,IAAI,IAAI1O,EAAI,EAAGA,EAAI,EAAGA,IAAKkR,EAAYxC,KAAK1L,MAAK,OAE/C,CAGF,IAAInB,EACAZ,EAAcG,EAAKpD,MAAMiD,YAE3BY,EADCZ,GAAeA,EAAYkM,YAChBhL,IAAS2M,iBACnB7N,EAAYkM,YAAYwB,IACxB1N,EAAY2L,kBACZxL,EAAKpD,MAAMwC,UAKVY,EAAKpD,MAAMuC,cAAgBa,EAAKpD,MAAMuC,YAAY2a,WACvC/Y,IAASqD,MAAMrD,IAASiB,IAAIhC,EAAKpD,MAAMuC,YAAa,IAAKsM,GAGtD,CAAC7C,EAAG,GAAIC,EAAG,EAAGkR,IAAI,EAAMC,iBAAiB,GAG5DlK,EAAYrP,UAAYA,EAGH,UAApBT,EAAKpD,MAAM0T,KACZR,EAAYpP,QAAUK,IAASqD,MAAMrD,IAASiB,IAAI8N,EAAYrP,UAAW,IAAKgL,IAG9EqE,EAAYxE,SAAW,GAIrB9M,EADyC,qBAAjCwB,EAAKpD,MAAMgD,kBACXI,EAAKpD,MAAMwC,SAAS6a,cAAcja,EAAKpD,MAAMgD,mBAE1C,UAEbkQ,EAAYtR,MAAQA,GA1DR,OA8DhBwB,EAAKa,MAAQ,CACXiP,cACAoK,2BAA2B,EAC3Bta,kBAAmBI,EAAKpD,MAAMgD,kBAC9BtB,WAAY,GACZsC,KAAM,CAACyY,iBAAiB,IAnEVrZ,EAFkB,OAAAC,OAAAka,EAAA,EAAAla,CAAAgZ,EAAAE,GAAAlZ,OAAAma,EAAA,EAAAna,CAAAgZ,EAAA,EAAApa,IAAA,qBAAAgE,MAAA,WA6ElC,GACsB,YAApB1C,KAAKvD,MAAM0T,MACkB,KAA7BnQ,KAAKU,MAAMiP,YAAYlH,GACvBzI,KAAKU,MAAMqZ,2BACX/Z,KAAKvD,MAAMwC,SAASib,sBACpBla,KAAKvD,MAAMiD,cACVM,KAAKvD,MAAM0d,kBACb,CACC,IAAIC,EAAqBxZ,IAAS2M,iBAChCvN,KAAKvD,MAAMiD,YAAYkM,YAAYwB,IACnCpN,KAAKvD,MAAMiD,YAAY2L,kBACvBrL,KAAKvD,MAAMwC,UAGb,GACyC,KAAvCe,KAAKU,MAAMiP,YAAYrP,UAAUmI,IAChC7H,IAASwN,aAAagM,EAAoBpa,KAAKU,MAAMiP,YAAYrP,WACnE,CACC,IAAIqP,EAAW7P,OAAAmB,EAAA,EAAAnB,CAAA,GAAOE,KAAKU,MAAMiP,YAAlB,CAA+BrP,UAAW8Z,IAGzD,GAAuB,UAApBpa,KAAKvD,MAAM0T,KAAiB,CAC7B,IAAIkK,EAAmBzZ,IAASqD,MAAMrD,IAASiB,IAAIuY,EAAoB,IAAKpa,KAAKvD,MAAMwC,SAASqM,SAChGqE,EAAYpP,QAAU8Z,EAGxBra,KAAKgB,SAAS,CAAC2O,iBAOnB,GACsB,UAApB3P,KAAKvD,MAAM0T,OACVnQ,KAAKvD,MAAMkT,aAC4B,qBAAjC3P,KAAKU,MAAMjB,mBACsB,qBAAjCO,KAAKvD,MAAMgD,mBAClBO,KAAKvD,MAAMwC,SAAS6a,cACrB,CAEC,IAAInK,EAAc3P,KAAKU,MAAMiP,YAEzBmK,EAAgB9Z,KAAKvD,MAAMwC,SAAS6a,cACpCra,EAAoBO,KAAKvD,MAAMgD,kBAGhCqa,EAAc9b,QAAUyB,IAAmBA,EAAoB,GAElEkQ,EAAYtR,MAAQyb,EAAcra,GAGlCkQ,EAAYtR,MAAQsR,EAAYtR,MAAQsR,EAAYtR,MAAQ,UAE5D2B,KAAKgB,SAAS,CAAC2O,cAAalQ,sBAI9B,GACsB,YAApBO,KAAKvD,MAAM0T,MACXnQ,KAAKU,MAAMiP,YAAYrP,UAAUuZ,iBACjC7Z,KAAKvD,MAAMuC,aACXgB,KAAKvD,MAAMwC,SAASqM,QACrB,KAGMqE,EAAe3P,KAAKU,MAApBiP,YACArE,EAAWtL,KAAKvD,MAAMwC,SAAtBqM,QACLqE,EAAYrP,UAAYM,IAASqD,MAAMrD,IAASiB,IAAI7B,KAAKvD,MAAMuC,YAAa,IAAKsM,GAG1D,UAApBtL,KAAKvD,MAAM0T,OACZR,EAAYpP,QAAUK,IAASqD,MAAMrD,IAASiB,IAAI8N,EAAYrP,UAAW,IAAKgL,IAGhFtL,KAAKgB,SAAS,CAAC2O,mBAxJiB,CAAAjR,IAAA,oBAAAgE,MAAA,SA6JlBzF,EAAIiF,GACpB,IAAIkC,EAAMlC,EAAEmC,OAAO3B,MACfwT,YAAgBjZ,EAAImH,IACxBpE,KAAKgB,SAAS,CACZ2O,YAAY7P,OAAAmB,EAAA,EAAAnB,CAAA,GAAKE,KAAKU,MAAMiP,YAAjB7P,OAAAoB,EAAA,EAAApB,CAAA,GAA+B7C,EAAKmH,IAC/CjG,WAAW2B,OAAAmB,EAAA,EAAAnB,CAAA,GAAKE,KAAKU,MAAMvC,WAAjB2B,OAAAoB,EAAA,EAAApB,CAAA,GAA8B7C,GAAK,QAlKb,CAAAyB,IAAA,wBAAAgE,MAAA,SAuKdgC,EAASzH,EAAImH,GACjC,IAAIoE,EAAW,CAACmH,YAAa3P,KAAKU,MAAMiP,YAAaxR,WAAY6B,KAAKU,MAAMvC,YAElE,WAAPlB,EAAiBuL,EAASmH,YAAYjL,GAAWN,EAC/CoE,EAASmH,YAAYjL,GAASzH,GAAMmH,EAIzCoE,EAASrK,WAAWuG,EAAUzH,EAAGqd,gBAAiB,EAClD9R,EAASuR,2BAA4B,EAErC/Z,KAAKgB,SAASwH,OAlLoBsQ,EAAA,CACR9T,uPCC1BuV,UAA0BlU,IAAMC,KAAK,kBAAMG,EAAAvE,EAAA,IAAAwE,KAAAD,EAAA5D,KAAA,eAC3C2X,EAA0BnU,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAvE,EAAA,GAAAuE,EAAAvE,EAAA,MAAAwE,KAAAD,EAAA5D,KAAA,cAM5B/D,cACnB,SAAAA,EAAYrC,GAAM,IAAAoD,EAAA,OAAAC,OAAA2a,EAAA,EAAA3a,CAAAE,KAAAlB,IAChBe,EAAAC,OAAA4a,EAAA,EAAA5a,CAAAE,KAAAF,OAAA6a,EAAA,EAAA7a,CAAAhB,GAAAqB,KAAAH,KAAMvD,KACDiE,MAAQ,CAACka,SAAS,GAFP/a,wEAKV,IAOFqL,EAAU2P,EAgBRC,EAYFC,EAnCEvV,EAAAxF,KAGFgb,EAAchb,KAAKU,MAAMka,SAA+B,aAApB5a,KAAKvD,MAAMsC,KAE9Cob,EAAqBna,KAAKvD,MAA1B0d,kBAEyBc,EAAgB,GAC1Cd,IAE0BjP,EAAzBlL,KAAKvD,MAAM+B,IAAI0M,SAAqBE,SAASpL,KAAKvD,MAAM+B,IAAI0M,UAC/C,EACY,gBAAzBlL,KAAKvD,MAAM+B,IAAIkC,QAChBwK,GAAYtK,IAASgB,kBAAT9B,OAAAob,EAAA,EAAApb,CAAA,GACNE,KAAKvD,MAAMuC,YADL,CACkBwP,GAAG,IAAI9G,MAAO+G,eAC1CzO,KAAKvD,MAAM+B,IAAI+P,oBACf,KAIJsM,EAAiB3P,GACGlL,KAAKvD,MAAM+B,IAAI6M,oBAAmBwP,EAAiB7a,KAAKvD,MAAM+B,IAAI6M,mBAIlDyP,EAAR,SAAzB9a,KAAKvD,MAAM+B,IAAIkC,MAAmC,IAC/B,IAAMma,EAAiB7a,KAAKvD,MAAM+B,IAAI6M,kBAG5D4P,EAAgB,CACdE,gBAAe,kDAAAxR,OAAoDmR,EAApD,mBAAAnR,OAAoFmR,EAApF,0BAMnB,GAAGE,EAAY,KAUT7K,EAVSiL,EACSpb,KAAKvD,MAAtB+B,EADQ4c,EACR5c,IAAKS,EADGmc,EACHnc,SACLhC,EAAMuB,EAANvB,GAGD0S,EAAc,CAAC7N,KADoBtD,EAAlCsD,KACoBqJ,SADc3M,EAA5B6M,kBAC2ChN,MADfG,EAATH,OAG1BwS,EAAa7Q,KAAKvD,MAAM4C,gBAAgBwD,KAAK7C,KAAM/C,GACnDkC,EAAgBa,KAAKvD,MAAM0C,cAAc0D,KAAK7C,KAAM/C,GAGrDkd,GACDhK,EAAO,UACPR,EAAYxC,KAAO3O,EAAI2O,MAGvBwC,EAAYrP,UAAY9B,EAAIoN,YAAYC,MAG1CkP,EAAmB,CAAC9b,WAAU0Q,cAAasB,OAAQJ,EAAY1R,gBAAegR,OAAMlT,UAElF,KAAAoe,EAIErb,KAAKvD,MACTse,EAAmB,CACjBvc,IANA6c,EAEA7c,IAIKO,KANLsc,EAEKtc,KAIMob,kBANXkB,EAEWlB,kBAImBlb,SAN9Boc,EAE8Bpc,SAIUD,YANxCqc,EAEwCrc,YAKxCM,mBAPA+b,EAGA/b,mBAIoBD,gBAPpBgc,EAGoBhc,gBAIiBD,qBAPrCic,EAGqCjc,sBAQzC,OACEkc,EAAA3e,EAAAC,cAAC2e,EAAA5e,EAAD,CAASgB,QAASqC,KAAKvD,MAAMgB,SAASG,UACpC0d,EAAA3e,EAAAC,cAAC4e,EAAA7e,EAADmD,OAAAyI,OAAA,GACMvI,KAAKvD,MAAMgB,SAASge,eAD1B,CAEEvd,MAAK4B,OAAAob,EAAA,EAAApb,CAAA,GACAE,KAAKvD,MAAMgB,SAASge,eAAevd,MACnC+c,KAGLK,EAAA3e,EAAAC,cAAC8e,EAAA/e,EAAD,KACE2e,EAAA3e,EAAAC,cAAC+e,EAAAhf,EAADmD,OAAAyI,OAAA,CAAMrL,UAAU,YAAe8C,KAAKvD,MAAMgB,SAASme,iBAAnD,kBACAN,EAAA3e,EAAAC,cAACif,EAAA,EAAD,CAAanZ,MAAO1C,KAAKvD,MAAM+B,IAAIH,MAAOsE,SAAU3C,KAAKvD,MAAMyC,cAAc2D,KAAK7C,KAAMA,KAAKvD,MAAM+B,IAAIvB,OAGzGqe,EAAA3e,EAAAC,cAAC0e,EAAA3e,EAAM2T,SAAP,CAAgBC,SAAU+K,EAAA3e,EAAAC,cAACkf,EAAA,EAAD,OACvBd,EACCM,EAAA3e,EAAAC,cAAC2d,EAADza,OAAAyI,OAAA,CACEoI,MAAO,kBAAMnL,EAAKxE,SAAS,CAAC4Z,SAAS,MACjCG,IAGNO,EAAA3e,EAAAC,cAAC4d,EAAD1a,OAAAyI,OAAA,CACE2C,SAAUA,EACV2P,eAAgBA,EAChBkB,aAAc,kBAAMvW,EAAKxE,SAAS,CAAC4Z,SAAS,MACxCG,cAnG0B/V,0NCqE/BgX,gBAvEO,SAAAvf,GAAK,OACzB2Y,EAAAzY,EAAAC,cAACqf,EAAAtf,EAAD,CAAUM,GAAG,iBACXmY,EAAAzY,EAAAC,cAACsf,EAAAvf,EAAD,KACEyY,EAAAzY,EAAAC,cAACuf,EAAA,EAAD,CACEzZ,MAAOjG,EAAMkT,YAAYtR,MACzBsE,SAAUlG,EAAMyC,iBAEpBkW,EAAAzY,EAAAC,cAACsf,EAAAvf,EAAD,CAAWO,UAAU,eACnBkY,EAAAzY,EAAAC,cAAA,OAAKK,GAAG,sBACNmY,EAAAzY,EAAAC,cAAA,SAAOmV,QAAQ,uBAAf,mBAIFqD,EAAAzY,EAAAC,cAACwf,EAAAzf,EAAD,CACEgG,SAAUlG,EAAM4c,cAAcxW,YAAW,QACzCH,MAAOjG,EAAMkT,YAAY7N,KACzBvC,YAAY,OACZqT,aAAW,OACX+C,MAAOlZ,EAAM0B,WAAW2D,MAAQrF,EAAMqZ,cACtC/S,WAAYtG,EAAMsG,WAClB9F,GAAG,sBACHof,WAAS,KAIbjH,EAAAzY,EAAAC,cAAC0f,EAAA,EAAgBxf,SAAjB,KACG,SAAAyf,GAAA,IAAEjR,EAAFiR,EAAEjR,QAAF,OACC8J,EAAAzY,EAAAC,cAACsf,EAAAvf,EAAD,CAAWO,UAAU,mBACnBkY,EAAAzY,EAAAC,cAACwf,EAAAzf,EAAD,CACEgG,SAAUlG,EAAM4c,cAAcxW,YAAW,YACzCH,MAAOjG,EAAMkT,YAAYxE,SACzB5L,YAAY,WACZqT,aAAW,WACX+C,MAAOlZ,EAAM0B,WAAWgN,UAAY1O,EAAMqZ,cAC1C/S,WAAYtG,EAAMsG,WAClBoN,KAAK,SACLqM,WAAY,CAACC,KAAMnR,KATvB,cAeY,YAAf7O,EAAM0T,MACLiF,EAAAzY,EAAAC,cAAC8f,EAAA,EAAD,CACE/Z,SAAUlG,EAAM6c,kBAAkBzW,YAAW,aAC7CH,MAAOjG,EAAMkT,YAAYrP,UACzB0R,aAAa,oBACb4D,OAAQnZ,EAAM0B,WAAWwe,YAAclgB,EAAMqZ,cAC7CD,OAAQpZ,EAAM0B,WAAWye,YAAcngB,EAAMqZ,cAC7C3X,WAAY1B,EAAM0B,WAClB+E,aAAczG,EAAMoF,MAGR,YAAfpF,EAAM0T,MACLiF,EAAAzY,EAAAC,cAACsf,EAAAvf,EAAD,KACEyY,EAAAzY,EAAAC,cAACigB,EAAAlgB,EAAD,CAAQ0G,QAAS5G,EAAM8c,eAAgBhX,QAAQ,YAA/C,SAKJ6S,EAAAzY,EAAAC,cAACsf,EAAAvf,EAAD,KACEyY,EAAAzY,EAAAC,cAACkgB,EAAAngB,EAAD,CAAY0B,MAAM,UAChBH,MAAO,CAACG,MAAO5B,EAAMqZ,cAAgB,MAAQ,MAC7ClD,aAAW,sBACXvP,QAAS5G,EAAMoF,KACfuT,EAAAzY,EAAAC,cAACmgB,EAAApgB,EAAD,6CC/ER,IAAAwY,EAAA1O,EAAA,GAAA2O,EAAA3O,EAAA4O,EAAAF,GAAA6H,EAAAvW,EAAA,KAAAwW,EAAAxW,EAAA,KAAAyW,EAAAzW,EAAA4O,EAAA4H,GAuBeE,IAlBU,SAAA1gB,GAAK,OAC5B2Y,EAAAzY,EAAAC,cAACsgB,EAAAvgB,EAAD,CAAWO,UAAU,oBACnBkY,EAAAzY,EAAAC,cAAA,OAAKM,UAAU,wBACbkY,EAAAzY,EAAAC,cAAA,SAAOmV,QAAStV,EAAMuV,cAAtB,WAIFoD,EAAAzY,EAAAC,cAACogB,EAAA,EAAD,CACEra,SAAUlG,EAAMkG,SAChBD,MAAOjG,EAAMiG,MACbsP,aAAcvV,EAAMuV,aACpB4D,OAAQnZ,EAAMmZ,OACdC,OAAQpZ,EAAMoZ,OACd3S,aAAczG,EAAMyG,yHCsDX8Y,IAnEC,SAAAjD,GAAgB,OAC9BD,YAAe,SAAAE,GAAA,SAAAgD,IAAA,IAAAoB,EAAAvd,EAAAC,OAAAmU,EAAA,EAAAnU,CAAAE,KAAAgc,GAAA,QAAAqB,EAAA9G,UAAAvY,OAAAsf,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAjH,UAAAiH,GAAA,OAAA3d,EAAAC,OAAAoU,EAAA,EAAApU,CAAAE,MAAAod,EAAAtd,OAAAqU,EAAA,EAAArU,CAAAkc,IAAA7b,KAAAsd,MAAAL,EAAA,CAAApd,MAAA2J,OAAA2T,MAEXzb,IAAM,SAAA6b,GAAY,IAIZC,EAJYvC,EACYvb,EAAKpD,MAA3BkT,EADUyL,EACVzL,YAAaQ,EADHiL,EACGjL,KAQnB,KAJqBwN,EAAT,UAATxN,EAA+BgG,YAAgBxG,GAChCsG,YAAkBtG,EAAsB,YAATQ,IAGlCqG,MAAM,CACnB,IAAIhO,EAAW3I,EAAKpD,MAAM0B,WAK1B,OAJAwf,EAAWzZ,OAAO0J,QAAQ,SAAA+H,GACxBnN,EAASmN,IAAS,SAEpB9V,EAAKmB,SAASwH,GAKhB,IACIyE,EADA2Q,EAAiB,CAAC9b,KAAM,IAG5B,GADY,YAATqO,IAAoByN,EAAetd,UAAY,CAACmI,EAAG,GAAIC,EAAG,GAAIkR,IAAI,IACzD,UAATzJ,EACDyN,EAAerd,QAAU,CAACkI,EAAG,GAAIC,EAAG,GAAIkR,IAAI,GAC5C/Z,EAAKpD,MAAMiU,WAAW7Q,EAAKpD,MAAMkT,iBAE/B,CACFiO,EAAezS,SAAW,GAC1ByS,EAAevf,MAAQsR,EAAYtR,MAGnC,IAAIyb,EAAgBja,EAAKpD,MAAMwC,SAAS6a,cACpCra,EAAoBI,EAAKpD,MAAMgD,kBAEnCwN,EAAuBxN,GAAqBqa,EAAc9b,OAAS,EAAI,IAAMyB,EAE7Eme,EAAevf,MAAQyb,EAAc7M,GAGrCpN,EAAKpD,MAAMkD,aAAaE,EAAKpD,MAAMkT,YAAa1C,GAIlD,IAAIzE,EAAW,CAACmH,YAAaiO,GACjB,UAATzN,IAAkB3H,EAAS/I,kBAAoBwN,GAClDpN,EAAKpD,MAAMuE,SAASwH,GAGG,oBAAbkV,GAAyBA,KAlD1B7d,EAqDXge,eAAiB,SAAA3b,GAAmB,UAAVA,EAAExD,KAAiBmB,EAAKgC,OArDvChC,EAuDXuC,OAAS,kBACPgS,EAAAzX,EAAAC,cAACmc,EAADjZ,OAAAyI,OAAA,GACM1I,EAAKpD,MADX,CAEEoF,IAAKhC,EAAKgC,IACVkB,WAAYlD,EAAKge,mBA3DVhe,EAAA,OAAAC,OAAAge,EAAA,EAAAhe,CAAAkc,EAAAhD,GAAAgD,EAAA,CACShX,iDCPXgR,EAAA,mDCAf,IAAAb,EAAA1O,EAAA,GAAA2O,EAAA3O,EAAA4O,EAAAF,GAAA4I,EAAAtX,EAAA,KAAAuX,EAAAvX,EAAA,KAAAwX,EAAAxX,EAAA,KAAAyX,EAAAzX,EAAA4O,EAAA4I,GAAAE,EAAA1X,EAAA,KAAA2X,EAAA3X,EAAA4O,EAAA8I,GAAAE,EAAA5X,EAAA,KAAA6X,EAAA7X,EAAA4O,EAAAgJ,GAAAE,EAAA9X,EAAA,KAAA+X,EAAA/X,EAAA4O,EAAAkJ,GAAAE,EAAAhY,EAAA,KAAAiY,EAAAjY,EAAA4O,EAAAoJ,GAAAE,EAAAlY,EAAA,KAAAmY,EAAAnY,EAAA4O,EAAAsJ,GAAAE,EAAApY,EAAA,KAAAqY,EAAArY,EAAA4O,EAAAwJ,GAAAE,EAAAtY,EAAA,KAAAuY,EAAAvY,EAAA,KAAAwY,EAAAxY,EAAA4O,EAAA2J,GAAAE,EAAAzY,EAAA,KAAA0Y,EAAA1Y,EAAA4O,EAAA6J,GAAAE,EAAA3Y,EAAA,KAAA4Y,EAAA5Y,EAAA4O,EAAA+J,GAAA3Y,EAAA,MAqHe+L,IArGe,SAAA/V,GAC5B,IAAI6iB,EACFlK,EAAAzY,EAAAC,cAACwY,EAAAzY,EAAM0F,SAAP,KACE+S,EAAAzY,EAAAC,cAACuiB,EAAAxiB,EAAD,KACEyY,EAAAzY,EAAAC,cAACkiB,EAAAniB,EAAD,CAAY4F,QAAQ,KAAKrF,UAAU,eAAnC,yBAEFkY,EAAAzY,EAAAC,cAACuiB,EAAAxiB,EAAD,KACEyY,EAAAzY,EAAAC,cAAA,SAAOsB,MAAO,CAACG,MAAO5B,EAAMwC,SAASsgB,UAAY,QAAU,UAA3D,0BAEEnK,EAAAzY,EAAAC,cAACyiB,EAAA1iB,EAAD,CACE0B,MAAM,UACNkT,QAAS9U,EAAM0U,oBAAmD,UAA7B1U,EAAM0U,mBAC3CxO,SAAUlG,EAAM6U,2BAChBsB,aAAW,4BAOrB,OACEwC,EAAAzY,EAAAC,cAACwY,EAAAzY,EAAM0F,SAAP,KACG5F,EAAM+iB,OAASF,EAASlK,EAAAzY,EAAAC,cAACuiB,EAAAxiB,EAAD,CAAM+G,WAAS,EAACC,QAAQ,iBAAiB2b,GAClElK,EAAAzY,EAAAC,cAACshB,EAAAvhB,EAAD,CAAOO,UAAU,iBACfkY,EAAAzY,EAAAC,cAAC0hB,EAAA3hB,EAAD,KACEyY,EAAAzY,EAAAC,cAAC4hB,EAAA7hB,EAAD,KACEyY,EAAAzY,EAAAC,cAAC8hB,EAAA/hB,EAAD,MACAyY,EAAAzY,EAAAC,cAAC8hB,EAAA/hB,EAAD,aACAyY,EAAAzY,EAAAC,cAAC8hB,EAAA/hB,EAAD,kBACEF,EAAM+iB,QAAUpK,EAAAzY,EAAAC,cAAC8hB,EAAA/hB,EAAD,aAClByY,EAAAzY,EAAAC,cAAC8hB,EAAA/hB,EAAD,QAGJyY,EAAAzY,EAAAC,cAACmiB,EAAA,EAAD,CAAiBxhB,UAAWd,EAAMc,WAChC6X,EAAAzY,EAAAC,cAACmiB,EAAA,EAAD,CAAWvhB,YAAY,KACpB,SAAAC,GAAQ,OACP2X,EAAAzY,EAAAC,cAACgiB,EAAAjiB,EAAD,CAASgB,QAASF,EAASG,UACzBwX,EAAAzY,EAAAC,cAACwhB,EAAAzhB,EAAcc,EAASK,gBACpBrB,EAAMsB,SAASC,QACfoX,EAAAzY,EAAAC,cAAC4hB,EAAA7hB,EAAD,KACEyY,EAAAzY,EAAAC,cAAC8hB,EAAA/hB,EAAD,MACAyY,EAAAzY,EAAAC,cAAC8hB,EAAA/hB,EAAD,CAAWsB,QAASxB,EAAM+iB,OAAS,EAAI,GAAvC,+CAGApK,EAAAzY,EAAAC,cAAC8hB,EAAA/hB,EAAD,OAGHF,EAAMsB,SAASQ,IAAI,SAACyO,EAASvO,GAAV,OAClB2W,EAAAzY,EAAAC,cAACmiB,EAAA,EAAD,CAAWrgB,IAAKsO,EAAQ/P,GAAI0B,YAAaqO,EAAQ/P,GAAG2B,WAAYC,MAAOJ,GACpE,SAAAghB,GAAS,OACRrK,EAAAzY,EAAAC,cAACmhB,EAAA,EAAD,CACEhf,KAAK,WACLP,IAAKwO,EACLhO,YAAavC,EAAMuC,YACnBvB,SAAUgiB,EACVvgB,cAAezC,EAAMyC,cACrBC,cAAe1C,EAAM0C,cACrBC,qBAAsB3C,EAAM2C,qBAC5BC,gBAAiB5C,EAAM4C,gBACvB8a,mBAAiB,EACjB7a,mBAAoB7C,EAAM6C,yBAKjC7B,EAAS8B,aAEP9C,EAAM+iB,QACLpK,EAAAzY,EAAAC,cAACohB,EAAA,EAAD,CACE/e,SAAUxC,EAAMwC,SAChBQ,kBAAmBhD,EAAMgD,kBACzBtB,WAAY,GACZuB,YAAajD,EAAMsB,SAAStB,EAAMsB,SAASC,OAAS,GACpD2B,aAAclD,EAAMkD,aACpBwQ,KAAK,mBAWpB1T,EAAM+iB,QACLpK,EAAAzY,EAAAC,cAACuiB,EAAAxiB,EAAD,CAAM+G,WAAS,EAACC,QAAQ,UACtByR,EAAAzY,EAAAC,cAACqiB,EAAAtiB,EAAD,CACE0G,QAAS5G,EAAMuF,QACfO,QAAQ,YACRlE,MAAM,UACNH,MAAO,CAAC2F,OAAQ,UAJlB","file":"static/js/8.edad3fbe.chunk.js","sourcesContent":["import React from 'react';\r\nimport ProjectsTableRow from './ProjectsTableRow'\r\nimport AddProjectRow from './AddProjectRow'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport RootRef from '@material-ui/core/RootRef';\r\nimport { IsMobileContext } from './_Context'\r\nimport './css/ProjectsTable.css'\r\n\r\nconst ProjectsTable = props => (\r\n  <IsMobileContext.Consumer>\r\n    {isMobile => (\r\n      <Table id=\"ProjectsTable\"  className=\"projectsTable\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell/>\r\n            <TableCell>Name</TableCell>\r\n            {!isMobile && <TableCell>Duration estimate</TableCell>}\r\n            <TableCell>{isMobile ? \"Time\" : \"Planned time\"}</TableCell>\r\n            <TableCell/>\r\n          </TableRow>\r\n        </TableHead>\r\n        <DragDropContext onDragEnd={props.onDragEnd}>\r\n          <Droppable droppableId=\"0\">\r\n            {provided => (\r\n              <RootRef rootRef={provided.innerRef}>\r\n                <TableBody {...provided.droppableProps}>\r\n                  {!props.projects.length && (\r\n                    <TableRow>\r\n                      <TableCell/>\r\n                      <TableCell\r\n                        colSpan={isMobile ? 2 : 3}\r\n                        style={props.showErrors.noProjects ? {\r\n                          color: \"red\",\r\n                          fontWeight: 500\r\n                        } : null}\r\n                      >\r\n                        You haven't set any projects yet\r\n                      </TableCell>\r\n                      <TableCell/>\r\n                    </TableRow>\r\n                  )}\r\n                  {props.projects.map((row, i) => (\r\n                    <Draggable key={row.id} draggableId={row.id.toString()} index={i}>\r\n                      {provided => (\r\n                        <ProjectsTableRow\r\n                          mode={props.mode}\r\n                          row={row}\r\n                          currentTime={props.currentTime}\r\n                          settings={props.settings}\r\n                          provided={provided}\r\n                          onColorChange={props.onColorChange}\r\n                          onDoneEditing={props.onDoneEditing}\r\n                          onProjectStateChange={props.onProjectStateChange}\r\n                          onDeleteProject={props.onDeleteProject}\r\n                          startEditingMobile={props.startEditingMobile}\r\n                        />\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                  {\r\n                    // if in planning mode..\r\n                    props.mode === \"planning\" && !isMobile && (\r\n                      <AddProjectRow\r\n                        settings={props.settings}\r\n                        defaultColorIndex={props.defaultColorIndex}\r\n                        showErrors={props.showErrors}\r\n                        lastProject={props.projects[props.projects.length - 1]}\r\n                        onAddProject={props.onAddProject}\r\n                        currentTime={props.currentTime}\r\n                      />\r\n                    )\r\n                  }\r\n                </TableBody>\r\n              </RootRef>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      </Table>\r\n    )}\r\n  </IsMobileContext.Consumer>\r\n)\r\n\r\nexport default ProjectsTable\r\n","import React, { Component } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TimeSetter from './TimeSetter'\r\nimport TimeCalc from './util/TimeCalc'\r\nimport makeNewId from './util/makeNewId'\r\nimport validationRegex from './util/validationRegex'\r\nimport './css/BreaksDrawer.css'\r\n\r\nexport default class BreaksDrawer extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    // put some props into the state\r\n    let breaks = JSON.parse(JSON.stringify(props.breaks))\r\n    let newBreak = {}\r\n\r\n    // if there are any breaks...\r\n    if(breaks.length){\r\n      // set the default value of newBreak\r\n      newBreak.startTime = TimeCalc.add(breaks[breaks.length - 1].endTime, 90)\r\n      newBreak.endTime = TimeCalc.add(newBreak.startTime, 60)\r\n    }\r\n\r\n    // if there aren't any, set the default value\r\n    else{\r\n      newBreak.startTime = TimeCalc.round(TimeCalc.add(props.currentTime, 90), 15)\r\n      newBreak.endTime = TimeCalc.add(newBreak.startTime, 60)\r\n    }\r\n\r\n    newBreak.name = \"\"\r\n\r\n    // store the length of breaks\r\n    let breakDurations = {\r\n      new: 30\r\n    }\r\n    for(let i = 0; i < breaks.length; i++){\r\n      let breakId = breaks[i].id\r\n      breakDurations[breakId] = TimeCalc.subtractToMinutes(breaks[i].endTime, breaks[i].startTime, true)\r\n    }\r\n\r\n    this.state = {\r\n      breaks,\r\n      newBreak,\r\n      breakDurations,\r\n      errors: {},\r\n      showEndTimeErrors: {},\r\n      temp: {\r\n        showEndTimeErrors: {}\r\n      }\r\n    }\r\n  }\r\n\r\n  // used for simple text input editing (not the start or end times)\r\n  handleInputChange(breakId, propertyId, e){\r\n    let val = e.target.value\r\n\r\n    if(validationRegex.test(val)) return // these characters could be problematic in the stringified JSON\r\n\r\n    if(breakId === \"new\"){ // \"new\" means the input fields of the last row that is used to add new breaks\r\n      let newBreak = this.state.newBreak\r\n      newBreak[propertyId] = val\r\n      this.setState({newBreak})\r\n    }\r\n    else{\r\n      let breaks = this.state.breaks\r\n      let index = breaks.findIndex(el => el.id === breakId)\r\n      breaks[index][propertyId] = val\r\n\r\n      this.setState({breaks})\r\n      this.props.onSave(breaks, {breaks: breakId})\r\n    }\r\n  }\r\n\r\n  validateEndTime = (breakId, startTime, endTime) => {\r\n    let temp = this.state.temp\r\n    let showEndTimeErrors = this.state.showEndTimeErrors\r\n\r\n    let success\r\n\r\n    // endTime needs to be after startTime, if it isn't show an error\r\n    // (show the error after a timeout to prevent flashing errors as the user types)\r\n    if(!TimeCalc.isBiggerThan(endTime, startTime, false, true)){\r\n      success = false\r\n\r\n      temp.showEndTimeErrors[breakId] = setTimeout(() => {\r\n        this.setState({\r\n          showEndTimeErrors: {\r\n            ...this.state.showEndTimeErrors,\r\n            [breakId]: true\r\n          }\r\n        })\r\n      }, 500)\r\n    }\r\n    else{\r\n      success = true\r\n\r\n      showEndTimeErrors[breakId] = false\r\n      clearTimeout(temp.showEndTimeErrors[breakId])\r\n    }\r\n\r\n    this.setState({temp, showEndTimeErrors})\r\n    return success\r\n  }\r\n\r\n  // when the user edits the startTime/endTime\r\n  handleTimeInputChange(breakId, propertyId, inputId, val){\r\n    if(validationRegex.test(val)) return\r\n\r\n    if(breakId === \"new\"){ // see above\r\n      let newBreak = this.state.newBreak\r\n      let breakDurations = this.state.breakDurations\r\n\r\n      // inputId can either be a single field (eg. minutes) or the whole time object\r\n      if(inputId === \"object\") newBreak[propertyId] = val\r\n      else newBreak[propertyId][inputId] = val\r\n\r\n      if(val !== \"\"){\r\n        // if the user edits the startTime, adjust endTime accordingly\r\n        if(propertyId === \"startTime\"){\r\n          newBreak.endTime = TimeCalc.add(newBreak.startTime, breakDurations.new)\r\n        }\r\n\r\n        if(propertyId === \"endTime\"){\r\n          this.validateEndTime(breakId, newBreak.startTime, newBreak.endTime)\r\n\r\n          // changing the endTime also changes the duration, the state needs to reflect that\r\n          breakDurations.new = TimeCalc.subtractToMinutes(newBreak.endTime, newBreak.startTime, true)\r\n        }\r\n      }\r\n\r\n      this.setState({newBreak, breakDurations})\r\n    }\r\n\r\n    else{\r\n      let breaks = this.state.breaks\r\n      let breakDurations = this.state.breakDurations\r\n      let index = breaks.findIndex(el => el.id === breakId)\r\n\r\n      // accept both a single input (eg. minutes) or an entirely new time object\r\n      if(inputId === \"object\") breaks[index][propertyId] = val\r\n      else breaks[index][propertyId][inputId] = val\r\n\r\n      let success = true\r\n\r\n      if(val === \"\") success = false // an empty string is not a valid time value for an existing break\r\n      else {\r\n        // if the user changes the startTime, adjust the endTime too\r\n        if(propertyId === \"startTime\"){\r\n          breaks[index].endTime = TimeCalc.add(breaks[index].startTime, breakDurations[breakId])\r\n        }\r\n\r\n        if(propertyId === \"endTime\"){\r\n          success = this.validateEndTime(breakId, breaks[index].startTime, breaks[index].endTime)\r\n\r\n          // breakDurations need to be updated if the endTime is changed\r\n          breakDurations[index] = TimeCalc.subtractToMinutes(breaks[index].endTime, breaks[index].startTime, true)\r\n          this.setState({breakDurations})\r\n        }\r\n      }\r\n\r\n      // check if there were any errors\r\n      let errors = this.state.errors\r\n      errors[breakId] = !success\r\n      let canClose = Object.values(errors).every(x => !x)\r\n\r\n      this.setState({breaks, errors})\r\n      this.props.onSave(breaks, canClose, {breaks: breakId})\r\n    }\r\n  }\r\n\r\n  // add a new break\r\n  addBreak = () => {\r\n    // if there is an error coming from input validation, the user has to fix it first\r\n    if(this.state.showEndTimeErrors.new) return\r\n\r\n    let breaks = this.state.breaks\r\n    let newBreak = this.state.newBreak\r\n\r\n    // make a new unique ID\r\n    let newId = makeNewId(breaks, \"breaks\")\r\n    newBreak.id = newId\r\n\r\n    breaks.push(newBreak)\r\n\r\n    this.setState({breaks})\r\n    this.props.onSave(breaks, {breaks: newId})\r\n\r\n    // adjust breakDurations to reflect the changes\r\n    let breakDurations = this.state.breakDurations\r\n    breakDurations.new = 30\r\n    breakDurations[newId] = TimeCalc.subtractToMinutes(newBreak.endTime, newBreak.startTime, true)\r\n\r\n    // store new init values for the newBreak input fields\r\n    this.setState({\r\n      newBreak: {\r\n        startTime: TimeCalc.add(newBreak.endTime, 90),\r\n        endTime: TimeCalc.add(newBreak.endTime, 120),\r\n        name: \"\"\r\n      },\r\n      breakDurations\r\n    })\r\n  }\r\n\r\n  deleteBreak(id){\r\n    let breaks = this.state.breaks\r\n    let index = breaks.findIndex(el => el.id === id)\r\n    breaks.splice(index, 1)\r\n\r\n    // when the break is deleted, there's no reason to store any errors that might've been associated with it\r\n    let errors = this.state.errors\r\n    delete errors[id]\r\n    let canClose = Object.values(errors).every(x => !x)\r\n\r\n    this.setState({breaks, errors})\r\n    this.props.onSave(breaks, canClose, {breaks: id})\r\n  }\r\n\r\n  handleSave = () => {\r\n    this.props.onClose()\r\n  }\r\n\r\n  handleEnterPress = e => {\r\n    if(e.key === \"Enter\") this.addBreak()\r\n  }\r\n\r\n  handleEnterPressNew = e => { // \"new\" -> when adding a new break\r\n    if(e.key === \"Enter\") this.addBreak()\r\n  }\r\n\r\n  render = () => (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" className=\"drawerTitle\">\r\n        Breaks:\r\n      </Typography>\r\n      <Table className=\"BreaksDrawer\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Name (optional)</TableCell>\r\n            <TableCell>Start</TableCell>\r\n            <TableCell>End</TableCell>\r\n            <TableCell/>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {this.state.breaks.length ? (\r\n            this.state.breaks.map((breakInfo, i) => (\r\n              <TableRow key={breakInfo.id}>\r\n                <TableCell>\r\n                  <Input\r\n                    value={breakInfo.name}\r\n                    onChange={this.handleInputChange.bind(this, breakInfo.id, \"name\")}\r\n                    onKeyPress={this.handleEnterPress}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TimeSetter\r\n                    value={breakInfo.startTime}\r\n                    onChange={this.handleTimeInputChange.bind(this, breakInfo.id, \"startTime\")}\r\n                    onEnterPress={this.handleSave}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TimeSetter\r\n                    value={breakInfo.endTime}\r\n                    onChange={this.handleTimeInputChange.bind(this, breakInfo.id, \"endTime\")}\r\n                    onEnterPress={this.handleSave}\r\n                    showError={this.state.showEndTimeErrors[breakInfo.id]}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IconButton onClick={this.deleteBreak.bind(this, breakInfo.id)}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))\r\n          ) : (\r\n            <TableRow>\r\n              <TableCell colSpan={4}>You haven't set any breaks</TableCell>\r\n            </TableRow>\r\n          )}\r\n          <TableRow>\r\n            <TableCell>\r\n              <Input\r\n                value={this.state.newBreak.name}\r\n                onChange={this.handleInputChange.bind(this, \"new\", \"name\")}\r\n                onKeyPress={this.handleEnterPressNew}\r\n              />\r\n            </TableCell>\r\n            <TableCell>\r\n              <TimeSetter\r\n                value={this.state.newBreak.startTime}\r\n                onChange={this.handleTimeInputChange.bind(this, \"new\", \"startTime\")}\r\n                onEnterPress={this.addBreak}\r\n              />\r\n            </TableCell>\r\n            <TableCell>\r\n              <TimeSetter\r\n                value={this.state.newBreak.endTime}\r\n                onChange={this.handleTimeInputChange.bind(this, \"new\", \"endTime\")}\r\n                onEnterPress={this.addBreak}\r\n                showError={this.state.showEndTimeErrors.new}\r\n              />\r\n            </TableCell>\r\n            <TableCell>\r\n              <IconButton color=\"primary\" onClick={this.addBreak}>\r\n                <AddIcon />\r\n              </IconButton>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n      <Grid container justify=\"center\">\r\n        <Button\r\n          onClick={this.handleSave.bind(this)}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{margin: \".5rem\"}}>\r\n          Save\r\n        </Button>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport GoogleSignIn from './signIn/GoogleSignIn';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport './css/SignInPanel.css'\r\n\r\n// this panel suggests that the user should sign in\r\n// if the user already dismissed the panel once, we want to give them an option...\r\n// to dismiss it permanently. So the first time the user clicks the close icon,...\r\n// dismiss the panel and after that, ask them if they want to dismiss it for now or permanently (using a Menu)\r\nexport default class SignInPanel extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {anchorEl: null}\r\n  }\r\n\r\n  handleDismiss = e => {\r\n    // if this is the first time the user is dismissing the panel, only dismiss it\r\n    if(!this.props.showDontRemindMeAgain) this.props.dismiss()\r\n    // if the user has dismissed it before, let them chose if they want to do it permanently this time\r\n    else this.setState({anchorEl: e.currentTarget})\r\n  }\r\n\r\n  closeDismissMenu = () => {\r\n    this.setState({anchorEl: null})\r\n  }\r\n\r\n  render(){\r\n    let anchorEl = this.state.anchorEl\r\n\r\n    return (\r\n      <div className=\"signInPanel\">\r\n        <Grid\r\n          className=\"signInPanelContainer\"\r\n          container\r\n          alignItems='center'\r\n          justify=\"space-evenly\"\r\n        >\r\n          <Grid>\r\n            Sign in to sync your data between all your devices:\r\n          </Grid>\r\n          <Grid>\r\n            <GoogleSignIn connect={this.props.connect}/>\r\n          </Grid>\r\n        </Grid>\r\n        <IconButton\r\n          className=\"dismissButton\"\r\n          onClick={this.handleDismiss}\r\n          aria-owns={anchorEl ? 'signInPanelDismissMenu' : undefined}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n        {this.props.showDontRemindMeAgain && ( //saves performance\r\n          <Menu\r\n            id=\"signInPanelDismissMenu\"\r\n            anchorEl={anchorEl}\r\n            open={Boolean(anchorEl)}\r\n            onClose={this.closeDismissMenu}\r\n          >\r\n            <MenuItem onClick={() => {this.closeDismissMenu(); this.props.dismiss()}}>\r\n              Remind me later\r\n            </MenuItem>\r\n            <MenuItem onClick={() => {this.closeDismissMenu(); this.props.dontRemindMeAgain()}}>\r\n              Don't remind me again\r\n            </MenuItem>\r\n          </Menu>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ProjectsTable from './ProjectsTable'\r\nimport TimeSetter from './TimeSetter'\r\nimport BreaksDrawer from './BreaksDrawer'\r\nimport DefaultProjectsDrawer from './DefaultProjectsDrawer'\r\nimport SignInPanel from './SignInPanel'\r\nimport LoadingFallback from './LoadingFallback'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Link } from \"react-router-dom\";\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport StartIcon from '@material-ui/icons/PlayArrow';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport TimeCalc, { setTimesForProjects } from './util/TimeCalc'\r\nimport makeNewId from './util/makeNewId'\r\nimport getGetParams from './util/getGetParams'\r\nimport { SettingsContext, IsMobileContext } from './_Context'\r\nimport './css/App.css'\r\nconst AddProjectView = React.lazy(() => import('./MobileViews/AddProjectView'))\r\nconst EditProjectView = React.lazy(() => import('./MobileViews/EditProjectView'))\r\nconst BreaksView = React.lazy(() => import('./MobileViews/BreaksView'))\r\nconst DefaultProjectsView = React.lazy(() => import('./MobileViews/DefaultProjectsView'))\r\nconst ModeSwitch = React.lazy(() => import('./ModeSwitch'))\r\nconst TimeStats = React.lazy(() => import('./TimeStats'))\r\nconst Congrats = React.lazy(() => import('./Congrats'))\r\nconst DropdownMenu = React.lazy(() => import('./DropdownMenu'))\r\nconst SettingsIcon = React.lazy(() => import('@material-ui/icons/Settings'))\r\nconst AddFab = React.lazy(() => import('./AddFab'))\r\n\r\nexport default class App extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      showErrors: {},\r\n      showResetButton: false,\r\n      temp: {\r\n        dontShowSignInYet: true,\r\n        snackbar: { // used to display certain messages to the user\r\n          open: false,\r\n          message: \"\",\r\n          action: () => {},\r\n          buttonLabel: \"\"\r\n        }\r\n      }\r\n    }\r\n\r\n    // show the sign in panel after a little while\r\n    this.showSignInPanelAfterLoadTimeout = setTimeout(() => {\r\n      this.setState({temp: {...this.state.temp, dontShowSignInYet: false}})\r\n    }, 5000)\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    // since data is loaded in DataSync not App, it will only be available to App after an update\r\n    // once it's available, determine if the reset button should be shown\r\n    if(!Object.keys(prevProps.data.settings).length && Object.keys(this.props.data.settings).length){\r\n      this.setShowResetButton()\r\n    }\r\n\r\n    // if there's been a change in projects...\r\n    if(prevProps.data.projects !== this.props.data.projects){\r\n      let allProjectsDone = false\r\n      let productivityPercentage, totalTimeWorkedString\r\n\r\n      // get today's productivityPercentage\r\n      let dateString = this.getDateString()\r\n      let todaysProdPerc = this.props.data.productivityPercentages[dateString]\r\n\r\n      // check if all projects are done\r\n      if(this.props.data.projects.length){\r\n        allProjectsDone = true\r\n        for(let i = 0; i < this.props.data.projects.length; i++){\r\n          if(this.props.data.projects[i].state !== \"done\"){\r\n            allProjectsDone = false\r\n            break\r\n          }\r\n        }\r\n\r\n        // if all projects are done, calculate the relevant stats\r\n        if(allProjectsDone){\r\n          let totalTimeWorked = 0\r\n\r\n          for(let i = 0; i < this.props.data.projects.length; i++){\r\n            totalTimeWorked += parseInt(this.props.data.projects[i].estimatedDuration)\r\n          }\r\n\r\n          // the string is eg. 45 -> \"45 miuntes\", 75 -> \"1:15\" etc.\r\n          if(totalTimeWorked >= 60){\r\n            totalTimeWorkedString = TimeCalc.makeString(TimeCalc.toTimeObject(totalTimeWorked, false), false)\r\n          }\r\n          else totalTimeWorkedString = totalTimeWorked + \" minutes\"\r\n\r\n          // if the productivityPercentage was already stored, use it\r\n          if(todaysProdPerc) productivityPercentage = todaysProdPerc\r\n          // else calculate and store it\r\n          else{\r\n            let totalTimePassed = TimeCalc.subtractToMinutes(this.props.currentTime, this.props.data.startTime, true)\r\n            productivityPercentage = Math.round(100 * totalTimeWorked / totalTimePassed)\r\n          }\r\n        }\r\n      }\r\n      else allProjectsDone = false\r\n\r\n      // save the things that have changed\r\n      // always compare the calculated value to the one in the state to avoid an update loop\r\n      if(!this.props.data.realEndTime || dateString === this.props.data.realEndTime.split(\"T\")[0]){\r\n        if(allProjectsDone !== this.state.allProjectsDone){\r\n          this.setState({allProjectsDone})\r\n          if(typeof this.state.allProjectsDone !== \"undefined\"){\r\n            this.props.update({realEndTime: allProjectsDone ? new Date() : undefined})\r\n          }\r\n        }\r\n        if(totalTimeWorkedString !== this.state.totalTimeWorkedString) this.setState({totalTimeWorkedString})\r\n        if(\r\n          productivityPercentage !== todaysProdPerc &&\r\n          !(isNaN(productivityPercentage) && typeof productivityPercentage === \"number\")// handle NaN\r\n        ){\r\n          let productivityPercentages = Object.assign({}, this.props.data.productivityPercentages)\r\n          productivityPercentages[dateString] = productivityPercentage\r\n          this.props.update({productivityPercentages})\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    // prevents memory leaks\r\n    clearTimeout(this.showSignInAgainTimeout)\r\n    clearTimeout(this.showSignInPanelAfterLoadTimeout)\r\n  }\r\n\r\n  // internal method, used in componentDidMount and componentDidUpdate\r\n  // determines if the reset button should or shouldn't be shown\r\n  setShowResetButton = () => {\r\n    // the reset button is shown in one of 2 cases:\r\n    let condition1, condition2\r\n\r\n    // show the reset button if 5AM is between lastReset and currentTime\r\n    let lastResetInMs = new Date(localStorage.lastReset).getTime() // ms since 1970\r\n    lastResetInMs = lastResetInMs % (24*60*60*1000)\r\n    let lastResetInMinutes = lastResetInMs / 1000 / 60\r\n    condition1 = TimeCalc.isBiggerThan(lastResetInMinutes, this.props.currentTime, false, true)\r\n\r\n    // only check for condition2 if condition1 doesn't check out\r\n    if(!condition1){\r\n      // show the reset button if lastReset + showResetButtonAfter > currentTime\r\n      let lastReset = new Date(localStorage.lastReset)\r\n      let settings = this.props.data.settings.showResetButtonAfter ? this.props.data.settings : this.props.data.settings\r\n      let showResetButtonAfter = settings.showResetButtonAfter\r\n      lastReset.setTime(lastReset.getTime() + (showResetButtonAfter * 60 * 60 * 1000))\r\n      condition2 = lastReset < new Date()\r\n    }\r\n\r\n    // only one of the two needs to be true to show the reset button\r\n    let showResetButton = (condition1 || condition2) && this.props.data.projects.length\r\n    this.setState({showResetButton})\r\n  }\r\n\r\n  // internal method, used when auto detecting breaks\r\n  // converts the arguments into the correct format, creates an ID etc.\r\n  addBreak = (startTime, endTime) => {\r\n    let breaks = this.props.data.breaks.slice()\r\n\r\n    for(let i = 0; i < breaks.length; i++){\r\n      // check if the break overlaps with any preexisting breaks\r\n      if(\r\n        (\r\n          TimeCalc.isBiggerThan(endTime, breaks[i].startTime, false, true) &&\r\n          TimeCalc.isBiggerThan(breaks[i].startTime, startTime, true, true)\r\n        ) || (\r\n          TimeCalc.isBiggerThan(endTime, breaks[i].endTime, false, true) &&\r\n          TimeCalc.isBiggerThan(breaks[i].endTime, startTime, true, true)\r\n        )\r\n      ){\r\n\r\n        // if the overlapping break was also autodetected, merge the two\r\n        if(breaks[i].autodetected){\r\n\r\n          // if the other break's startTime is earlier than the new break's start time...\r\n          if(TimeCalc.isBiggerThan(startTime, breaks[i].startTime, false, true)){\r\n            // set the startTime to be equal to the previous startTime\r\n            startTime = breaks[i].startTime\r\n          }\r\n\r\n          // if the other break's endTime is later that the current one...\r\n          if(TimeCalc.isBiggerThan(breaks[i].endTime, endTime, true, true)){\r\n            endTime = breaks[i].endTime\r\n          }\r\n\r\n          // finally, remove the other break as it's no longer needed (it'll be merged into the new one)\r\n          breaks.splice(i, 1)\r\n        }\r\n\r\n        // if the break was manually inserted, move the startTime after the other break\r\n        else {\r\n          startTime = breaks[i].endTime\r\n        }\r\n      }\r\n    }\r\n\r\n    let newId = makeNewId(breaks, \"breaks\")\r\n\r\n    breaks.push({\r\n      id: newId,\r\n      name: \"Auto \" + (breaks.length + 1),\r\n      autodetected: true,\r\n      startTime, endTime\r\n    })\r\n\r\n    this.props.update({breaks}, {breaks: newId})\r\n    return breaks\r\n  }\r\n\r\n  // if the user changes the endTime (time when they want to stop working)\r\n  // can be either a single input change (eg. only minutes) or the entire time object\r\n  handleEndTimeChange = (id, val) => {\r\n    let endTime = Object.assign({}, this.props.data.endTime)\r\n    let newState = {\r\n      showErrors: this.state.showErrors,\r\n      temp: this.state.temp\r\n    }\r\n\r\n    if(id === \"object\") endTime = val\r\n    else endTime[id] = val\r\n\r\n    // show/hide errors\r\n    // (don't show them immediately, we don't want the user to get a seizure when typing)\r\n    if(endTime.h === \"\"\r\n      || endTime.m === \"\"\r\n      || TimeCalc.isBiggerThan(this.props.currentTime, endTime, true, true)\r\n    ){\r\n      newState.temp.endTimeErrorTimeout = setTimeout(() => {\r\n        this.props.changeRouterShowErrors(\"endTime\", true)\r\n      }, 250)\r\n    }\r\n    else{\r\n      clearTimeout(newState.temp.endTimeErrorTimeout)\r\n      this.props.changeRouterShowErrors(\"endTime\", false)\r\n    }\r\n\r\n    newState.endTime = endTime\r\n\r\n    this.setState(newState)\r\n    this.props.update({endTime})\r\n  }\r\n\r\n  addProject(arrayId, project, newDefaultColorIndex){\r\n    // hide the noProjects error, hide the temp var\r\n    this.props.changeRouterShowErrors(\"noProjects\", false)\r\n\r\n    // copy the state\r\n    let projects = this.props.data[arrayId].slice()\r\n    let settings = this.props.data.settings\r\n\r\n    // make a new unique ID\r\n    let newId = makeNewId(projects, \"projects\")\r\n\r\n    // convert (depending on the type - project/break/defaultProject)\r\n    let newProject = {\r\n      id: newId,\r\n      name: project.name,\r\n      color: project.color,\r\n      estimatedDuration: project.duration,\r\n      state:'notStarted'\r\n    }\r\n    if(arrayId === \"defaultProjects\"){\r\n      newProject.days = project.days\r\n    }\r\n    else{ // don't add the plannedTime property if we're editting the defaultProjects\r\n      newProject.plannedTime = {\r\n        start: project.startTime,\r\n        end: TimeCalc.add(project.startTime, project.duration)\r\n      }\r\n    }\r\n\r\n    // if the startTime is larger that the suggested time, add a new break\r\n    // (don't execute if there are no previous projects or if it's a defaultProject)\r\n    if(projects.length && arrayId !== \"defaultProjects\"){\r\n      let currentLastProject = projects[projects.length - 1]\r\n      if(\r\n        settings.detectBreaksAutomatically &&\r\n        TimeCalc.isBiggerThan(project.startTime,\r\n          TimeCalc.suggestStartTime(currentLastProject.plannedTime.end, currentLastProject.estimatedDuration, settings),\r\n          false, true\r\n        )\r\n      ){\r\n        this.addBreak(currentLastProject.plannedTime.end, project.startTime)\r\n      }\r\n    }\r\n\r\n    // create the newState object , handle undefined for newDefaultColorIndex\r\n    projects.push(newProject)\r\n    let newState = {[arrayId]: projects}\r\n    if(typeof newDefaultColorIndex !== \"undefined\"){\r\n      let defaultColorIndexKey = arrayId === \"projects\" ? \"defaultColorIndex\" : \"defaultColorIndexDefaultProjects\"\r\n      newState[defaultColorIndexKey] = newDefaultColorIndex\r\n    }\r\n\r\n    // if it's the first project being added, save the startTime as well\r\n    if(projects.length === 1 && arrayId !== \"defaultProjects\") newState.startTime = projects[0].plannedTime.start\r\n\r\n    // save to state\r\n    this.props.update(newState, {[arrayId]: newId})\r\n  }\r\n\r\n  deleteProject(arrayId, id){\r\n    let projects = this.props.data[arrayId].slice()\r\n    let settings = this.props.data.settings\r\n\r\n    let index = projects.findIndex(project => project.id === parseInt(id))\r\n\r\n    // if we are updating the timing and if the deleted project is the first one, adjust the next startTime\r\n    if(settings.updateTimesAfterDelete && index === 0 && projects[1] && arrayId !== \"defaultProjects\"){\r\n      projects[1].plannedTime.start = projects[0].plannedTime.start\r\n    }\r\n\r\n    projects.splice(index, 1)\r\n\r\n    // if the user wants us to update the timing of other projects, do so\r\n    if(settings.updateTimesAfterDelete && arrayId !== \"defaultProjects\"){\r\n      projects = setTimesForProjects(projects, settings, this.props.data.breaks, this.props.data.startTime)\r\n    }\r\n\r\n    let newState = {[arrayId]: projects}\r\n\r\n    // if the user just deleted the last remaining project, reset breaks as well\r\n    if(!projects.length && arrayId !== \"defaultProjects\") newState.breaks = []\r\n\r\n    this.props.update(newState, {[arrayId]: id})\r\n  }\r\n\r\n  // switch mode on Tab press\r\n  handleRootKeyDown = e => {\r\n    if(this.props.data.settings.changeModeOnTab && e.key === \"Tab\" && !this.state.temp.openBreaksDrawer){\r\n      e.preventDefault()\r\n\r\n      this.props.changeMode(this.props.data.mode === \"planning\" ? \"working\" : \"planning\")\r\n    }\r\n  }\r\n\r\n  // if the user changes the value of a project's ColorPicker\r\n  handleColorChange(arrayId, id, val){\r\n    let projects = this.props.data[arrayId].slice()\r\n\r\n    let index = projects.findIndex(project => project.id === parseInt(id))\r\n\r\n    // break the reference\r\n    let changedProject = Object.assign({}, projects[index])\r\n    projects.splice(index, 1)\r\n\r\n    changedProject.color = val\r\n\r\n    // insert back into the array\r\n    projects.splice(index, 0, changedProject)\r\n\r\n    this.props.update({[arrayId]: projects}, {projects: id})\r\n  }\r\n\r\n  handleDragEnd(arrayId, result){\r\n    this.setState({temp: {...this.state.temp, dragging: false}})\r\n\r\n    // handle the draggable being drop outside the droppable\r\n    if(!result.destination) return\r\n\r\n    let id = result.draggableId\r\n    let index = result.destination.index\r\n    let projects = []\r\n\r\n    // break the references (necessary for properly setting lastModified in DataSync)\r\n    this.props.data[arrayId].forEach(project => {\r\n      let copy = Object.assign({}, project)\r\n      if(arrayId !== \"defaultProjects\"){\r\n        copy.plannedTime = JSON.parse(JSON.stringify(project.plannedTime))\r\n      }\r\n      projects.push(copy)\r\n    })\r\n\r\n    let movedProjectIndex = projects.findIndex(el => el.id === parseInt(id))\r\n    let movedProject = projects[movedProjectIndex]\r\n\r\n    // if the project was dropped at the same spot it was picked up from, stop executing\r\n    if(index === movedProjectIndex) return\r\n\r\n    // store the startTime of the project that is currently first\r\n    // (for the setTimesForProjects function to work properly)\r\n    let firstStartTime\r\n    if(arrayId !== \"defaultProjects\") firstStartTime = projects[0].plannedTime.start\r\n\r\n    // remove from the current position\r\n    projects.splice(movedProjectIndex, 1)\r\n\r\n    // add to the new position\r\n    projects.splice(index, 0, movedProject)\r\n\r\n    // if the user wants us to update the timing of projects, do so\r\n    if(this.props.data.settings.updateTimesAfterDrag && arrayId !== \"defaultProjects\"){\r\n      projects[0].plannedTime.start = firstStartTime\r\n\r\n      projects = setTimesForProjects(projects, this.props.data.settings, this.props.data.breaks, this.props.data.startTime)\r\n    }\r\n\r\n    // save\r\n    this.props.update({[arrayId]: projects})\r\n  }\r\n\r\n  handleDoneEditingProject(arrayId, id, values){\r\n    let projects = this.props.data[arrayId].slice()\r\n    let breaks = this.props.data.breaks\r\n    let settings = this.props.data.settings\r\n\r\n    let index = projects.findIndex(project => project.id === parseInt(id))\r\n\r\n    // undefined handling\r\n    if(index < 0) return\r\n\r\n    // break the reference (keep the reference for plannedTime if it hasn't changed)\r\n    let changedProject = {}\r\n    Object.keys(projects[index]).forEach(key => {\r\n      changedProject[key] = projects[index][key]\r\n    })\r\n\r\n    // if we're changing something about the timing, break the reference to plannedTime too\r\n    if(\r\n      arrayId !== \"defaultProjects\" && (\r\n        changedProject.estimatedDuration !== values.duration ||\r\n        !TimeCalc.areIdentical(changedProject.plannedTime.start, values.startTime)\r\n      )\r\n    ){\r\n      changedProject.plannedTime = Object.assign({}, changedProject.plannedTime)\r\n    }\r\n\r\n    projects.splice(index, 1) // breaking the reference pt. 2\r\n\r\n    // if the user increased the startTime, save a new break\r\n    if(\r\n      settings.detectBreaksAutomatically &&\r\n      index !== 0 &&\r\n      arrayId !== \"defaultProjects\" &&\r\n      TimeCalc.isBiggerThan(values.startTime, changedProject.plannedTime.start, false, true)\r\n    ){\r\n      breaks = this.addBreak(\r\n        TimeCalc.suggestStartTime(projects[index - 1].plannedTime.end, projects[index - 1].estimatedDuration, settings),\r\n        values.startTime\r\n      )\r\n    }\r\n\r\n    // if the user decreased the startTime, check to see if any breaks need to adjusted\r\n    if(\r\n      settings.detectBreaksAutomatically &&\r\n      index !== 0 &&\r\n      arrayId !== \"defaultProjects\" &&\r\n      TimeCalc.isBiggerThan(changedProject.plannedTime.start, values.startTime, false, true)\r\n    ){\r\n      for(let i = 0; i < breaks.length; i++){\r\n        // if an autodetected break was previously right before the project being editted, adjust it\r\n        if(\r\n          breaks[i].autodetected &&\r\n          TimeCalc.areIdentical(changedProject.plannedTime.start, breaks[i].endTime)\r\n        ){\r\n          breaks[i].endTime = values.startTime\r\n        }\r\n      }\r\n    }\r\n\r\n    // check if any time values were changed (so that we don't unnecessarily recalculate project times)\r\n    let durationChanged, startTimeChanged\r\n    if(arrayId !== \"defaultProjects\"){\r\n      durationChanged = parseInt(changedProject.estimatedDuration) !== parseInt(values.duration)\r\n      startTimeChanged = !TimeCalc.areIdentical(changedProject.plannedTime.start, values.startTime)\r\n    }\r\n\r\n    // change the values\r\n    changedProject.name = values.name\r\n    changedProject.estimatedDuration = values.duration\r\n    if(arrayId === \"defaultProjects\") changedProject.days = values.days\r\n    else changedProject.plannedTime.start = values.startTime\r\n\r\n    // insert the changedProject back into the array\r\n    projects.splice(index, 0, changedProject)\r\n\r\n    let changes // what was modified\r\n\r\n    // if the user wants to update all times, do so\r\n    if(this.props.data.settings.updateTimesAfterEdit && (durationChanged || startTimeChanged)){\r\n      // break the references of all projects after the one that was changed (their times will be changed)\r\n      for(let i = index + 1; i < projects.length; i++){\r\n        projects[i] = Object.assign({}, projects[i])\r\n        projects[i].plannedTime = Object.assign({}, projects[i].plannedTime)\r\n      }\r\n\r\n      // recalculate the timing\r\n      let startTime = index === 0 ? values.startTime : Object.assign({}, this.props.data.startTime)\r\n      projects = setTimesForProjects(projects, settings, breaks, startTime)\r\n    }\r\n\r\n    // else simply adjust the endTime\r\n    else{\r\n      changes = {[arrayId]: id}\r\n      if(arrayId !== \"defaultProjects\"){\r\n        projects[index].plannedTime.end = TimeCalc.add(projects[index].plannedTime.start, projects[index].estimatedDuration)\r\n      }\r\n    }\r\n\r\n    // create the newState object\r\n    let newState = {[arrayId]: projects}\r\n\r\n    // if the startTime of the first project was changed, adjust this.props.data.startTime accordingly\r\n    if(\r\n      index === 0 &&\r\n      arrayId !== \"defaultProjects\" &&\r\n      !TimeCalc.areIdentical(this.props.data.startTime, changedProject.plannedTime.start)\r\n    ){\r\n      newState.startTime = changedProject.plannedTime.start\r\n    }\r\n\r\n    // save to state\r\n    this.props.update(newState, changes)\r\n  }\r\n\r\n  // state change = starting, pausing etc.\r\n  handleProjectStateChange(id, val, progress){\r\n    let projects = this.props.data.projects.slice()\r\n\r\n    let index = projects.findIndex(project => project.id === parseInt(id))\r\n\r\n    // break the reference\r\n    let changedProject = Object.assign({}, projects[index])\r\n    projects.splice(index, 1)\r\n\r\n    // set the state of the changed project\r\n    let prevProjState = changedProject.state\r\n    changedProject.state = val\r\n\r\n    // if it's being paused, set progress\r\n    if(val === \"paused\" && !isNaN(parseInt(progress))){\r\n      changedProject = this.handleProjectPause(changedProject, progress)\r\n    }\r\n\r\n    // if it's being changed to workingOnIt, save current time\r\n    if(val === \"workingOnIt\"){\r\n      changedProject.startedWorkingOnIt = Object.assign({},\r\n        {...this.props.currentTime, s: new Date().getSeconds()}\r\n      )\r\n\r\n      // loop through the other projects, pause any other projects with state === \"workingOnIt\"\r\n      projects.map(project => {\r\n        if(project.state === \"workingOnIt\" && project.id !== id){\r\n          // calculate progress\r\n          let progress = TimeCalc.subtractToMinutes(\r\n            {...this.props.currentTime, s: new Date().getSeconds()},\r\n            project.startedWorkingOnIt,\r\n            true\r\n          )\r\n          if(project.progress) progress += parseInt(project.progress)\r\n\r\n          // pause\r\n          project.state = \"paused\"\r\n          return this.handleProjectPause(project, progress)\r\n        }\r\n\r\n        return project\r\n      })\r\n    }\r\n\r\n    // if the state is being changed to done but the its progress is significantly more than its duration,\r\n    // let the user decide whether to increase the duration or not (using a Snackbar)\r\n    if(val === \"done\"){\r\n      let progress = 0\r\n      let duration = parseInt(changedProject.estimatedDuration)\r\n      if(changedProject.progress) progress += parseInt(changedProject.progress)\r\n      if(changedProject.startedWorkingOnIt){\r\n        progress += TimeCalc.subtractToMinutes(\r\n          {...this.props.currentTime, s: new Date().getSeconds()},\r\n          changedProject.startedWorkingOnIt,\r\n          true\r\n        )\r\n      }\r\n\r\n      if(progress > (duration * 1.1) && prevProjState !== \"paused\"){\r\n        let {roundTo} = this.props.data.settings\r\n        let suggestedDuration = Math.round(progress / roundTo) * roundTo\r\n\r\n        if(suggestedDuration !== duration){ // if duration is 5 and progress is 6, we'd offer the user to go from 5 to 5 (which is nonsense)\r\n          this.setState({temp: {...this.state.temp, snackbar: {\r\n            open: true,\r\n            message: `${changedProject.name} took way longer than expected. Do you want us to change its estimated duration to make it reflect how long it really took? (from ${duration} minutes to ${suggestedDuration} minutes)`,\r\n            action: () => {\r\n              this.handleDoneEditingProject(\"projects\", id, {\r\n                name: changedProject.name,\r\n                duration: suggestedDuration,\r\n                startTime: changedProject.plannedTime.start\r\n              })\r\n            },\r\n            buttonLabel: \"Change\"\r\n          }}})\r\n        }\r\n      }\r\n    }\r\n\r\n    let changes = {projects: [id]}\r\n\r\n    projects.splice(index, 0, changedProject)\r\n\r\n    this.props.update({projects}, changes)\r\n  }\r\n\r\n  handleCurrentTimeChange = time => {\r\n    this.props.onCurrentTimeChange(time)\r\n    setTimeout(this.setShowResetButton)\r\n  }\r\n\r\n  resetState = () => {\r\n    if(window.confirm(\"Are you sure you want to delete all your projects?\")){\r\n      this.props.update({\r\n        projects: [],\r\n        breaks: [],\r\n        mode: \"planning\"\r\n      })\r\n      this.setState({showResetButton: false})\r\n    }\r\n  }\r\n\r\n  // used to close any and all drawers in App\r\n  closeDrawer = (drawerName, dataLabel) => {\r\n    // first check if there isn't anything preventing the drawer from closing (such as an incorrect value that can't be saved)\r\n    if(typeof this.state.temp[\"canClose\" + drawerName] === \"undefined\" ||\r\n      this.state.temp[\"canClose\" + drawerName] ||\r\n      window.confirm(`Some of the ${dataLabel} weren't editted properly. If you close this now, those changes will be lost`)\r\n    ){\r\n      // close the drawer (by adjusting this.state.temp)\r\n      let newTemp = this.state.temp\r\n      newTemp[\"open\" + drawerName] = false\r\n      newTemp[\"canClose\" + drawerName] = undefined\r\n      if(drawerName === \"DefaultProjectsDrawer\") newTemp.defaultProjectsDrawerRemoveTransform = false\r\n      this.setState(newTemp)\r\n    }\r\n  }\r\n\r\n  saveBreaks = (breaks, canClose, changes) => {\r\n    // first check if the breaks can be saved (in other words if there are no invalid values)\r\n    if(typeof canClose === \"undefined\" || canClose){\r\n      let projects = this.props.data.projects.slice()\r\n\r\n      // adjust the timing of projects accordingly\r\n      if(this.props.data.projects.length){\r\n        projects = setTimesForProjects(projects, this.props.data.settings, breaks, this.props.data.startTime)\r\n      }\r\n\r\n      let temp = this.state.temp\r\n      if(typeof canClose !== \"undefined\") temp.canCloseBreaksDrawer = canClose\r\n\r\n      this.setState({temp})\r\n      this.props.update({projects, breaks: JSON.parse(JSON.stringify(breaks))}, changes)\r\n    }\r\n    else this.setState({temp: {...this.state.temp, canCloseBreaksDrawer: false}})\r\n  }\r\n\r\n  // when the user dissmisses (clicks the close icon on) the panel that suggests that they sign in\r\n  handleSignInDismiss = () => {\r\n    this.setState({temp: {...this.state.temp, signInDissmissed: true}})\r\n\r\n    // used to offer the user the \"Don't remind me again\" option when dismissing the panel for a second time\r\n    if(!localStorage.userHasDismissedSignInBefore){\r\n      localStorage.userHasDismissedSignInBefore = true\r\n    }\r\n\r\n    // show the panel again in an hour\r\n    this.showSignInAgainTimeout = setTimeout(() => {\r\n      this.setState({temp: {...this.state.temp, signInDissmissed: null}})\r\n    }, 60*60*1000)\r\n  }\r\n\r\n  // when the user clicks \"Don't remind me again\" on the SignInPanel\r\n  handleSignInDontRemindMeAgain = () => {\r\n    this.setState({temp: {...this.state.temp, signInDissmissed: null}})\r\n    localStorage.removeItem(\"userHasDismissedSignInBefore\")\r\n    localStorage.dontShowSignInPanelAgain = true\r\n  }\r\n\r\n  openDefaultProjectsDrawer = () => {\r\n    this.setState({temp: {...this.state.temp, openDefaultProjectsDrawer: true}})\r\n    setTimeout(() => {\r\n      this.setState({temp: {...this.state.temp, defaultProjectsDrawerRemoveTransform: true}})\r\n    }, 400)\r\n  }\r\n\r\n  // handles mobile navigation\r\n  changeView(view, change, additionalProps){\r\n    // if the change is positive (we're moving into 'view')\r\n    if(change){\r\n      // create the new path including the GET parameters\r\n      let newPath = \"/\" + view\r\n      if(additionalProps && typeof additionalProps.stopPropagation !== \"function\"){\r\n        newPath += \"?\"\r\n\r\n        let isFirst = true\r\n        for(let [key, value] of Object.entries(additionalProps)){\r\n\r\n          // add \"&\" (unless it would be before the first param)\r\n          if(isFirst) isFirst = false\r\n          else newPath += \"&\"\r\n\r\n          newPath += key + \"=\" + value\r\n        }\r\n      }\r\n      this.props.history.push(newPath)\r\n    }\r\n    // if the change is negative (we're returning from 'view')\r\n    else{\r\n      let pathArr = this.props.history.location.pathname.split(\"/\")\r\n      pathArr.splice(-1, 1)\r\n      this.props.history.push(pathArr.join(\"/\"))\r\n    }\r\n  }\r\n\r\n  // used when the user adds a break in BreaksDrawer/BreaksView\r\n  addBreak = newBreak => {\r\n    let { breaks } = this.props.data\r\n\r\n    let newId = makeNewId(breaks, \"breaks\")\r\n\r\n    breaks.push({\r\n      id: newId,\r\n      ...newBreak\r\n    })\r\n\r\n    this.props.update({breaks}, {breaks: newId})\r\n  }\r\n\r\n  // when the user wants to save a break, convert and save it\r\n  handleDoneEditingBreak(id, inputValues){\r\n    let breaks = this.props.data.breaks.slice()\r\n\r\n    let index = breaks.findIndex(obj => obj.id === parseInt(id))\r\n\r\n    if(index < 0) return\r\n\r\n    let obj = JSON.parse(JSON.stringify(breaks[index]))\r\n\r\n    obj.name = inputValues.name\r\n    obj.startTime = inputValues.startTime\r\n    obj.endTime = inputValues.endTime\r\n\r\n    breaks.splice(index, 1, obj)\r\n\r\n    this.props.update({breaks}, {breaks: id})\r\n  }\r\n\r\n  deleteBreak(id){\r\n    let breaks = this.props.data.breaks\r\n\r\n    let index = breaks.findIndex(obj => obj.id === parseInt(id))\r\n\r\n    breaks.splice(index, 1)\r\n\r\n    this.props.update({breaks}, {breaks: id})\r\n  }\r\n\r\n  // the dateString is eg. \"2019-05-06\" and is used as the key in productivityPercentages\r\n  getDateString = () => {\r\n    let date\r\n    // if it's between midnight and 5 am, use the previous day's date string\r\n    if(TimeCalc.isBiggerThan(5*60, this.props.currentTime, true)){\r\n      date = new Date(Date.now() - (24*60*60*1000))\r\n    }\r\n    // else simply use the current one\r\n    else date = new Date()\r\n\r\n    // convert the date into a date string (to save space)\r\n    return date.toISOString().split(\"T\")[0]\r\n  }\r\n\r\n  closeSnackbar = () => this.setState({temp: {...this.state.temp, snackbar: {open: false}}})\r\n\r\n  // pausing is different than other state changes because we have to consider the progress that the user set\r\n  // that requires some additional functionality that needs to be used in 2 part of handleProjectStateChange\r\n  handleProjectPause = (changedProject, progress) => {\r\n    changedProject.progress = progress\r\n\r\n    // if the user set progress significantly higher than the total duration, adjust the duration\r\n    let duration = parseInt(changedProject.estimatedDuration)\r\n    if(progress > (duration * 1.1)){\r\n      let {roundTo} = this.props.data.settings\r\n      let suggestedDuration = Math.round(progress / roundTo) * roundTo\r\n\r\n      if(suggestedDuration !== duration){ // prevent situations like duration = 5; progress = 6\r\n        changedProject.estimatedDuration = suggestedDuration\r\n\r\n        // show a Snackbar to let the user revert the change\r\n        this.setState({temp: {...this.state.temp, snackbar: {\r\n          open: true,\r\n          message: `${changedProject.name}'s duration was changed from ${duration} to ${changedProject.estimatedDuration}`,\r\n          action: () => {\r\n            this.handleDoneEditingProject(\"projects\", changedProject.id, {\r\n              name: changedProject.name,\r\n              duration,\r\n              startTime: changedProject.plannedTime.start\r\n            })\r\n          },\r\n          buttonLabel: \"Undo\"\r\n        }}})\r\n      }\r\n    }\r\n\r\n    return changedProject\r\n  }\r\n\r\n  render() {\r\n    // certain mobile \"routing\" is actually handled within the App component to let the different views use App's methods\r\n    if(this.props.history.location.pathname === \"/add\"){\r\n      // getting the GET parameters of the current path\r\n      let getParams = getGetParams(this.props.location.search)\r\n\r\n      // set certain props depending on the type of object the user wants to add\r\n      let title, arrayId, closeFunc, defaultColorIndex\r\n      switch(getParams.type){\r\n        case \"default\":\r\n          arrayId = \"defaultProjects\"\r\n          title = \"Add a repetitive project\"\r\n          closeFunc = this.changeView.bind(this, \"defaultProjects\", true)\r\n          defaultColorIndex = this.props.data.defaultColorIndexDefaultProjects\r\n          break\r\n        case \"break\":\r\n          arrayId = \"breaks\"\r\n          title = \"Add a break\"\r\n          closeFunc = this.changeView.bind(this, \"breaks\", true)\r\n          break\r\n        default:\r\n          arrayId = \"projects\"\r\n          closeFunc = this.changeView.bind(this, \"add\", false)\r\n          defaultColorIndex = this.props.data.defaultColorIndex\r\n      }\r\n\r\n      return (\r\n        <React.Suspense fallback={<LoadingFallback/>}>\r\n          <AddProjectView\r\n            settings={this.props.data.settings}\r\n            defaultColorIndex={defaultColorIndex}\r\n            showErrors={this.state.showErrors}\r\n            currentTime={this.props.currentTime}\r\n            lastProject={this.props.data.projects[this.props.data.projects.length - 1]}\r\n            onAddProject={this.addProject.bind(this, arrayId)}\r\n            onAddBreak={this.addBreak}\r\n            type={getParams.type}\r\n            close={closeFunc}\r\n            title={title}\r\n          />\r\n        </React.Suspense >\r\n      )\r\n    }\r\n\r\n    if(\r\n      this.props.history.location.pathname === \"/edit\" &&\r\n      this.props.data.breaks // only open after the data is loaded to prevent errors\r\n    ){\r\n      // parse GET params of the current path\r\n      let getParams = getGetParams(this.props.location.search)\r\n\r\n      let { type } = getParams\r\n\r\n      // set certain props depending on what kind of object the user wants to edit\r\n      let arrayId, close\r\n      switch(type){\r\n        case \"default\":\r\n          arrayId = \"defaultProjects\"\r\n          close = this.changeView.bind(this, \"defaultProjects\", true)\r\n          break\r\n        case \"break\":\r\n          arrayId = \"breaks\"\r\n          close = this.changeView.bind(this, \"breaks\", true)\r\n          break\r\n        default:\r\n          arrayId = \"projects\"\r\n          close = this.changeView.bind(this, \"edit\", false)\r\n      }\r\n\r\n      let id = getParams.id\r\n\r\n      let array = this.props.data[arrayId]\r\n\r\n      let index = array.findIndex(obj => obj.id.toString() === id)\r\n\r\n      let obj = array[index] // this is the object the user wants to edit\r\n      if(obj){ // handle undefined\r\n\r\n        // convert it into a differently structured object\r\n        let inputValues = {name: obj.name}\r\n        if(type === \"default\") inputValues.days = obj.days\r\n        else inputValues.startTime = obj.plannedTime ? obj.plannedTime.start : obj.startTime\r\n        if(type === \"break\"){\r\n          inputValues.endTime = obj.endTime\r\n        }\r\n        else{\r\n          inputValues.duration = obj.estimatedDuration\r\n          inputValues.color = obj.color\r\n        }\r\n\r\n        // set and bind the relevant functions\r\n        let deleteFunc, doneEditingFunc\r\n        if(type === \"break\"){\r\n          deleteFunc = this.deleteBreak.bind(this, id)\r\n          doneEditingFunc = this.handleDoneEditingBreak.bind(this, id)\r\n        }\r\n        else{\r\n          deleteFunc = this.deleteProject.bind(this, arrayId, id)\r\n          doneEditingFunc = this.handleDoneEditingProject.bind(this, arrayId, id)\r\n        }\r\n\r\n        return (\r\n          <React.Suspense fallback={<LoadingFallback/>}>\r\n            <EditProjectView\r\n              settings={this.props.data.settings}\r\n              inputValues={inputValues}\r\n              delete={deleteFunc}\r\n              onDoneEditing={doneEditingFunc}\r\n              close={close}\r\n              type={type}\r\n            />\r\n          </React.Suspense>\r\n        )\r\n      }\r\n    }\r\n\r\n    if(\r\n      this.props.history.location.pathname === \"/breaks\"&&\r\n      this.props.data.breaks\r\n    ){\r\n      return (\r\n        <React.Suspense fallback={<LoadingFallback/>}>\r\n          <BreaksView\r\n            breaks={this.props.data.breaks}\r\n            changeView={this.changeView.bind(this)}\r\n          />\r\n        </React.Suspense>\r\n      )\r\n    }\r\n\r\n    if(\r\n      this.props.history.location.pathname === \"/defaultProjects\" &&\r\n      this.props.data.defaultProjects\r\n    ){\r\n      return (\r\n        <React.Suspense fallback={<LoadingFallback/>}>\r\n          <DefaultProjectsView\r\n            projects={this.props.data.defaultProjects}\r\n            settings={this.props.data.settings}\r\n            defaultColorIndex={this.props.data.defaultColorIndexDefaultProjects}\r\n            useDefaultProjects={this.props.data.useDefaultProjects}\r\n            onColorChange={this.handleColorChange.bind(this, \"defaultProjects\")}\r\n            onDoneEditing={this.handleDoneEditingProject.bind(this, \"defaultProjects\")}\r\n            onAddProject={this.addProject.bind(this, \"defaultProjects\")}\r\n            onDeleteProject={this.deleteProject.bind(this, \"defaultProjects\")}\r\n            onDragEnd={this.handleDragEnd.bind(this, \"defaultProjects\")}\r\n            onUseDefaultProjectsChange={e => {this.props.update({useDefaultProjects: e.target.checked})}}\r\n            startEditingMobile={id => {\r\n              this.changeView(\"edit\", true, {type: \"default\", id})\r\n            }}\r\n            changeView={this.changeView.bind(this)}\r\n          />\r\n        </React.Suspense>\r\n      )\r\n    }\r\n\r\n    let {allProjectsDone} = this.state\r\n\r\n    // merge showErrors from App and Router\r\n    let showErrors = {\r\n      ...this.props.showErrors,\r\n      ...this.state.showErrors\r\n    }\r\n\r\n    return (\r\n      <IsMobileContext.Consumer>\r\n        {isMobile => (\r\n          <Grid\r\n            className=\"container\"\r\n            onKeyDown={this.handleRootKeyDown}\r\n            tabIndex=\"0\"\r\n            autoselect=\"true\"\r\n          >\r\n            {!isMobile && (\r\n              <React.Suspense fallback={<LoadingFallback/>}>\r\n                <ModeSwitch\r\n                  mode={this.props.data.mode}\r\n                  onModeChange={this.props.changeMode}>\r\n                  <TimeStats\r\n                    currentTime={this.props.currentTime}\r\n                    onCurrentTimeChange={this.handleCurrentTimeChange}\r\n                    endTime={this.props.data.endTime}\r\n                    projects={this.props.data.projects}\r\n                    breaks={this.props.data.breaks}\r\n                    settings={this.props.data.settings}\r\n                    startTime={this.props.data.startTime}\r\n                    realEndTime={this.props.data.realEndTime}\r\n                  />\r\n                </ModeSwitch>\r\n              </React.Suspense>\r\n            )}\r\n            <Grid container>\r\n              <SettingsContext.Provider value={this.props.data.settings}>\r\n                <ProjectsTable\r\n                  mode={this.props.data.mode}\r\n                  projects={this.props.data.projects}\r\n                  settings={this.props.data.settings}\r\n                  currentTime={this.props.currentTime}\r\n                  defaultColorIndex={this.props.data.defaultColorIndex}\r\n                  showErrors={showErrors}\r\n                  onColorChange={this.handleColorChange.bind(this, \"projects\")}\r\n                  onDoneEditing={this.handleDoneEditingProject.bind(this, \"projects\")}\r\n                  onAddProject={this.addProject.bind(this, \"projects\")}\r\n                  onProjectStateChange={this.handleProjectStateChange.bind(this)}\r\n                  onDeleteProject={this.deleteProject.bind(this, \"projects\")}\r\n                  onDragEnd={this.handleDragEnd.bind(this, \"projects\")}\r\n                  startEditingMobile={id => {\r\n                    this.changeView(\"edit\", true, {id})\r\n                  }}\r\n                />\r\n                {\r\n                  this.props.data.mode === \"planning\" ?\r\n                  // planning mode\r\n                  (\r\n                    <React.Fragment>\r\n                      <div id=\"setEndTime\">\r\n                        <label htmlFor=\"endTimeHoursInput\">\r\n                          {isMobile ? \"End time\" : \"Time when you want to stop working\"}:\r\n                        </label>\r\n                        <TimeSetter\r\n                          onChange={this.handleEndTimeChange}\r\n                          value={this.props.data.endTime}\r\n                          firstInputId=\"endTimeHoursInput\"\r\n                          showError={showErrors.endTime}\r\n                        />\r\n                      </div>\r\n                      <Grid container justify=\"space-around\">\r\n                        {\r\n                          !isMobile && (\r\n                            <Grid>\r\n                              <Button\r\n                                className=\"planningSecondaryButton\"\r\n                                onClick={() => {\r\n                                  this.setState({temp: {...this.state.temp, openBreaksDrawer: true}})\r\n                                }}\r\n                                style={{marginBottom: \"1rem\"}}>\r\n                                <PauseIcon color=\"primary\" />\r\n                                Edit breaks\r\n                              </Button>\r\n                            </Grid>\r\n                          )\r\n                        }\r\n                        <Grid>\r\n                          <Button\r\n                            onClick={() => {this.props.changeMode(\"working\")}}\r\n                            variant=\"contained\"\r\n                            color=\"primary\">\r\n                            <StartIcon />\r\n                            Let's get to work!\r\n                          </Button>\r\n                        </Grid>\r\n                        {\r\n                          !isMobile && (\r\n                            <Grid>\r\n                              <Button\r\n                                className=\"planningSecondaryButton\"\r\n                                onClick={this.openDefaultProjectsDrawer}\r\n                                style={{marginBottom: \"1rem\"}}>\r\n                                <AutorenewIcon color=\"primary\" />\r\n                                Repetitive projects\r\n                              </Button>\r\n                            </Grid>\r\n                          )\r\n                        }\r\n                      </Grid>\r\n                      <Drawer\r\n                        id=\"BreaksDrawer\"\r\n                        anchor=\"bottom\"\r\n                        open={this.state.temp.openBreaksDrawer && !isMobile}\r\n                        onClose={() => {this.closeDrawer(\"BreaksDrawer\", \"breaks\")}}\r\n                      >\r\n                        <BreaksDrawer\r\n                          breaks={this.props.data.breaks}\r\n                          currentTime={this.props.currentTime}\r\n                          onSave={this.saveBreaks}\r\n                          onClose={() => {this.closeDrawer(\"BreaksDrawer\", \"breaks\")}}\r\n                        />\r\n                      </Drawer>\r\n                      <Drawer\r\n                        className={\r\n                          this.state.temp.defaultProjectsDrawerRemoveTransform ?\r\n                          \"defaultProjectsDrawerRemoveTransform\" : null\r\n                        }\r\n                        anchor=\"bottom\"\r\n                        open={this.state.temp.openDefaultProjectsDrawer && !isMobile}\r\n                        onClose={() => {this.closeDrawer(\"DefaultProjectsDrawer\", \"projects\")}}\r\n                      >\r\n                        <DefaultProjectsDrawer\r\n                          projects={this.props.data.defaultProjects}\r\n                          settings={this.props.data.settings}\r\n                          defaultColorIndex={this.props.data.defaultColorIndexDefaultProjects}\r\n                          useDefaultProjects={this.props.data.useDefaultProjects}\r\n                          onClose={() => {this.closeDrawer(\"DefaultProjectsDrawer\", \"projects\")}}\r\n                          onColorChange={this.handleColorChange.bind(this, \"defaultProjects\")}\r\n                          onDoneEditing={this.handleDoneEditingProject.bind(this, \"defaultProjects\")}\r\n                          onAddProject={this.addProject.bind(this, \"defaultProjects\")}\r\n                          onDeleteProject={this.deleteProject.bind(this, \"defaultProjects\")}\r\n                          onDragEnd={this.handleDragEnd.bind(this, \"defaultProjects\")}\r\n                          onUseDefaultProjectsChange={e => {this.props.update({useDefaultProjects: e.target.checked})}}\r\n                          startEditingMobile={id => {\r\n                            this.changeView(\"edit\", true, {id})\r\n                          }}\r\n                        />\r\n                      </Drawer>\r\n                    </React.Fragment>\r\n                  )\r\n                  :\r\n                  // working mode\r\n                  (\r\n                    allProjectsDone && (\r\n                      <React.Suspense fallback={<LoadingFallback/>}>\r\n                        <Congrats\r\n                          productivityPercentages={this.props.data.productivityPercentages}\r\n                          allProjectsDone={this.state.allProjectsDone}\r\n                          totalTimeWorkedString={this.state.totalTimeWorkedString}\r\n                          dateString={this.getDateString()}\r\n                        />\r\n                      </React.Suspense>\r\n                    )\r\n                  )\r\n                }\r\n                {this.state.showResetButton && (\r\n                  <Grid container justify=\"flex-end\" alignItems=\"flex-end\" style={{marginTop: \"2rem\"}}>\r\n                    <Button\r\n                      id=\"resetButton\"\r\n                      onClick={this.resetState}\r\n                      variant=\"contained\">\r\n                      Reset\r\n                    </Button>\r\n                  </Grid>\r\n                )}\r\n              </SettingsContext.Provider>\r\n            </Grid>\r\n            {!isMobile && (\r\n              <React.Suspense fallback={<LoadingFallback/>}>\r\n                <Link id=\"linkToSettings\" to=\"/settings\" aria-label=\"Settings\" title=\"Settings\">\r\n                  <SettingsIcon />\r\n                </Link>\r\n                <DropdownMenu\r\n                  connect={this.props.connect}\r\n                  disconnect={this.props.disconnect}\r\n                  history={this.props.history}\r\n                  loggedIn={this.props.loggedIn}\r\n                  data={localStorage.devUnlocked ? this.props.data : {}}\r\n                  update={localStorage.devUnlocked ? this.props.update : {}}\r\n                />\r\n              </React.Suspense>\r\n            )}\r\n            <Slide\r\n              direction=\"right\"\r\n              in={\r\n                !this.props.loggedIn &&\r\n                !this.state.temp.dontShowSignInYet &&\r\n                !this.state.temp.signInDissmissed &&\r\n                !localStorage.dontShowSignInPanelAgain &&\r\n                !this.props.disconnected\r\n              }\r\n              mountOnEnter unmountOnExit\r\n            >\r\n              <SignInPanel\r\n                connect={this.props.connect}\r\n                dismiss={this.handleSignInDismiss}\r\n                showDontRemindMeAgain={localStorage.userHasDismissedSignInBefore}\r\n                dontRemindMeAgain={this.handleSignInDontRemindMeAgain}\r\n              />\r\n            </Slide>\r\n            {isMobile && this.props.data.mode === \"planning\" && (\r\n              <React.Suspense fallback={<LoadingFallback/>}>\r\n                <AddFab\r\n                  onClick={this.changeView.bind(this, \"add\", true)}\r\n                />\r\n              </React.Suspense>\r\n            )}\r\n\r\n            <Snackbar\r\n              anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\r\n              open={this.state.temp.snackbar.open}\r\n              autoHideDuration={6000}\r\n              onClose={this.closeSnackbar}\r\n              ContentProps={{'aria-describedby': 'message-id',}}\r\n              message={<span id=\"message-id\">{this.state.temp.snackbar.message}</span>}\r\n              action={[\r\n                <Button key=\"action\" color=\"secondary\" size=\"small\"\r\n                  onClick={() => {\r\n                    this.state.temp.snackbar.action()\r\n                    this.closeSnackbar()\r\n                  }}\r\n                  children={this.state.temp.snackbar.buttonLabel || \"\"}\r\n                />,\r\n                <IconButton\r\n                  key=\"close\"\r\n                  aria-label=\"Close\"\r\n                  color=\"inherit\"\r\n                  onClick={this.closeSnackbar}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>,\r\n              ]}\r\n            />\r\n          </Grid>\r\n        )}\r\n      </IsMobileContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './css/ColorPicker.css'\r\n\r\n// the colored circle that both displays and edits the color of the project\r\nexport default class ColorPicker extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {}\r\n\r\n    this.colorInput = React.createRef()\r\n  }\r\n\r\n  render = () => (\r\n    <span className=\"ColorPicker\">\r\n      <input\r\n        className=\"colorInput\"\r\n        ref={input => this.colorInput = input}\r\n        type=\"color\"\r\n        aria-label=\"Color\"\r\n        value={this.props.value}\r\n        onChange={e => {this.props.onChange(e.target.value)}}/>\r\n      <svg\r\n        width={this.props.xl ? 50 : 20}\r\n        height={this.props.xl ? 30 : 20}\r\n        onClick={() => {this.colorInput.click()}}\r\n      >\r\n        {this.props.xl ? (\r\n          <rect width=\"50\" height=\"30\" rx=\"5\" ry=\"5\" style={{fill: this.props.value}} />\r\n        ) : (\r\n          <circle cx=\"10\" cy=\"10\" r=\".5rem\" fill={this.props.value} />\r\n        )}\r\n\r\n      </svg>\r\n    </span>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport LoadingFallback from './LoadingFallback'\r\nimport { SettingsContext, IsMobileContext } from './_Context'\r\nimport './css/TimeSetter.css'\r\nconst TimeSetterDesktop = React.lazy(() => import('./TimeSetterDesktop'))\r\nconst TimeSetterMobile = React.lazy(() => import('./TimeSetterMobile'))\r\n\r\n// just a wrapper-ish that decides whether we should display the mobile or the desktop version\r\nconst TimeSetter = props => (\r\n  <SettingsContext.Consumer>\r\n    {settings => (\r\n      <IsMobileContext.Consumer>\r\n        {isMobile => (\r\n          <React.Suspense fallback={<LoadingFallback/>}>\r\n            {isMobile ? (\r\n              <TimeSetterMobile\r\n                mode={settings.timeFormat24H ? \"24h\" : \"12h\"}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                error={\r\n                  props.hError ||\r\n                  props.mError ||\r\n                  props.showErrorProp\r\n                }\r\n              />\r\n            ) : (\r\n              <TimeSetterDesktop\r\n                onChange={props.onChange}\r\n                value={props.value}\r\n                firstInputId={props.firstInputId}\r\n                hError={props.hError}\r\n                mError={props.mError}\r\n                onEnterPress={props.onEnterPress}\r\n                settings={settings}\r\n              />\r\n            )}\r\n          </React.Suspense>\r\n        )}\r\n      </IsMobileContext.Consumer>\r\n    )}\r\n  </SettingsContext.Consumer>\r\n)\r\n\r\nexport default TimeSetter\r\n","import TimeCalc from './TimeCalc'\r\nimport validationRegex from './validationRegex'\r\n\r\n// validates the entire project/defaultProject object\r\nexport function projectValidation(project, dontValidateStartTime = false){\r\n  let error = []\r\n  if(project.name === \"\") error.push(\"name\")\r\n  if(\r\n    project.duration === \"\" ||\r\n    isNaN(project.duration) ||\r\n    project.duration > 1440 ||\r\n    project.duration <= 0\r\n  ) error.push(\"duration\")\r\n  if(!dontValidateStartTime){ // in other words if the object is a project, not a defaultProject\r\n    if(project.startTime.h === \"\" || isNaN(project.startTime.h)) error.push(\"startTimeH\")\r\n    if(project.startTime.m === \"\" || isNaN(project.startTime.m)) error.push(\"startTimeM\")\r\n  }\r\n\r\n  if(error.length) return {valid: false, errors: error} // if there were errors, validation failed\r\n  else return {valid: true}\r\n}\r\n\r\n// validates a single input\r\nexport function inputValidation(id, val){\r\n  if(id === \"name\" && val.length > 30) return false\r\n  if(id === \"duration\" && ((isNaN(val) && val !== \"\") || val < 0)) return false\r\n  if(validationRegex.test(val)) return false // blocks characters that could cause trouble in the stringified JSON\r\n\r\n  return true\r\n}\r\n\r\n// validates a break\r\nexport function breakValidation(breakInfo){\r\n  // check all that all the requirements are met\r\n  let error = []\r\n  if(breakInfo.name === \"\") error.push(\"name\")\r\n  if(breakInfo.startTime.h === \"\" || isNaN(breakInfo.startTime.h) || breakInfo.startTime.h < 0) error.push(\"startTimeH\")\r\n  if(breakInfo.startTime.m === \"\" || isNaN(breakInfo.startTime.m) || breakInfo.startTime.m < 0) error.push(\"startTimeM\")\r\n  if(breakInfo.endTime.h === \"\" || isNaN(breakInfo.endTime.h) || breakInfo.endTime.h < 0) error.push(\"endTimeH\")\r\n  if(breakInfo.endTime.m === \"\" || isNaN(breakInfo.endTime.m) || breakInfo.endTime.m < 0) error.push(\"endTimeM\")\r\n  if(TimeCalc.isBiggerThan(breakInfo.startTime, breakInfo.endTime, false, true)) error.push(\"endTime\")\r\n\r\n  // if there were errors, validation failed, otherwise it succeeded\r\n  if(error.length) return {valid: false, errors: error}\r\n  else return {valid: true}\r\n}\r\n","import React, { Component } from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nexport default class GoogleSignIn extends Component {\r\n  responseGoogle = res => {\r\n    if(res.error){\r\n      console.log(res);\r\n      return\r\n    }\r\n\r\n    // execute as a makrotask to make sure the tab is active when the confirm method fires\r\n    setTimeout(() => {\r\n      if(window.confirm(\"Data syncing is still under beta testing. If you encouter any problems, please send us a bug report. It will only take a minute or two and it helps us a lot with improving the app.\")){\r\n        this.props.connect(res.tokenId)\r\n      }\r\n    }, 50)\r\n  }\r\n\r\n  render = () => (\r\n    <GoogleLogin\r\n      clientId=\"1070394852834-4nunul2jqv2pqn9du9ralgd61220d3c1.apps.googleusercontent.com\"\r\n      buttonText=\"Sign In\"\r\n      onSuccess={this.responseGoogle}\r\n      onFailure={this.responseGoogle}\r\n      render={this.props.render}\r\n    />\r\n  )\r\n}\r\n","// converts the GET parameters from the URL into an object\r\nexport default function getGetParams(locationSearch){\r\n  let getParamsString = locationSearch.substr(1).split(\"&\")\r\n  let getParams = {}\r\n  for(let param of getParamsString){\r\n    let paramArr = param.split(\"=\")\r\n    getParams[paramArr[0]] = paramArr[1]\r\n  }\r\n\r\n  return getParams\r\n}\r\n","import React, { Component } from 'react';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n// used to let the user decide on which days they want to use each defaultProject\r\nexport default class DefaultProjectsDaysDialog extends Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n    // get days from the props, if they arent available, set them all to true (as this is the most common case)\r\n    var days\r\n    if(this.props.project && this.props.project.days) days = this.props.project.days\r\n    else{\r\n      days = []\r\n      for(let i = 0; i < 7; i++) days.push(true)\r\n    }\r\n    this.state = {days}\r\n  }\r\n\r\n  handleChange(i, e){\r\n    let {days} = this.state\r\n    days[i] = e.currentTarget.checked\r\n    this.setState({days})\r\n    this.props.save(days)\r\n  }\r\n\r\n  render = () => (\r\n    <React.Fragment>\r\n      <DialogTitle id=\"DefaultProjectsDaysDialogTitle\">\r\n        Days{this.props.project.name && \" - \" + this.props.project.name}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <FormGroup>\r\n          {[\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"].map((day, i) => (\r\n            <FormControlLabel\r\n              key={i}\r\n              control={\r\n                <Checkbox\r\n                  checked={this.state.days[i]}\r\n                  onChange={this.handleChange.bind(this, i)}\r\n                />\r\n              }\r\n              label={day}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button color=\"primary\" onClick={() => this.props.close()}>\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport TimeCalc from '../util/TimeCalc'\r\nimport DefaultProjectsDaysDialog from '../DefaultProjectsDaysDialog'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { inputValidation } from '../util/validation'\r\n\r\n// used as an HOC for the withAdd and withEdit HOCs to add common functionality (mostly editing and validating fields)\r\nconst withInputFields = WrappedComponent => (\r\n  class withInputFields extends Component{\r\n    constructor(props){\r\n      super(props)\r\n\r\n      // see if the inputValues are already supplied, if not, set them\r\n      let inputValues\r\n      if(this.props.inputValues){\r\n        inputValues = this.props.inputValues\r\n      }\r\n\r\n      else{\r\n        inputValues = {name: \"\"}\r\n\r\n        let { type } = this.props\r\n        // default state depends on the type (project, break or defaultProject?)\r\n        // eg. only defaultProjects have a days property while only breaks have an endTime property etc.\r\n\r\n        let roundTo = this.props.settings.roundTo || 5\r\n\r\n        if(type === \"default\"){\r\n          inputValues.days = []\r\n          for(let i = 0; i < 7; i++) inputValues.days.push(true)\r\n        }\r\n        else{\r\n          // set a default startTime value\r\n          // first try to set a value based on lastProject\r\n          let startTime\r\n          let lastProject = this.props.lastProject\r\n          if(lastProject && lastProject.plannedTime){\r\n            startTime = TimeCalc.suggestStartTime(\r\n              lastProject.plannedTime.end,\r\n              lastProject.estimatedDuration,\r\n              this.props.settings\r\n            )\r\n          }\r\n          else{\r\n            // then try a value based on currentTime\r\n            if(this.props.currentTime && !this.props.currentTime.defaultVal){\r\n              startTime = TimeCalc.round(TimeCalc.add(this.props.currentTime, 15), roundTo)\r\n            }\r\n            // if both fail, simply set the value to 12 PM and mark it as a last resort value\r\n            else startTime = {h: 12, m: 0, pm: true, lastResortValue: true}\r\n          }\r\n\r\n          inputValues.startTime = startTime\r\n        }\r\n\r\n        if(this.props.type === \"break\"){\r\n          inputValues.endTime = TimeCalc.round(TimeCalc.add(inputValues.startTime, 30), roundTo)\r\n        }\r\n        else{\r\n          inputValues.duration = \"\"\r\n\r\n          let color\r\n          if(typeof this.props.defaultColorIndex !== \"undefined\"){\r\n            color = this.props.settings.defaultColors[this.props.defaultColorIndex]\r\n          }\r\n          else color = \"#000000\"\r\n\r\n          inputValues.color = color\r\n        }\r\n      }\r\n\r\n      this.state = {\r\n        inputValues,\r\n        userHasntChangedStartTime: true,\r\n        defaultColorIndex: this.props.defaultColorIndex,\r\n        showErrors: {},\r\n        temp: {dialogProjectId: false} // handles the days dialog of defaultProjects\r\n      }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n      // if the user hasn't changed startTime yet, suggest a new startTime\r\n      // (don't execute if the props haven't loaded yet)\r\n      // eg. if the previous project's duration changes, we want the suggested start time to reflect that\r\n      if(\r\n        this.props.type !== \"default\" &&\r\n        this.state.inputValues.h !== \"\" &&\r\n        this.state.userHasntChangedStartTime &&\r\n        this.props.settings.bufferTimePercentage &&\r\n        this.props.lastProject &&\r\n        !this.props.isDefaultProjects\r\n      ){\r\n        let suggestedStartTime = TimeCalc.suggestStartTime(\r\n          this.props.lastProject.plannedTime.end,\r\n          this.props.lastProject.estimatedDuration,\r\n          this.props.settings\r\n        )\r\n        // only update if the current value is either empty or different from the suggested one\r\n        if(\r\n          this.state.inputValues.startTime.h === \"\" ||\r\n          !TimeCalc.areIdentical(suggestedStartTime, this.state.inputValues.startTime)\r\n        ){\r\n          let inputValues = {...this.state.inputValues, startTime: suggestedStartTime}\r\n\r\n          // if the HOC is used for a braek, suggest an endTime as well\r\n          if(this.props.type === \"break\"){\r\n            let suggestedEndTime = TimeCalc.round(TimeCalc.add(suggestedStartTime, 30), this.props.settings.roundTo)\r\n            inputValues.endTime = suggestedEndTime\r\n          }\r\n\r\n          this.setState({inputValues})\r\n        }\r\n      }\r\n\r\n      // only used if defaultColorIndex (and startTime) are being initialized with data from the localStorage\r\n      // (if the component using the HOC is loaded immediately when the user visits the page\r\n      // as opposed to being loaded after the user clicks a link, this data won't be available in the constructor yet)\r\n      if(\r\n        this.props.type !== \"break\" &&\r\n        !this.props.inputValues &&\r\n        typeof this.state.defaultColorIndex === \"undefined\" &&\r\n        typeof this.props.defaultColorIndex !== \"undefined\" &&\r\n        this.props.settings.defaultColors\r\n      ){\r\n\r\n        let inputValues = this.state.inputValues\r\n\r\n        let defaultColors = this.props.settings.defaultColors\r\n        let defaultColorIndex = this.props.defaultColorIndex\r\n\r\n        // handle the following: defaultColorsIndex is at max and the user deletes the last defaultColor in the settings\r\n        if(defaultColors.length <= defaultColorIndex) defaultColorIndex = 0\r\n\r\n        inputValues.color = defaultColors[defaultColorIndex] // set the correcponding color\r\n\r\n        // handle undefined\r\n        inputValues.color = inputValues.color ? inputValues.color : \"#000000\"\r\n\r\n        this.setState({inputValues, defaultColorIndex})\r\n      }\r\n\r\n      // if currentTime wasn't available when the constructor ran and it was supposed to be used for the initial startTime value\r\n      if(\r\n        this.props.type !== \"default\" &&\r\n        this.state.inputValues.startTime.lastResortValue &&\r\n        this.props.currentTime &&\r\n        this.props.settings.roundTo\r\n      ){\r\n\r\n        // suggest a new startTime\r\n        let {inputValues} = this.state\r\n        let {roundTo} = this.props.settings\r\n        inputValues.startTime = TimeCalc.round(TimeCalc.add(this.props.currentTime, 15), roundTo)\r\n\r\n        // if it's a break, suggest a new endTime as well\r\n        if(this.props.type === \"break\"){\r\n          inputValues.endTime = TimeCalc.round(TimeCalc.add(inputValues.startTime, 30), roundTo)\r\n        }\r\n\r\n        this.setState({inputValues})\r\n      }\r\n    }\r\n\r\n    // handles simple text input changes\r\n    handleInputChange(id, e){\r\n      let val = e.target.value\r\n      if(!inputValidation(id, val)) return\r\n      this.setState({\r\n        inputValues: {...this.state.inputValues, [id]: val},\r\n        showErrors: {...this.state.showErrors, [id]: false}\r\n      })\r\n    }\r\n\r\n    // handles time input changes, can either only change one field (eg. minutes) or the whole time object (if id === \"object\")\r\n    handleTimeInputChange(inputId, id, val){\r\n      let newState = {inputValues: this.state.inputValues, showErrors: this.state.showErrors}\r\n\r\n      if(id === \"object\") newState.inputValues[inputId] = val\r\n      else newState.inputValues[inputId][id] = val\r\n\r\n      // if there was previously an error around the relevant time input, remove it\r\n      // (since this method only gets called after input is validated in the TimeSetter component)\r\n      newState.showErrors[inputId + id.toUpperCase()] = false\r\n      newState.userHasntChangedStartTime = false\r\n\r\n      this.setState(newState)\r\n    }\r\n\r\n    handleColorChange = val => {\r\n      this.setState({inputValues: {...this.state.inputValues, color: val}})\r\n    }\r\n\r\n    // hide/show the dialog that lets you set days for defaultProjects\r\n    toggleDaysDialog = val => this.setState({temp: {...this.state.temp, dialogProjectId: val}})\r\n\r\n    handleDaysChange = (days) => {\r\n      this.setState({inputValues: {...this.state.inputValues, days}})\r\n    }\r\n\r\n    render = () => {\r\n      let wrappedComponent = (\r\n        <WrappedComponent\r\n          {...this.props}\r\n          inputValues={this.state.inputValues}\r\n          showErrors={this.state.showErrors}\r\n          showErrorProp={this.props.showErrors ? this.props.showErrors.noProjects : false}\r\n          onInputChange={this.handleInputChange.bind(this)}\r\n          onTimeInputChange={this.handleTimeInputChange.bind(this)}\r\n          onColorChange={this.handleColorChange}\r\n          setState={this.setState.bind(this)}\r\n          openDaysDialog={this.toggleDaysDialog.bind(this, true)}\r\n        />\r\n      )\r\n\r\n      if(this.props.type === \"default\"){\r\n        let {dialogProjectId} = this.state.temp\r\n\r\n        return (\r\n          <React.Fragment>\r\n            {wrappedComponent}\r\n            <Dialog\r\n              open={dialogProjectId}\r\n              onClose={this.toggleDaysDialog.bind(this, false)}\r\n              aria-labelledby=\"DefaultProjectsDaysDialogTitle\"\r\n            >\r\n              <DefaultProjectsDaysDialog\r\n                project={this.state.inputValues}\r\n                close={this.toggleDaysDialog.bind(this, false)}\r\n                save={this.handleDaysChange}\r\n              />\r\n            </Dialog>\r\n          </React.Fragment>\r\n        )\r\n      }\r\n\r\n      return wrappedComponent\r\n    }\r\n  }\r\n)\r\n\r\nexport default withInputFields\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from './ColorPicker'\r\nimport LoadingFallback from './LoadingFallback'\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport RootRef from '@material-ui/core/RootRef';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport TimeCalc from './util/TimeCalc'\r\nimport './css/ProjectsTableRow.css'\r\nconst ProjectsTableRowEditing = React.lazy(() => import('./ProjectsTableRowEditing'))\r\nconst ProjectsTableRowDisplay = React.lazy(() => import('./ProjectsTableRowDisplay'))\r\n\r\n// used both for diplaying and editing projects (at least in the desktop version)\r\n// used both for projects and defaultProject\r\n// update: this component is now only a \"wrapper\" ish that reders either ProjectsTableRowDisplay or ProjectsTableRowEditing\r\n// it also handles the functionality that these two have in common to DRY the code\r\nexport default class ProjectsTableRow extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {editing: false}\r\n  }\r\n\r\n  render(){\r\n    // are we currently editing or just showing data?\r\n    // also, don't show the editing UI if we're in \"working\" mode\r\n    let showEditing = this.state.editing && this.props.mode === \"planning\"\r\n\r\n    let {isDefaultProjects} = this.props\r\n\r\n    let progress, progressCapped, tableRowStyle = {}\r\n    if(!isDefaultProjects){\r\n      // calculate progress\r\n      if(this.props.row.progress) progress = parseInt(this.props.row.progress)\r\n      else progress = 0\r\n      if(this.props.row.state === \"workingOnIt\"){\r\n        progress += TimeCalc.subtractToMinutes(\r\n          {...this.props.currentTime, s: new Date().getSeconds()},\r\n          this.props.row.startedWorkingOnIt,\r\n          true\r\n        )\r\n      }\r\n\r\n      progressCapped = progress // same as progress except capped at estimatedDuration\r\n      if(progressCapped > this.props.row.estimatedDuration) progressCapped = this.props.row.estimatedDuration\r\n\r\n      let percentageDone\r\n\r\n      if(this.props.row.state === \"done\") percentageDone = 100\r\n      else percentageDone = 100 * progressCapped / this.props.row.estimatedDuration\r\n\r\n      // fills the background of the row with green color, the size of which corresponds to progress as a fraction of duration\r\n      tableRowStyle = {\r\n        backgroundImage: `linear-gradient(to right, #00c8002e, #00c8002e ${percentageDone}%, transparent ${percentageDone}%, transparent 100%)`\r\n      }\r\n    }\r\n\r\n    // get the props that should be passed down\r\n    let passThroughProps\r\n    if(showEditing){\r\n      let {row, settings} = this.props\r\n      let {id} = row\r\n\r\n      let {name, estimatedDuration, color} = row\r\n      let inputValues = {name, duration: estimatedDuration, color}\r\n\r\n      let deleteFunc = this.props.onDeleteProject.bind(this, id)\r\n      let onDoneEditing = this.props.onDoneEditing.bind(this, id)\r\n\r\n      let type\r\n      if(isDefaultProjects){\r\n        type = \"default\"\r\n        inputValues.days = row.days\r\n      }\r\n      else{\r\n        inputValues.startTime = row.plannedTime.start\r\n      }\r\n\r\n      passThroughProps = {settings, inputValues, delete: deleteFunc, onDoneEditing, type, id}\r\n    }\r\n    else{\r\n      let {\r\n        row, mode, isDefaultProjects, settings, currentTime,\r\n        startEditingMobile, onDeleteProject, onProjectStateChange\r\n      } = this.props\r\n      passThroughProps = {\r\n        row, mode, isDefaultProjects, settings, currentTime,\r\n        startEditingMobile, onDeleteProject, onProjectStateChange\r\n      }\r\n    }\r\n\r\n    return (\r\n      <RootRef rootRef={this.props.provided.innerRef}>\r\n        <TableRow\r\n          {...this.props.provided.draggableProps}\r\n          style={/* merging the two style objects */{\r\n            ...this.props.provided.draggableProps.style,\r\n            ...tableRowStyle\r\n          }}\r\n        >\r\n          <TableCell>\r\n            <Icon className=\"dragIcon\" {...this.props.provided.dragHandleProps}>drag_indicator</Icon>\r\n            <ColorPicker value={this.props.row.color} onChange={this.props.onColorChange.bind(this, this.props.row.id)}/>\r\n          </TableCell>\r\n\r\n          <React.Suspense fallback={<LoadingFallback/>}>\r\n            {showEditing ? (\r\n              <ProjectsTableRowEditing\r\n                close={() => this.setState({editing: false})}\r\n                {...passThroughProps}\r\n              />\r\n            ) : (\r\n              <ProjectsTableRowDisplay\r\n                progress={progress}\r\n                progressCapped={progressCapped}\r\n                startEditing={() => this.setState({editing: true})}\r\n                {...passThroughProps}\r\n              />\r\n            )}\r\n          </React.Suspense>\r\n        </TableRow>\r\n      </RootRef>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ColorPicker from './ColorPicker'\r\nimport SetStartTimeCell from './SetStartTimeCell'\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Input from '@material-ui/core/Input';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport withAdd from './HOCs/withAdd'\r\nimport { SettingsContext } from './_Context'\r\nimport './css/AddProjectRow.css'\r\n\r\n\r\nconst AddProjectRow = props => (\r\n  <TableRow id=\"addProjectRow\">\r\n    <TableCell>\r\n      <ColorPicker\r\n        value={props.inputValues.color}\r\n        onChange={props.onColorChange} />\r\n    </TableCell>\r\n    <TableCell className=\"setNameCell\">\r\n      <div id=\"addProjectLabelDiv\">\r\n        <label htmlFor=\"addProjectNameInput\">\r\n          Add a project:\r\n        </label>\r\n      </div>\r\n      <Input\r\n        onChange={props.onInputChange.bind(this, \"name\")}\r\n        value={props.inputValues.name}\r\n        placeholder=\"Name\"\r\n        aria-label=\"Name\"\r\n        error={props.showErrors.name || props.showErrorProp}\r\n        onKeyPress={props.onKeyPress}\r\n        id=\"addProjectNameInput\"\r\n        autoFocus\r\n      />\r\n    </TableCell>\r\n\r\n    <SettingsContext.Consumer>\r\n      {({roundTo}) => (\r\n        <TableCell className=\"setDurationCell\">\r\n          <Input\r\n            onChange={props.onInputChange.bind(this, \"duration\")}\r\n            value={props.inputValues.duration}\r\n            placeholder=\"Duration\"\r\n            aria-label=\"Duration\"\r\n            error={props.showErrors.duration || props.showErrorProp}\r\n            onKeyPress={props.onKeyPress}\r\n            type=\"number\"\r\n            inputProps={{step: roundTo}}\r\n          /> minutes\r\n        </TableCell>\r\n      )}\r\n    </SettingsContext.Consumer>\r\n\r\n    {props.type !== \"default\" && (\r\n      <SetStartTimeCell\r\n        onChange={props.onTimeInputChange.bind(this, \"startTime\")}\r\n        value={props.inputValues.startTime}\r\n        firstInputId=\"setStartTimeInput\"\r\n        hError={props.showErrors.startTimeH || props.showErrorProp}\r\n        mError={props.showErrors.startTimeM || props.showErrorProp}\r\n        showErrors={props.showErrors}\r\n        onEnterPress={props.add}\r\n      />\r\n    )}\r\n    {props.type === \"default\" && (\r\n      <TableCell>\r\n        <Button onClick={props.openDaysDialog} variant=\"outlined\">\r\n          Days\r\n        </Button>\r\n      </TableCell>\r\n    )}\r\n    <TableCell>\r\n      <IconButton color=\"primary\"\r\n        style={{color: props.showErrorProp ? \"red\" : null}}\r\n        aria-label=\"Add the new project\"\r\n        onClick={props.add}>\r\n        <AddIcon />\r\n      </IconButton>\r\n    </TableCell>\r\n  </TableRow>\r\n)\r\n\r\nexport default withAdd(AddProjectRow)\r\n","import React from 'react';\r\nimport TimeSetter from './TimeSetter'\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\n// used in the ProjectsTable, both when adding and editing projects\r\nconst SetStartTimeCell = props => (\r\n  <TableCell className=\"setStartTimeCell\">\r\n    <div className=\"setStartTimeLabelDiv\">\r\n      <label htmlFor={props.firstInputId}>\r\n        Start:\r\n      </label>\r\n    </div>\r\n    <TimeSetter\r\n      onChange={props.onChange}\r\n      value={props.value}\r\n      firstInputId={props.firstInputId}\r\n      hError={props.hError}\r\n      mError={props.mError}\r\n      onEnterPress={props.onEnterPress}\r\n    />\r\n  </TableCell>\r\n)\r\n\r\nexport default SetStartTimeCell\r\n","import React, { Component } from 'react'\r\nimport { projectValidation, breakValidation } from '../util/validation'\r\nimport withInputFields from './withInputFields'\r\n\r\n// adds functionality for adding projects, defaultProjects and breaks (both desktop and mobile)\r\nconst withAdd = WrappedComponent => (\r\n  withInputFields(\r\n    class withAdd extends Component{\r\n      add = callback => {\r\n        let { inputValues, type } = this.props\r\n\r\n        // validation\r\n        let validation\r\n        if(type === \"break\") validation = breakValidation(inputValues)\r\n        else validation = projectValidation(inputValues, type === \"default\")\r\n\r\n        // if validation fails, show an error\r\n        if(!validation.valid){\r\n          let newState = this.props.showErrors\r\n          validation.errors.forEach(error => {\r\n            newState[error] = true\r\n          })\r\n          this.setState(newState)\r\n          return\r\n        }\r\n\r\n        // reset the state (depending on the type)\r\n        let newInputValues = {name: \"\"}\r\n        let newDefaultColorIndex\r\n        if(type !== \"default\") newInputValues.startTime = {h: \"\", m: \"\", pm: true}\r\n        if(type === \"break\"){\r\n          newInputValues.endTime = {h: \"\", m: \"\", pm: true}\r\n          this.props.onAddBreak(this.props.inputValues)\r\n        }\r\n        else{\r\n          newInputValues.duration = \"\"\r\n          newInputValues.color = inputValues.color // perserve the color\r\n\r\n          // if the user hasn't changed the color from the default, go to the next defaultColor\r\n          let defaultColors = this.props.settings.defaultColors\r\n          let defaultColorIndex = this.props.defaultColorIndex\r\n\r\n          newDefaultColorIndex = defaultColorIndex >= defaultColors.length - 1 ? 0 : ++defaultColorIndex\r\n\r\n          newInputValues.color = defaultColors[newDefaultColorIndex]\r\n\r\n          // call the props function\r\n          this.props.onAddProject(this.props.inputValues, newDefaultColorIndex)\r\n        }\r\n\r\n        // save to state\r\n        let newState = {inputValues: newInputValues}\r\n        if(type !== \"break\") newState.defaultColorIndex = newDefaultColorIndex\r\n        this.props.setState(newState)\r\n\r\n        // if there's a callback provided to the method, call it\r\n        if(typeof callback === \"function\") callback()\r\n      }\r\n\r\n      handleKeyPress = e => {if(e.key === \"Enter\") this.add()}\r\n\r\n      render = () => (\r\n        <WrappedComponent\r\n          {...this.props}\r\n          add={this.add}\r\n          onKeyPress={this.handleKeyPress}\r\n        />\r\n      )\r\n    }\r\n  )\r\n)\r\n\r\nexport default withAdd\r\n","export default /[{}[\\]\"':;`]/\r\n","import React from 'react';\r\nimport ProjectsTableRow from './ProjectsTableRow'\r\nimport AddProjectRow from './AddProjectRow'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport RootRef from '@material-ui/core/RootRef';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport './css/DefaultProjectsDrawer.css'\r\n\r\nconst DefaultProjectsDrawer = props => {\r\n  let header = (\r\n    <React.Fragment>\r\n      <Grid>\r\n        <Typography variant=\"h6\" className=\"drawerTitle\">Repetitive projects:</Typography>\r\n      </Grid>\r\n      <Grid>\r\n        <label style={{color: props.settings.darkTheme ? \"white\" : \"black\"}}>\r\n          Use repetitive projects\r\n          <Switch\r\n            color=\"primary\"\r\n            checked={props.useDefaultProjects && props.useDefaultProjects !== \"false\" /*handle string input*/}\r\n            onChange={props.onUseDefaultProjectsChange}\r\n            aria-label=\"Use default projects\"\r\n          />\r\n        </label>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.mobile ? header : <Grid container justify=\"space-between\">{header}</Grid>}\r\n      <Table className=\"projectsTable\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell/>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Duration</TableCell>\r\n            {!props.mobile && <TableCell>Days</TableCell>}\r\n            <TableCell/>\r\n          </TableRow>\r\n        </TableHead>\r\n        <DragDropContext onDragEnd={props.onDragEnd}>\r\n          <Droppable droppableId=\"0\">\r\n            {provided =>(\r\n              <RootRef rootRef={provided.innerRef}>\r\n                <TableBody {...provided.droppableProps}>\r\n                  {!props.projects.length && (\r\n                    <TableRow>\r\n                      <TableCell/>\r\n                      <TableCell colSpan={props.mobile ? 2 : 3}>\r\n                        You haven't set any repetitive projects yet\r\n                      </TableCell>\r\n                      <TableCell/>\r\n                    </TableRow>\r\n                  )}\r\n                  {props.projects.map((project, i) => (\r\n                    <Draggable key={project.id} draggableId={project.id.toString()} index={i}>\r\n                      {provided2 => (\r\n                        <ProjectsTableRow\r\n                          mode=\"planning\"\r\n                          row={project}\r\n                          currentTime={props.currentTime}\r\n                          provided={provided2}\r\n                          onColorChange={props.onColorChange}\r\n                          onDoneEditing={props.onDoneEditing}\r\n                          onProjectStateChange={props.onProjectStateChange}\r\n                          onDeleteProject={props.onDeleteProject}\r\n                          isDefaultProjects\r\n                          startEditingMobile={props.startEditingMobile}\r\n                        />\r\n                      )}\r\n                    </Draggable>\r\n                    ))}\r\n                  {provided.placeholder}\r\n                  {\r\n                    !props.mobile && (\r\n                      <AddProjectRow\r\n                        settings={props.settings}\r\n                        defaultColorIndex={props.defaultColorIndex}\r\n                        showErrors={{}}\r\n                        lastProject={props.projects[props.projects.length - 1]}\r\n                        onAddProject={props.onAddProject}\r\n                        type=\"default\"\r\n                      />\r\n                    )\r\n                  }\r\n                </TableBody>\r\n              </RootRef>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      </Table>\r\n      {\r\n        !props.mobile && (\r\n          <Grid container justify=\"center\">\r\n            <Button\r\n              onClick={props.onClose}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{margin: \".5rem\"}}>\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n        )\r\n      }\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default DefaultProjectsDrawer\r\n"],"sourceRoot":""}
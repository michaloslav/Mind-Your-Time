{"version":3,"sources":["MobileViews/AddProjectView.js","MobileViews/BackButton.js","util/makeDaysString.js","MobileViews/MobileInputFields.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_MobileInputFields__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_2___default","_HOCs_withAdd__WEBPACK_IMPORTED_MODULE_3__","withAdd","props","a","createElement","Object","assign","button","onClick","add","close","color","variant","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_icons_ArrowBack__WEBPACK_IMPORTED_MODULE_2__","_material_ui_icons_ArrowBack__WEBPACK_IMPORTED_MODULE_2___default","BackButton","className","aria-label","d","makeDaysString","dayNames","shortDayNames","joinNames","names","result","length","forEach","name","i","days","shortVersion","arguments","undefined","positiveCount","filter","val","namesArr","negativeDayNames","push","positiveDayNames","MobileInputFields","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_4___default","_BackButton__WEBPACK_IMPORTED_MODULE_1__","buttonTop","title","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_6___default","children","style","paddingTop","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_5___default","value","inputValues","onChange","onInputChange","bind","onKeyDown","placeholder","error","showErrors","showErrorProp","fullWidth","margin","autoFocus","container","justify","type","item","xs","duration","_TimeSetter__WEBPACK_IMPORTED_MODULE_2__","startTime","onTimeInputChange","firstInputId","hError","startTimeH","mError","startTimeM","onEnterPress","endTime","endTimeH","endTimeM","_ColorPicker__WEBPACK_IMPORTED_MODULE_3__","xl","onColorChange","alignItems","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_7___default","openDaysDialog"],"mappings":"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","file":"static/js/15.dc9869ac.chunk.js","sourcesContent":["import React from 'react'\r\nimport MobileInputFields from './MobileInputFields'\r\nimport Button from '@material-ui/core/Button'\r\nimport withAdd from '../HOCs/withAdd'\r\n\r\nconst AddProjectView = props => (\r\n  <MobileInputFields\r\n    {...props}\r\n    button={\r\n      <Button\r\n        onClick={() => {props.add(props.close)}}\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n      >\r\n        Add\r\n      </Button>\r\n    }\r\n  />\r\n)\r\n\r\nexport default withAdd(AddProjectView)\r\n","import React from 'react'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport '../css/BackButton.css'\r\n\r\nconst BackButton = props => (\r\n  <IconButton onClick={props.onClick} className=\"BackButton\" aria-label=\"Back\">\r\n    <ArrowBackIcon />\r\n  </IconButton>\r\n)\r\n\r\nexport default BackButton\r\n","const dayNames = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\r\nconst shortDayNames = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"]\r\n\r\n// adds commas and the & character\r\nfunction joinNames(names){\r\n  let result = \"\"\r\n  let length = names.length\r\n  names.forEach((name, i) => {\r\n    result += name\r\n    if(i === length - 2) result += \" & \"\r\n    if(i < length - 2) result += \", \"\r\n  })\r\n  return result\r\n}\r\n\r\n// takes the days object of a defaultProject (which is an array of 7 bools) and creates a string representation of it\r\nexport default function makeDaysString(days, shortVersion = false){\r\n  if(!days) return \"Every day\" // if it's not defined, assume it's all true\r\n\r\n  // count how many true values there are in the array\r\n  let positives = days.filter(val => val)\r\n  let positiveCount = positives.length\r\n\r\n  if(positiveCount === 7) return \"Every day\"\r\n  if(positiveCount === 0) return \"Never\"\r\n\r\n  let namesArr = shortVersion ? shortDayNames : dayNames\r\n\r\n  // if almost all the values are true, return somthing like \"Every day except Sunday\"\r\n  if(positiveCount >= 5){\r\n    let negativeDayNames = []\r\n    days.forEach((val, i) => {\r\n      if(!val) negativeDayNames.push(namesArr[i])\r\n    })\r\n\r\n    let result = shortVersion ? 'All' : 'Every day'\r\n    result += ' except ' + joinNames(negativeDayNames)\r\n    return result\r\n  }\r\n\r\n  // if there aren't that many true values, simply list the days\r\n  else{\r\n    let positiveDayNames = []\r\n    days.forEach((val, i) => {\r\n      if(val) positiveDayNames.push(namesArr[i])\r\n    })\r\n    return joinNames(positiveDayNames)\r\n  }\r\n}\r\n","import React from 'react'\r\nimport BackButton from './BackButton'\r\nimport TimeSetter from '../TimeSetter'\r\nimport ColorPicker from '../ColorPicker'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button'\r\nimport makeDaysString from '../util/makeDaysString'\r\nimport '../css/MobileInputFields.css'\r\n\r\n// the display element used both for adding and editing projects, breaks, defaultProject etc.\r\nconst MobileInputFields = props => (\r\n  <Grid className=\"MobileInputFields container\">\r\n    <BackButton onClick={props.close} />\r\n    <Grid className=\"buttonTop\">\r\n      {props.buttonTop}\r\n    </Grid>\r\n    {props.title && (\r\n      <Typography className=\"title\" variant=\"h6\" children={props.title} />\r\n    )}\r\n    <Grid style={props.title ? {} : {paddingTop: \"1.5rem\"}}>\r\n      <TextField\r\n        value={props.inputValues.name}\r\n        onChange={props.onInputChange.bind(this, \"name\")}\r\n        onKeyDown={props.onKeyDown}\r\n        placeholder=\"Name\"\r\n        aria-label=\"Name\"\r\n        error={props.showErrors.name || props.showErrorProp}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        autoFocus\r\n      />\r\n    </Grid>\r\n    <Grid className=\"durationAndStartTimeDiv\" container justify=\"space-between\">\r\n      {props.type !== \"break\" && (\r\n        <Grid\r\n          item\r\n          xs={props.type === \"default\" ? 12 : 6}\r\n          className=\"item\"\r\n        >\r\n          <label>Duration:</label>\r\n          <TextField\r\n            type=\"number\"\r\n            value={props.inputValues.duration}\r\n            onChange={props.onInputChange.bind(this, \"duration\")}\r\n            onKeyDown={props.onKeyDown}\r\n            placeholder=\"Duration\"\r\n            aria-label=\"Duration\"\r\n            error={props.showErrors.duration || props.showErrorProp}\r\n          />\r\n        </Grid>\r\n      )}\r\n      {props.type !== \"default\" && (\r\n        <Grid item xs={6} className=\"item\">\r\n          <label>Start:</label>\r\n          <TimeSetter\r\n            value={props.inputValues.startTime}\r\n            onChange={props.onTimeInputChange.bind(this, \"startTime\")}\r\n            firstInputId=\"newProjectStartTimeInput\"\r\n            hError={props.showErrors.startTimeH || props.showErrorProp}\r\n            mError={props.showErrors.startTimeM || props.showErrorProp}\r\n            showErrors={props.showErrors}\r\n            onEnterPress={props.add}\r\n          />\r\n        </Grid>\r\n      )}\r\n      {props.type === \"break\" && (\r\n        <Grid item xs={6} className=\"item\">\r\n          <label>End:</label>\r\n          <TimeSetter\r\n            value={props.inputValues.endTime}\r\n            onChange={props.onTimeInputChange.bind(this, \"endTime\")}\r\n            firstInputId=\"newProjectEndTimeInput\"\r\n            hError={props.showErrors.endTimeH || props.showErrors.endTime || props.showErrorProp}\r\n            mError={props.showErrors.endTimeM || props.showErrors.endTime || props.showErrorProp}\r\n            showErrors={props.showErrors}\r\n            onEnterPress={props.add}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n    {props.type !== \"break\" && (\r\n      <Grid>\r\n        Color:\r\n        <ColorPicker xl\r\n          value={props.inputValues.color}\r\n          onChange={props.onColorChange}\r\n        />\r\n      </Grid>\r\n    )}\r\n    {props.type === \"default\" && (\r\n      <Grid className=\"days\" container alignItems='baseline' justify=\"space-between\">\r\n        <Grid item xs={9}>\r\n          Days:<br/>{makeDaysString(props.inputValues.days)}\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Button onClick={props.openDaysDialog} variant=\"outlined\">\r\n            Edit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    )}\r\n    <Grid className=\"confirmDiv\" container justify=\"center\">\r\n      {props.button}\r\n    </Grid>\r\n  </Grid>\r\n)\r\n\r\nexport default MobileInputFields\r\n"],"sourceRoot":""}